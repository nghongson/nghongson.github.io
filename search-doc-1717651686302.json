{"searchDocs":[{"title":"First Blog Post","type":0,"sectionRef":"#","url":"/blog/first-blog-post","content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":"","version":null},{"title":"MDX Blog Post","type":0,"sectionRef":"#","url":"/blog/mdx-blog-post","content":"Blog posts support Docusaurus Markdown features, such as MDX. tip Use the power of React to create interactive blog posts. &lt;button onClick={() =&gt; alert('button clicked!')}&gt;Click me!&lt;/button&gt; Click me!","keywords":"","version":null},{"title":"Long Blog Post","type":0,"sectionRef":"#","url":"/blog/long-blog-post","content":"This is the summary of a very long blog post, Use a &lt;!-- truncate --&gt; comment to limit blog post size in the list view. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":"","version":null},{"title":"The Twelve Factors","type":0,"sectionRef":"#","url":"/docs/architect/12factors","content":"The Twelve Factors The twelve-factor app is a methodology for building software-as-a-service apps that: Use declarative formats for setup automation, to minimize time and cost for new developers joining the project;Have a clean contract with the underlying operating system, offering maximum portability between execution environments;Are suitable for deployment on modern cloud platforms, obviating the need for servers and systems administration;Minimize divergence between development and production, enabling continuous deployment for maximum agility;And can scale up without significant changes to tooling, architecture, or development practices. The twelve-factor methodology can be applied to apps written in any programming language, and which use any combination of backing services (database, queue, memory cache, etc). ########## I. Codebase One codebase tracked in revision control, many deploys (git repository)II. Dependencies Explicitly declare and isolate dependencies (composer, npm ...)III. Config Store config in the environment (env, .env, env.php)IV. Backing services Treat backing services as attached resources (mysql, s3 ...)V. Build, release, run Strictly separate build and run stages (deploys)VI. Processes Execute the app as one or more stateless processesVII. Port binding Export services via port binding (ports : 80, 443, 3000)VIII. Concurrency Scale out via the process modelIX. Disposability Maximize robustness with fast startup and graceful shutdownX. Dev/prod parity Keep development, staging, and production as similar as possibleXI. Logs Treat logs as event streams (logging error, warning, debug, ...)XII. Admin processes Run admin/management tasks as one-off processes","keywords":"","version":"Next"},{"title":"Welcome","type":0,"sectionRef":"#","url":"/blog/welcome","content":"Docusaurus blogging features are powered by the blog plugin. Simply add Markdown files (or folders) to the blog directory. Regular blog authors can be added to authors.yml. The blog post date can be extracted from filenames, such as: 2019-05-30-welcome.md2019-05-30-welcome/index.md A blog post folder can be convenient to co-locate blog post images: The blog supports tags as well! And if you don't want a blog: just delete this directory, and use blog: false in your Docusaurus config.","keywords":"","version":null},{"title":"Graphql","type":0,"sectionRef":"#","url":"/docs/architect/api/GraphQL","content":"","keywords":"","version":"Next"},{"title":"What’s the Difference Between GraphQL and REST?","type":0,"sectionRef":"#","url":"/docs/architect/api/Graphql vs RESTful","content":"What’s the Difference Between GraphQL and REST? The similarities between GraphQL and REST: Both GraphQL and REST are popular API architecture styles that enable the exchange of data between different services or applications in a client-server model. A client sends an API request to an endpoint or multiple endpoints on a serverThe server gives a response that contains data, data status, or error codes REST and GraphQL allow you to create, modify, update, and delete data on a separate application, service, or module via API.","keywords":"","version":"Next"},{"title":"GraphQL Cache","type":0,"sectionRef":"#","url":"/docs/architect/api/GraphQL Cache","content":"","keywords":"","version":"Next"},{"title":"Strategies for GraphQL caching​","type":1,"pageTitle":"GraphQL Cache","url":"/docs/architect/api/GraphQL Cache#Strategies-for-GraphQL-caching","content":" ","version":"Next","tagName":"h2"},{"title":"Client cache side​","type":1,"pageTitle":"GraphQL Cache","url":"/docs/architect/api/GraphQL Cache#Client-cache-side","content":" ","version":"Next","tagName":"h2"},{"title":"Reading and writing to the cache​","type":1,"pageTitle":"GraphQL Cache","url":"/docs/architect/api/GraphQL Cache#Reading-and-writing-to-the-cache","content":" ","version":"Next","tagName":"h3"},{"title":"ApolloClient InMemoryCache​","type":1,"pageTitle":"GraphQL Cache","url":"/docs/architect/api/GraphQL Cache#ApolloClient-InMemoryCache","content":" ","version":"Next","tagName":"h3"},{"title":"Server cache side​","type":1,"pageTitle":"GraphQL Cache","url":"/docs/architect/api/GraphQL Cache#Server-cache-side","content":" ","version":"Next","tagName":"h2"},{"title":"Setting cache control for a type​","type":1,"pageTitle":"GraphQL Cache","url":"/docs/architect/api/GraphQL Cache#Setting-cache-control-for-a-type","content":" ","version":"Next","tagName":"h3"},{"title":"Caching GET requests​","type":1,"pageTitle":"GraphQL Cache","url":"/docs/architect/api/GraphQL Cache#Caching-GET-requests","content":" ","version":"Next","tagName":"h3"},{"title":"A concept Document Caching urql​","type":1,"pageTitle":"GraphQL Cache","url":"/docs/architect/api/GraphQL Cache#A-concept-Document-Caching-urql","content":"","version":"Next","tagName":"h2"},{"title":"GraphQL Best Practices","type":0,"sectionRef":"#","url":"/docs/architect/api/GraphQL Best Practices","content":"","keywords":"","version":"Next"},{"title":"HTTP​","type":1,"pageTitle":"GraphQL Best Practices","url":"/docs/architect/api/GraphQL Best Practices#HTTP","content":" ","version":"Next","tagName":"h2"},{"title":"GET request​","type":1,"pageTitle":"GraphQL Best Practices","url":"/docs/architect/api/GraphQL Best Practices#GET-request","content":" ","version":"Next","tagName":"h3"},{"title":"POST request​","type":1,"pageTitle":"GraphQL Best Practices","url":"/docs/architect/api/GraphQL Best Practices#POST-request","content":"","version":"Next","tagName":"h3"},{"title":"RESTFul","type":0,"sectionRef":"#","url":"/docs/architect/api/RESTFul","content":"RESTFul","keywords":"","version":"Next"},{"title":"Queries and Mutations​","type":1,"pageTitle":"Graphql","url":"/docs/architect/api/GraphQL#Queries-and-Mutations","content":" ","version":"Next","tagName":"h2"},{"title":"Schemas and Types​","type":1,"pageTitle":"Graphql","url":"/docs/architect/api/GraphQL#Schemas-and-Types","content":" ","version":"Next","tagName":"h2"},{"title":"Validation​","type":1,"pageTitle":"Graphql","url":"/docs/architect/api/GraphQL#Validation","content":" Fields Arguments Aliases Fragments Operation name Variables Variable definitions Default variables  query HeroNameAndFriends($episode: Episode = JEDI) { hero(episode: $episode) { name friends { name } } }  ","version":"Next","tagName":"h2"},{"title":"gRPC","type":0,"sectionRef":"#","url":"/docs/architect/api/gRPC","content":"gRPC","keywords":"","version":"Next"},{"title":"Background Process","type":0,"sectionRef":"#","url":"/docs/architect/Background Process","content":"Background Process","keywords":"","version":"Next"},{"title":"Thinking in Graphs","type":0,"sectionRef":"#","url":"/docs/architect/api/Thinking in Graphs","content":"Thinking in Graphs","keywords":"","version":"Next"},{"title":"Clean Architecture","type":0,"sectionRef":"#","url":"/docs/architect/Clean Architecture","content":"Clean Architecture","keywords":"","version":"Next"},{"title":"Asynchronous programming","type":0,"sectionRef":"#","url":"/docs/architect/Asynchronous","content":"","keywords":"","version":"Next"},{"title":"Synchronous​","type":1,"pageTitle":"Asynchronous programming","url":"/docs/architect/Asynchronous#Synchronous","content":" Pros: Easier to reason about, deterministic execution order, less complex error handling.Cons: Slower for long-running tasks, potentially slower overall execution time for multiple tasks.  ","version":"Next","tagName":"h3"},{"title":"Asynchronous​","type":1,"pageTitle":"Asynchronous programming","url":"/docs/architect/Asynchronous#Asynchronous","content":" Pros: Faster for concurrent tasks, better performance, ideal for parallel processing.Cons: More complex error handling, potential race conditions if not managed properly.  Golang: Golang is achieved using Goroutines, which are lightweight threads managed by the Go runtime.  package main import ( &quot;fmt&quot; &quot;time&quot; ) func task1() { time.Sleep(3 * time.Second) fmt.Println(&quot;Task 1 completed.&quot;) } func task2() { time.Sleep(2 * time.Second) fmt.Println(&quot;Task 2 completed.&quot;) } func main() { fmt.Println(&quot;Asynchronous Approach&quot;) start := time.Now() go task1() go task2() // Introduce a small sleep to allow Goroutines to execute time.Sleep(4 * time.Second) elapsed := time.Since(start) fmt.Printf(&quot;Total execution time: %s\\n&quot;, elapsed) }   Nodejs   ","version":"Next","tagName":"h3"},{"title":"Clean Code","type":0,"sectionRef":"#","url":"/docs/architect/Clean Code","content":"Clean Code","keywords":"","version":"Next"},{"title":"Concurrency & Parallelism","type":0,"sectionRef":"#","url":"/docs/architect/Concurrency & Parallelism","content":"Concurrency &amp; Parallelism","keywords":"","version":"Next"},{"title":"Cookies","type":0,"sectionRef":"#","url":"/docs/architect/Cookies","content":"Cookies SameSite cookie restrictions SameSite is a browser security mechanism that determines when a website's cookies are included in requests originating from other websites. SameSite cookie restrictions provide partial protection against a variety of cross-site attacks, including CSRF, cross-site leaks, and some CORS exploits. What is a site in the context of SameSite cookies? In the context of SameSite cookie restrictions, a site is defined as the top-level domain (TLD), usually something like .com or .net, plus one additional level of the domain name. This is often referred to as the TLD+1. When determining whether a request is same-site or not, the URL scheme is also taken into consideration. This means that a link from http://app.example.com to https://app.example.com is treated as cross-site by most browsers. The difference between a site and an origin is their scope; a site encompasses multiple domain names, whereas an origin only includes one. Although they're closely related, it's important not to use the terms interchangeably as conflating the two can have serious security implications. Two URLs are considered to have the same origin if they share the exact same scheme, domain name, and port. Although note that the port is often inferred from the scheme. Request from\tRequest to\tSame-site?\tSame-origin?https://example.com\thttps://example.com\tYes\tYes https://app.example.com\thttps://intranet.example.com\tYes\tNo: mismatched domain name https://example.com\thttps://example.com:8080\tYes\tNo: mismatched port https://example.com\thttps://example.co.uk\tNo: mismatched eTLD\tNo: mismatched domain name https://example.com\thttp://example.com\tNo: mismatched scheme\tNo: mismatched scheme How does SameSite work? Before the SameSite mechanism was introduced, browsers sent cookies in every request to the domain that issued them, even if the request was triggered by an unrelated third-party website. SameSite works by enabling browsers and website owners to limit which cross-site requests, if any, should include specific cookies. This can help to reduce users' exposure to CSRF attacks, which induce the victim's browser to issue a request that triggers a harmful action on the vulnerable website. All major browsers currently support the following SameSite restriction levels: StrictLaxNone To do this, they just have to include the SameSite attribute in the Set-Cookie response header, along with their preferred value:Set-Cookie: session=0F8tgdOhi9ynR1M9wa3ODa; SameSite=Strict Strict If a cookie is set with the SameSite=Strict attribute, browsers will not send it in any cross-site requests. Lax Lax SameSite restrictions mean that browsers will send the cookie in cross-site requests, but only if both of the following conditions are met The request uses the GET method.The request resulted from a top-level navigation by the user, such as clicking on a link. This means that the cookie is not included in cross-site POST requests, None If a cookie is set with the SameSite=None attribute, this effectively disables SameSite restrictions altogether, regardless of the browser. As a result, browsers will send this cookie in all requests to the site that issued it, even those that were triggered by completely unrelated third-party sites.","keywords":"","version":"Next"},{"title":"Abstract Factory","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/Abstract Factory","content":"Abstract Factory journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me ","keywords":"","version":"Next"},{"title":"Design patterns","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/","content":"","keywords":"","version":"Next"},{"title":"Creational design patterns​","type":1,"pageTitle":"Design patterns","url":"/docs/architect/design-patterns/#Creational-design-patterns","content":" In software engineering, creational design patterns are design patterns that deal with object creation mechanisms, trying to create objects in a manner suitable to the situation. The basic form of object creation could result in design problems or added complexity to the design. Creational design patterns solve this problem by somehow controlling this object creation.  Abstract FactoryBuilderFactory MethodObject PoolPrototypeSingleton  ","version":"Next","tagName":"h2"},{"title":"Structural design patterns​","type":1,"pageTitle":"Design patterns","url":"/docs/architect/design-patterns/#Structural-design-patterns","content":" These design patterns are all about Class and Object composition. Structural class-creation patterns use inheritance to compose interfaces. Structural object-patterns define ways to compose objects to obtain new functionality.  AdapterBridgeCompositeDecoratorFacadeFlyweightPrivate Class DataProxy  ","version":"Next","tagName":"h2"},{"title":"Behavioral design patterns​","type":1,"pageTitle":"Design patterns","url":"/docs/architect/design-patterns/#Behavioral-design-patterns","content":" These design patterns are all about Class's objects communication. Behavioral patterns are those patterns that are most specifically concerned with communication between objects.  Chain of responsibilityCommandInterpreterIteratorMediatorMementoNull ObjectObserverStateStrategyTemplate methodVisitor ","version":"Next","tagName":"h2"},{"title":"Adapter Pattern","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/adapter","content":"Adapter Pattern","keywords":"","version":"Next"},{"title":"bridge","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/bridge","content":"bridge","keywords":"","version":"Next"},{"title":"builder","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/builder","content":"builder","keywords":"","version":"Next"},{"title":"decorator","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/decorator","content":"decorator","keywords":"","version":"Next"},{"title":"chain-of-responsibility","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/chain-of-responsibility","content":"chain-of-responsibility","keywords":"","version":"Next"},{"title":"command","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/command","content":"command","keywords":"","version":"Next"},{"title":"composite","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/composite","content":"composite","keywords":"","version":"Next"},{"title":"factory-method","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/factory-method","content":"factory-method","keywords":"","version":"Next"},{"title":"facade","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/facade","content":"facade","keywords":"","version":"Next"},{"title":"Factory Pattern","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/factory-pattern","content":"Factory Pattern","keywords":"","version":"Next"},{"title":"flyweight","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/flyweight","content":"flyweight","keywords":"","version":"Next"},{"title":"mediator","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/mediator","content":"mediator","keywords":"","version":"Next"},{"title":"iterator","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/iterator","content":"iterator","keywords":"","version":"Next"},{"title":"memento","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/memento","content":"memento","keywords":"","version":"Next"},{"title":"Repository","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/Repository","content":"Repository","keywords":"","version":"Next"},{"title":"observer","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/observer","content":"observer","keywords":"","version":"Next"},{"title":"prototype","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/prototype","content":"prototype","keywords":"","version":"Next"},{"title":"proxy","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/proxy","content":"proxy","keywords":"","version":"Next"},{"title":"state","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/state","content":"state","keywords":"","version":"Next"},{"title":"signleton","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/signleton","content":"signleton","keywords":"","version":"Next"},{"title":"strategy","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/strategy","content":"strategy","keywords":"","version":"Next"},{"title":"visitor","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/visitor","content":"visitor","keywords":"","version":"Next"},{"title":"HTTP messages","type":0,"sectionRef":"#","url":"/docs/architect/HTTP messages","content":"HTTP messages HTTP messages are how data is exchanged between a server and a client. There are two types of messages: requests sent by the client to trigger an action on the server, and responses, the answer from the server. HTTP requests, and responses, share similar structure and are composed of: A start-line describing the requests to be implemented, or its status of whether successful or a failure. This is always a single line.An optional set of HTTP headers specifying the request, or describing the body included in the message.A blank line indicating all meta-information for the request has been sent.An optional body containing data associated with the request (like content of an HTML form), or the document associated with a response. The presence of the body and its size is specified by the start-line and HTTP headers.","keywords":"","version":"Next"},{"title":"template-method","type":0,"sectionRef":"#","url":"/docs/architect/design-patterns/template-method","content":"template-method","keywords":"","version":"Next"},{"title":"SOLID","type":0,"sectionRef":"#","url":"/docs/architect/SOLID","content":"","keywords":"","version":"Next"},{"title":"1, Single Responsibility Principle​","type":1,"pageTitle":"SOLID","url":"/docs/architect/SOLID#1-Single-Responsibility-Principle","content":" ","version":"Next","tagName":"h2"},{"title":"Coupling & Cohesion​","type":1,"pageTitle":"SOLID","url":"/docs/architect/SOLID#Coupling--Cohesion","content":" ","version":"Next","tagName":"h3"},{"title":"Package names​","type":1,"pageTitle":"SOLID","url":"/docs/architect/SOLID#Package-names","content":" ","version":"Next","tagName":"h3"},{"title":"Bad package names​","type":1,"pageTitle":"SOLID","url":"/docs/architect/SOLID#Bad-package-names","content":" ","version":"Next","tagName":"h3"},{"title":"Go’s UNIX philosophy​","type":1,"pageTitle":"SOLID","url":"/docs/architect/SOLID#Gos-UNIX-philosophy","content":" ","version":"Next","tagName":"h3"},{"title":"2, Open / Closed Principle​","type":1,"pageTitle":"SOLID","url":"/docs/architect/SOLID#2-Open--Closed-Principle","content":" ","version":"Next","tagName":"h2"},{"title":"3, Liskov Substitution Principle​","type":1,"pageTitle":"SOLID","url":"/docs/architect/SOLID#3-Liskov-Substitution-Principle","content":" ","version":"Next","tagName":"h2"},{"title":"4, Interface Segregation Principle​","type":1,"pageTitle":"SOLID","url":"/docs/architect/SOLID#4-Interface-Segregation-Principle","content":" ","version":"Next","tagName":"h2"},{"title":"Interfaces​","type":1,"pageTitle":"SOLID","url":"/docs/architect/SOLID#Interfaces","content":" ","version":"Next","tagName":"h3"},{"title":"5, Dependency Inversion Principle​","type":1,"pageTitle":"SOLID","url":"/docs/architect/SOLID#5-Dependency-Inversion-Principle","content":"","version":"Next","tagName":"h2"},{"title":"K.I.S.S Principle","type":0,"sectionRef":"#","url":"/docs/architect/KISS Principle","content":"","keywords":"","version":"Next"},{"title":"KISS - Keep it simple stupid:​","type":1,"pageTitle":"K.I.S.S Principle","url":"/docs/architect/KISS Principle#KISS---Keep-it-simple-stupid","content":" Most systems work best if they are kept simple rather than making them complex  ","version":"Next","tagName":"h2"},{"title":"YAGNI - “You Aren’t Gonna Need It”:​","type":1,"pageTitle":"K.I.S.S Principle","url":"/docs/architect/KISS Principle#YAGNI---You-Arent-Gonna-Need-It","content":" Coding some extra features “just in case we need them” or thinking“we will eventually need them”. “Do the Simplest Thing That Could Possibly Work”  ","version":"Next","tagName":"h2"},{"title":"DRY - “Don’t Repeat Yourself”:​","type":1,"pageTitle":"K.I.S.S Principle","url":"/docs/architect/KISS Principle#DRY---Dont-Repeat-Yourself","content":" The DRY principle, formulated by Andrew Hunt and David Thomas in their book The Pragmatic Programmer, states that “every piece of knowledge must have a single, unambiguous, authoritative representation within a system.&quot; In other words, you must try to maintain the behavior of a functionality of the system in a single piece of code. ","version":"Next","tagName":"h2"},{"title":"Books","type":0,"sectionRef":"#","url":"/docs/books","content":"Books Head First Design PatternPatterns of Enterprise AplicationDebian handbook VN","keywords":"","version":"Next"},{"title":"Refactoring Code","type":0,"sectionRef":"#","url":"/docs/architect/Refactoring/","content":"","keywords":"","version":"Next"},{"title":"Technical debt​","type":1,"pageTitle":"Refactoring Code","url":"/docs/architect/Refactoring/#Technical-debt","content":" “Technical debt” in regards to unclean code was originally suggested by Ward Cunningham. If you get a loan from a bank, this allows you to make purchases faster. You pay extra for expediting the process - you don’t just pay off the principal, but also the additional interest on the loan. Needless to say, you can even rack up so much interest that the amount of interest exceeds your total income, making full repayment impossible.  The same thing can happen with code. You can temporarily speed up without writing tests for new features, but this will gradually slow your progress every day until you eventually pay off the debt by writing tests.  ","version":"Next","tagName":"h2"},{"title":"Causes of technical debt​","type":1,"pageTitle":"Refactoring Code","url":"/docs/architect/Refactoring/#Causes-of-technical-debt","content":" Business pressureLack of understanding of the consequences of technical debtFailing to combat the strict coherence of componentsLack of testsLack of documentationLack of interaction between team membersLong-term simultaneous development in several branchesDelayed refactoringLack of compliance monitoringIncompetence  ","version":"Next","tagName":"h3"},{"title":"When to refactor​","type":1,"pageTitle":"Refactoring Code","url":"/docs/architect/Refactoring/#When-to-refactor","content":" Rule of Three  When you’re doing something for the first time, just get it done.When you’re doing something similar for the second time, cringe at having to repeat but do the same thing anyway.When you’re doing something for the third time, start refactoring.When adding a featureRefactoring helps you understand other people’s codeRefactoring makes it easier to add new featuresWhen fixing a bugProactive refactoring as it eliminates the need for special refactoring tasks later During a code reviewThe code review may be the last chance to tidy up the code before it becomes available to the public. ","version":"Next","tagName":"h2"},{"title":"Session","type":0,"sectionRef":"#","url":"/docs/architect/session","content":"","keywords":"","version":"Next"},{"title":"What is session?​","type":1,"pageTitle":"Session","url":"/docs/architect/session#What-is-session","content":" ","version":"Next","tagName":"h2"},{"title":"Session & Cookies​","type":1,"pageTitle":"Session","url":"/docs/architect/session#Session--Cookies","content":" Session server side Cookie client side (browser)  ","version":"Next","tagName":"h2"},{"title":"Session-Based vs. Token-Based Authentication​","type":1,"pageTitle":"Session","url":"/docs/architect/session#Session-Based-vs-Token-Based-Authentication","content":" ","version":"Next","tagName":"h2"},{"title":"Express session​","type":1,"pageTitle":"Session","url":"/docs/architect/session#Express-session","content":" import * as session from 'express-session'; var app = express() app.set('trust proxy', 1) // trust first proxy app.use(session({ secret: 'keyboard cat', resave: false, saveUninitialized: true, cookie: { secure: true }, })) app.use(function (req, res, next) { if (!req.session.views) { req.session.views = {} } // get the url pathname var pathname = parseurl(req).pathname // count the views req.session.views[pathname] = (req.session.views[pathname] || 0) + 1 next() })   Redis  npm install redis connect-redis express-session import RedisStore from &quot;connect-redis&quot; import session from &quot;express-session&quot; import {createClient} from &quot;redis&quot; // Initialize client. let redisClient = createClient() redisClient.connect().catch(console.error) // Initialize store. let redisStore = new RedisStore({ client: redisClient, prefix: &quot;myapp:&quot;, }) // Initialize session storage. app.use( session({ store: redisStore, resave: false, // required: force lightweight session keep alive (touch) saveUninitialized: false, // recommended: only save session when data exists secret: &quot;keyboard cat&quot;, }), )   ","version":"Next","tagName":"h3"},{"title":"NestJs​","type":1,"pageTitle":"Session","url":"/docs/architect/session#NestJs","content":" import * as session from 'express-session'; // somewhere in your initialization file app.use( session({ secret: 'my-secret', resave: false, saveUninitialized: false, store: new redisStore({...}), }), );   @Get() findAll(@Req() request: Request) { request.session.visits = request.session.visits ? request.session.visits + 1 : 1; } @Get() findAll(@Session() session: Record&lt;string, any&gt;) { session.visits = session.visits ? session.visits + 1 : 1; }   ","version":"Next","tagName":"h3"},{"title":"Gin session​","type":1,"pageTitle":"Session","url":"/docs/architect/session#Gin-session","content":" package main import ( &quot;github.com/gin-contrib/sessions&quot; &quot;github.com/gin-contrib/sessions/cookie&quot; &quot;github.com/gin-gonic/gin&quot; ) func main() { r := gin.Default() store := cookie.NewStore([]byte(&quot;secret&quot;)) r.Use(sessions.Sessions(&quot;mysession&quot;, store)) r.GET(&quot;/hello&quot;, func(c *gin.Context) { session := sessions.Default(c) if session.Get(&quot;hello&quot;) != &quot;world&quot; { session.Set(&quot;hello&quot;, &quot;world&quot;) session.Save() } c.JSON(200, gin.H{&quot;hello&quot;: session.Get(&quot;hello&quot;)}) }) r.Run(&quot;:8000&quot;) }   cookie-based  package main import ( &quot;github.com/gin-contrib/sessions&quot; &quot;github.com/gin-contrib/sessions/cookie&quot; &quot;github.com/gin-gonic/gin&quot; ) func main() { r := gin.Default() store := cookie.NewStore([]byte(&quot;secret&quot;)) r.Use(sessions.Sessions(&quot;mysession&quot;, store)) r.GET(&quot;/incr&quot;, func(c *gin.Context) { session := sessions.Default(c) var count int v := session.Get(&quot;count&quot;) if v == nil { count = 0 } else { count = v.(int) count++ } session.Set(&quot;count&quot;, count) session.Save() c.JSON(200, gin.H{&quot;count&quot;: count}) }) r.Run(&quot;:8000&quot;) }   Redis  package main import ( &quot;github.com/gin-contrib/sessions&quot; &quot;github.com/gin-contrib/sessions/redis&quot; &quot;github.com/gin-gonic/gin&quot; ) func main() { r := gin.Default() store, _ := redis.NewStore(10, &quot;tcp&quot;, &quot;localhost:6379&quot;, &quot;&quot;, []byte(&quot;secret&quot;)) r.Use(sessions.Sessions(&quot;mysession&quot;, store)) r.GET(&quot;/incr&quot;, func(c *gin.Context) { session := sessions.Default(c) var count int v := session.Get(&quot;count&quot;) if v == nil { count = 0 } else { count = v.(int) count++ } session.Set(&quot;count&quot;, count) session.Save() c.JSON(200, gin.H{&quot;count&quot;: count}) }) r.Run(&quot;:8000&quot;) }   ","version":"Next","tagName":"h3"},{"title":"Go fiber session​","type":1,"pageTitle":"Session","url":"/docs/architect/session#Go-fiber-session","content":" import ( &quot;github.com/gofiber/fiber/v3&quot; &quot;github.com/gofiber/fiber/v3/middleware/session&quot; ) // Initialize default config // This stores all of your app's sessions store := session.New() app.Get(&quot;/&quot;, func(c fiber.Ctx) error { // Get session from storage sess, err := store.Get(c) if err != nil { panic(err) } // Get value name := sess.Get(&quot;name&quot;) // Set key/value sess.Set(&quot;name&quot;, &quot;john&quot;) // Get all Keys keys := sess.Keys() // Delete key sess.Delete(&quot;name&quot;) // Destroy session if err := sess.Destroy(); err != nil { panic(err) } // Sets a specific expiration for this session sess.SetExpiry(time.Second * 2) // Save session if err := sess.Save(); err != nil { panic(err) } return c.SendString(fmt.Sprintf(&quot;Welcome %v&quot;, name)) })   Default Config var ConfigDefault = Config{ Expiration: 24 * time.Hour, KeyLookup: &quot;cookie:session_id&quot;, KeyGenerator: utils.UUIDv4, source: &quot;cookie&quot;, sessionName: &quot;session_id&quot;, } Constants const ( SourceCookie Source = &quot;cookie&quot; SourceHeader Source = &quot;header&quot; SourceURLQuery Source = &quot;query&quot; )   Custom Storage/Database  import &quot;github.com/gofiber/storage/redis/v3&quot; // Initialize default config storage := redis.New() // Initialize custom config storage := redis.New(redis.Config{ Host: &quot;127.0.0.1&quot;, Port: 6379, Username: &quot;&quot;, Password: &quot;&quot;, Database: 0, Reset: false, TLSConfig: nil, PoolSize: 10 * runtime.GOMAXPROCS(0), }) store := session.New(session.Config{ Storage: storage, })   ","version":"Next","tagName":"h3"},{"title":"Ref:​","type":1,"pageTitle":"Session","url":"/docs/architect/session#Ref","content":" session ","version":"Next","tagName":"h2"},{"title":"How To Optimize MySQL","type":0,"sectionRef":"#","url":"/docs/database/mysql/how-to-optimize-MySQL","content":"How To Optimize MySQL InnoDB VS MyISAM Indexes Database Structure Optimizing SQL Statements Select StatementsDESCRIBE StatementEXPLAIN Statement Optimizing for MEMORY Tables Optimizing Locking Operations Buffering and Caching","keywords":"","version":"Next"},{"title":"Caching in Next.js","type":0,"sectionRef":"#","url":"/docs/database/mysql/Replication","content":"Caching in Next.js","keywords":"","version":"Next"},{"title":"reset-password","type":0,"sectionRef":"#","url":"/docs/database/mysql/reset-password","content":"reset-password SET @email='', @passwd='', @salt=MD5(RAND()); UPDATE customer_entity SET password_hash = CONCAT(SHA2(CONCAT(@salt, @passwd), 256), ':', @salt, ':1') WHERE email = @email; SET @email='', @passwd='Admin@123', @salt=MD5(RAND()); UPDATE customer_entity SET password_hash = CONCAT(SHA2(CONCAT(@salt, @passwd), 256), ':', @salt, ':1') WHERE email = @email;","keywords":"","version":"Next"},{"title":"References","type":0,"sectionRef":"#","url":"/docs/database/mysql/references","content":"","keywords":"","version":"Next"},{"title":"Libs​","type":1,"pageTitle":"References","url":"/docs/database/mysql/references#Libs","content":" slp is a MySQL SlowLog Profiler. ","version":"Next","tagName":"h2"},{"title":"GoFiber","type":0,"sectionRef":"#","url":"/docs/golang/GoFiber/","content":"GoFiber An Express-inspired web framework written in Go.Fiber is a Go web framework built on top of Fasthttp, the fastest HTTP engine for Go. It's designed to ease things up for fast development with zero memory allocation and performance in mind.","keywords":"","version":"Next"},{"title":"GORM","type":0,"sectionRef":"#","url":"/docs/golang/GORM/","content":"GORM The fantastic ORM library for Golang, aims to be developer friendly.gorm github","keywords":"","version":"Next"},{"title":"GraphQL Server Generator for Go","type":0,"sectionRef":"#","url":"/docs/golang/Graphql/GraphQL Server Generator for Go","content":"GraphQL Server Generator for Go read more","keywords":"","version":"Next"},{"title":"2FA","type":0,"sectionRef":"#","url":"/docs/mage2/2FA","content":"2FA","keywords":"","version":"Next"},{"title":"Docs","type":0,"sectionRef":"#","url":"/docs/intro","content":"Docs This docs help me saving and systematically reminding of the ideas, inspirations, insights, and connections: ProgrammingSoftware ArchitectVimLinux...","keywords":"","version":"Next"},{"title":"Magento Admin","type":0,"sectionRef":"#","url":"/docs/mage2/admin","content":"Magento Admin","keywords":"","version":"Next"},{"title":"SOLID Golang","type":0,"sectionRef":"#","url":"/docs/golang/SOLID Golang","content":"","keywords":"","version":"Next"},{"title":"Liskov Substitution Principle​","type":1,"pageTitle":"SOLID Golang","url":"/docs/golang/SOLID Golang#Liskov-Substitution-Principle","content":" The Liskov substitution principle states, roughly, that two types are substitutable if they exhibit behaviour such that the caller is unable to tell the difference. Go does not have classes, or inheritance, so substitution cannot be implemented in terms of an abstract class hierarchy.  Instead, substitution is the purview of Go’s interfaces.​  In Go, types are not required to nominate that they implement a particular interface, instead any type implements an interface simply provided it has methods whose signature matches the interface declaration.  type Reader interface { // Read reads up to len(buf) bytes into buf. Read(buf []byte) (n int, err error) }   ","version":"Next","tagName":"h2"},{"title":"Interface Segregation Principle​","type":1,"pageTitle":"SOLID Golang","url":"/docs/golang/SOLID Golang#Interface-Segregation-Principle","content":" The fourth principle is the interface segregation principle, &quot;Clients should not be forced to depend on methods they do not use.&quot;  In Go, the application of the interface segregation principle can refer to a process of isolating the behaviour required for a function to do its job.  // Save writes the contents of doc to the file f. func Save(f *os.File, doc *Document) error   ","version":"Next","tagName":"h2"},{"title":"Dependency Inversion Principle​","type":1,"pageTitle":"SOLID Golang","url":"/docs/golang/SOLID Golang#Dependency-Inversion-Principle","content":" the final SOLID principle is the dependency inversion principle, which states:  High-level modules should not depend on low-level modules. Both should depend on abstractions. Abstractions should not depend on details. Details should depend on abstractions.   The context of Go, is the structure of your import graph. In Go, your import graph must be acyclic. A failure to respect this acyclic requirement is grounds for a compilation failure, but more gravely represents a serious error in design.  Solid Golang design ","version":"Next","tagName":"h2"},{"title":"Magento API","type":0,"sectionRef":"#","url":"/docs/mage2/api-m2","content":"Magento API","keywords":"","version":"Next"},{"title":"Asynchronous","type":0,"sectionRef":"#","url":"/docs/mage2/Asynchronous","content":"","keywords":"","version":"Next"},{"title":"DeferredInterface​","type":1,"pageTitle":"Asynchronous","url":"/docs/mage2/Asynchronous#DeferredInterface","content":" DeferredInterface to use with asynchronous operations. This allows client code to work with asynchronous operations just as it would with standard operations.  Magento\\Framework\\Async\\DeferredInterface interface DeferredInterface { /** * @return mixed Value. * @throws \\Throwable */ public function get(); public function isDone(): bool; }   When the client code needs the result, the get() method will be called to retrieve the result.isDone() can be used to see whether the code has completed. There are 2 types of asynchronous operations where DeferredInterface can be used to describe the result:  With asynchronous operations in progress, calling get() would wait for them to finish and return their result.With deferred operations, get() would actually start the operation, wait for it to finish, and then return the result. Sometimes tasks, functions require more control over long asynchronous operations.  Magento\\Framework\\Async\\CancelableDeferredInterface interface CancelableDeferredInterface extends DeferredInterface { /** * @param bool $force Cancel operation even if it's already started. * @return void * @throws CancelingDeferredException When failed to cancel. */ public function cancel(bool $force = false): void; /** * @return bool */ public function isCancelled(): bool; }   ","version":"Next","tagName":"h2"},{"title":"Client code​","type":1,"pageTitle":"Asynchronous","url":"/docs/mage2/Asynchronous#Client-code","content":" public function aMethod() { //Started executing 1st operation $operationA = $serviceA-&gt;executeOp(); //Executing 2nd operations at the same time $operationB = $serviceB-&gt;executeOp2(); //We need to wait for 1st operation to start operation #3 $serviceC-&gt;executeOp3($operationA-&gt;get()); //We don't have to wait for operation #2, let client code wait for it if it needs the result //Operation number #3 is being executed simultaneously with operation #2 return $operationB; }   ","version":"Next","tagName":"h2"},{"title":"ProxyDeferredFactory​","type":1,"pageTitle":"Asynchronous","url":"/docs/mage2/Asynchronous#ProxyDeferredFactory","content":" Using DeferredInterface for background operations Using DeferredInterface for deferred operations ","version":"Next","tagName":"h2"},{"title":"The Catalog on Magento","type":0,"sectionRef":"#","url":"/docs/mage2/catalog","content":"The Catalog on Magento","keywords":"","version":"Next"},{"title":"Caching layer for Magento services","type":0,"sectionRef":"#","url":"/docs/mage2/caching-layer","content":"Caching layer for Magento services Cache is one of the most important parts in a modern web application architecture. Magento caching layer should effectively improve: PerformanceAvailabilityScalability Caching should be implemented on several levels: Caching of http-responses returned by BFF (Backend for Frontend)Application data caching (results of DB queries, merged configurations etc.) BFF http-responses contains static assets, public and private dynamic content. Static assets should be cached using CDN. Reverse proxy should cache public content. It could be Varnish (acts as reverse proxy) or Fastly (combines reverse proxy and CDN functions). Varnish and Fastly are already integrated with Magento. Reverse proxy uses lazy caching approach. Beside performance this type of cache has next benefits Protection against outages - can optionally serve stale content when there is a problem with origin serverScalability - number of caching nodes can be increasedFlexibility – Varnish Configuration Language (VCL) builds customized solutions, rules and modules","keywords":"","version":"Next"},{"title":"The Checkout on Magento","type":0,"sectionRef":"#","url":"/docs/mage2/checkout","content":"The Checkout on Magento","keywords":"","version":"Next"},{"title":"The Customer Manager on Magento","type":0,"sectionRef":"#","url":"/docs/mage2/customer-manager","content":"The Customer Manager on Magento","keywords":"","version":"Next"},{"title":"collect-totals","type":0,"sectionRef":"#","url":"/docs/mage2/collect-totals","content":"collect-totals","keywords":"","version":"Next"},{"title":"customize-cart-attrs","type":0,"sectionRef":"#","url":"/docs/mage2/customize-cart-attrs","content":"customize-cart-attrs","keywords":"","version":"Next"},{"title":"Debug M2","type":0,"sectionRef":"#","url":"/docs/mage2/debugs","content":"Debug M2","keywords":"","version":"Next"},{"title":"Docker Image","type":0,"sectionRef":"#","url":"/docs/mage2/Docker Image","content":"Docker Image","keywords":"","version":"Next"},{"title":"Documents references","type":0,"sectionRef":"#","url":"/docs/mage2/documents-references","content":"Documents references Mage2 RepositoryMage2 Developer Documentation- Magento DevsMage2 Certified Professional Developer Plus Study Guide of MagentoMagento ArchitectureMage2 Design Patterns - Max PronkoMage2 Exam NotesMage2 ExamSwiftotter Magento 2 Study GuideMagento Kubernetes - A complete guideModules","keywords":"","version":"Next"},{"title":"Authorization","type":0,"sectionRef":"#","url":"/docs/mage2/authorization","content":"","keywords":"","version":"Next"},{"title":"Pages (controllers)​","type":1,"pageTitle":"Authorization","url":"/docs/mage2/authorization#Pages-controllers","content":" ","version":"Next","tagName":"h2"},{"title":"RESTful/SOAP web API endpoints​","type":1,"pageTitle":"Authorization","url":"/docs/mage2/authorization#RESTfulSOAP-web-API-endpoints","content":" ","version":"Next","tagName":"h2"},{"title":"UI components​","type":1,"pageTitle":"Authorization","url":"/docs/mage2/authorization#UI-components","content":" ","version":"Next","tagName":"h2"},{"title":"Explicit authorization​","type":1,"pageTitle":"Authorization","url":"/docs/mage2/authorization#Explicit-authorization","content":" ","version":"Next","tagName":"h2"},{"title":"Page (controller) for authenticated customers​","type":1,"pageTitle":"Authorization","url":"/docs/mage2/authorization#Page-controller-for-authenticated-customers","content":" class MyController implements \\Magento\\Framework\\App\\ActionInterface, \\Magento\\Framework\\App\\Action\\HttpGetActionInterface { private \\Magento\\Authorization\\Model\\UserContextInterface $userContext; ... public function construct(\\Magento\\Authorization\\Model\\UserContextInterface $userContext) { $this-&gt;userContext = $userContext; } ... public function execute() { ... if ($this-&gt;userContext-&gt;getUserType() == UserContextInterface::USER_TYPE_CUSTOMER &amp;&amp; $this-&gt;userContext-&gt;getUserId()) { ... } else { throw new AuthorizationException(__('Please log in')); } } }   ","version":"Next","tagName":"h3"},{"title":"GraphQL node for authenticated customers​","type":1,"pageTitle":"Authorization","url":"/docs/mage2/authorization#GraphQL-node-for-authenticated-customers","content":" class MyResolver implements \\Magento\\Framework\\GraphQl\\Query\\ResolverInterface { ... public function resolve( Field $field, $context, ResolveInfo $info, array $value = null, array $args = null ) { /** @var \\Magento\\GraphQl\\Model\\Query\\ContextInterface $context */ if (false === $context-&gt;getExtensionAttributes()-&gt;getIsCustomer()) { throw new GraphQlAuthorizationException(__('The current customer isn\\'t authorized.')); } ... } }   ","version":"Next","tagName":"h3"},{"title":"Ownership verification​","type":1,"pageTitle":"Authorization","url":"/docs/mage2/authorization#Ownership-verification","content":" if ($userContext-&gt;getUserType() === UserContextInterface::USER_TYPE_CUSTOMER &amp;&amp; $userContext-&gt;getUserId() === $wishListItem-&gt;getCustomerId()) { return $wishListItem; } else { throw new AuthorizationException(__('Not authorized')); }   ","version":"Next","tagName":"h3"},{"title":"Explicit authorization in blocks and UI component data providers​","type":1,"pageTitle":"Authorization","url":"/docs/mage2/authorization#Explicit-authorization-in-blocks-and-UI-component-data-providers","content":"","version":"Next","tagName":"h3"},{"title":"Determine the layout initialization process","type":0,"sectionRef":"#","url":"/docs/mage2/ layout-initialization-process","content":"","keywords":"","version":"Next"},{"title":"Determine how layout is compiled.​","type":1,"pageTitle":"Determine the layout initialization process","url":"/docs/mage2/ layout-initialization-process#Determine-how-layout-is-compiled","content":" View\\Layout::*build* = View\\Layout\\Builder::*build* - once  loadLayoutUpdates - reads layout xml files and DB updates by current handles, result in _updates array event layout_load_before generateLayoutXml - joins _updates into XML string, loads XML object, initiailzes _elements = [] layout.generateXmlno events generateLayoutBlocks - layout.generateElements event layout_generate_blocks_beforereaderPool-&gt;interpret - every reader checks for matching xml node name (attribute, body, head etc.), prepares page structuregeneratorPool-&gt;processadd top-level element as outputElement. default &quot;root&quot;event layout_generate_blocks_after  builder.generateLayoutBlocks -&gt; layout.generateElements readerPool.*interpret* -- schedules nodeReaders[type].interpret each element -- `Layout\\ReaderInterface` - html, move - body - own readerPool.interpret, but without 'body' reader - head - css,script,link,remove,meta,title,attribute - 'container', 'referenceContainer' --&gt; Layout\\Reader\\Container - 'block', 'referenceBlock' --&gt; Layout\\Reader\\Block - uiComponent `View\\Layout\\ReaderInterface::interpret` -- html, body, head, ui component, reader pool, container, move, block View\\Layout\\GeneratorPool.process -- generates blocks buildStructure generator[].*process* - head, body - block - creates blocks, sets layout, event `core_layout_block_create_after`, block 'actions' - container - sets tag, id, class, label, display - uiComponent - creates wrapper element, prepareComponent recursively etc. getOutput - renderElement(root) - renderNonCachedElement(root) -- hardcoded switch - is uiComponent -&gt; toHtml - is block -&gt; toHtml - is container -&gt; renderElement(child[]) - event `core_layout_render_element`   ","version":"Next","tagName":"h2"},{"title":"How would you debug your layout.xml files and verify that the right layout instructions are used?​","type":1,"pageTitle":"Determine the layout initialization process","url":"/docs/mage2/ layout-initialization-process#How-would-you-debug-your-layoutxml-files-and-verify-that-the-right-layout-instructions-are-used","content":" When XML object is created from string XML updates, this is a good place to examine resuls.View\\Layout\\Builder.generateLayoutXml or View\\Layout.generateXml is a good place to dump structure.  ","version":"Next","tagName":"h3"},{"title":"Determine how HTML output is rendered.​","type":1,"pageTitle":"Determine the layout initialization process","url":"/docs/mage2/ layout-initialization-process#Determine-how-HTML-output-is-rendered","content":" First external code calls layout.addOutputElement(name) to register top level elements for output generation. When layout.getOutput is called, it renders each outputElement.  View\\Layout::getOutputfor every registered _output elementView\\Layout::renderElement  When layout is build initially, it finds top level container and registers it as addOutputElement - default &quot;root&quot;.  ","version":"Next","tagName":"h2"},{"title":"How does Magento flush output, and what mechanisms exist to access and customize output?​","type":1,"pageTitle":"Determine the layout initialization process","url":"/docs/mage2/ layout-initialization-process#How-does-Magento-flush-output-and-what-mechanisms-exist-to-access-and-customize-output","content":" Render response:  action controller returns ResponseInterface object, e.g. View\\Response\\Pagefront controller returns this responseApp\\Http.launch application renders result, calling response.renderResultcontroller response renders contents and assigns to response.bodyApp\\Http event controller_front_send_response_before allows to modify response before returningApp\\Bootstrap object gets response object from App\\Httpresponse.sendResponse - Zend implementation - send headers, send content  Customize:  modify any response in event controller_front_send_response_beforeView\\Element\\AbstractBlock::toHtml event view_block_abstract_to_html_after  ","version":"Next","tagName":"h3"},{"title":"Determine module layout XML schema.​","type":1,"pageTitle":"Determine the layout initialization process","url":"/docs/mage2/ layout-initialization-process#Determine-module-layout-XML-schema","content":" Module layouts:  module/view/base/layout/module/view/frontend/layout/module/view/adminhtml/layout/  ","version":"Next","tagName":"h2"},{"title":"layout_generic.xsd​","type":1,"pageTitle":"Determine the layout initialization process","url":"/docs/mage2/ layout-initialization-process#layout_genericxsd","content":" Generic layout - useful for returning Ajax response. Doesn't have body, head, css etc., only pure structure:  &lt;layout xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:noNamespaceSchemaLocation=&quot;urn:magento:framework:View/Layout/etc/layout_generic.xsd&quot;&gt; &lt;container name=&quot;&quot; as=&quot;&quot; after=&quot;&quot; before=&quot;&quot; label=&quot;&quot; output=&quot;&quot; htmlTag=&quot;&quot; htmlClass=&quot;&quot; htmlId=&quot;&quot; /&gt; &lt;referenceContainer name=&quot;&quot; label=&quot;&quot; htmlTag=&quot;&quot; htmlClass=&quot;&quot; htmlId=&quot;&quot; display=&quot;true/false&quot; remove=&quot;true/false&quot; /&gt; &lt;block class=&quot;&quot; name=&quot;&quot; as=&quot;&quot; template=&quot;&quot; before=&quot;&quot; after=&quot;&quot; group=&quot;&quot; acl=&quot;&quot; aclResource=&quot;&quot; ifconfig=&quot;&quot; output=&quot;&quot; cacheable=&quot;bool&quot; ttl=&quot;int&quot; /&gt; &lt;referenceBlock name=&quot;&quot; template=&quot;&quot; display=&quot;&quot; remove=&quot;&quot; /&gt; &lt;update handle=&quot;name&quot; /&gt; &lt;move element=&quot;&quot; destination=&quot;&quot; as=&quot;&quot; after=&quot;&quot; before=&quot;&quot; /&gt; &lt;uiComponent component=&quot;&quot; name=&quot;&quot; as=&quot;&quot; before=&quot;&quot; after=&quot;&quot; group=&quot;&quot; aclResource=&quot;&quot; ifconfig=&quot;&quot; output=&quot;&quot; cacheable=&quot;&quot; ttl=&quot;&quot; /&gt; &lt;/config&gt;   ","version":"Next","tagName":"h3"},{"title":"page_configuration.xsd​","type":1,"pageTitle":"Determine the layout initialization process","url":"/docs/mage2/ layout-initialization-process#page_configurationxsd","content":" Same as layout plus:  top level layout selectionstructure is wrapped in body nodeadditional nodes - html attribute, head title, attribute and scripts  &lt;page layout=&quot;1column&quot; label=&quot;&quot; design_abstraction=&quot;custom / page_layout&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:noNamespaceSchemaLocation=&quot;urn:magento:framework:View/Layout/etc/page_configuration.xsd&quot; &gt; &lt;html&gt; &lt;attribute name=&quot;&quot; value=&quot;&quot; /&gt; &lt;/html&gt; &lt;head&gt; &lt;title&gt;Title&lt;/title&gt; &lt;css src defer ie_condition charset hreflang media rel rev sizes target type src_type /&gt; &lt;link src defer ie_condition charset hreflang media rel rev sizes target type src_type /&gt; &lt;meta content charset http-equiv name scheme /&gt; &lt;script src defer ie_condition async charset type src_type /&gt; &lt;remove src=&quot;&quot; /&gt; &lt;attribute name=&quot;&quot; value=&quot;&quot; /&gt; &lt;/head&gt; &lt;update handle=&quot;&quot; /&gt; &lt;body&gt; &lt;attribute name=&quot;&quot; value=&quot;&quot; /&gt; &lt;!-- container/block structure same as in generic layout --&gt; &lt;/body&gt; &lt;/page&gt;   ","version":"Next","tagName":"h3"},{"title":"layouts.xml - declare available page layouts​","type":1,"pageTitle":"Determine the layout initialization process","url":"/docs/mage2/ layout-initialization-process#layoutsxml---declare-available-page-layouts","content":" &lt;module_dir&gt;/view/&lt;area_code&gt;/layouts.xml &lt;theme_dir&gt;/&lt;Namespace&gt;_&lt;Module&gt;/layouts.xml base: empty frontend: 1column - extends empty2columns-left - extends 1column2columns-right - same as 2columns-left3columns - same as 2columns-left adminhtml: admin-emptyadmin-1columnadmin-2columns-left  ","version":"Next","tagName":"h3"},{"title":"page_layout.xsd​","type":1,"pageTitle":"Determine the layout initialization process","url":"/docs/mage2/ layout-initialization-process#page_layoutxsd","content":" Only containers  &lt;layout xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:noNamespaceSchemaLocation=&quot;urn:magento:framework:View/Layout/etc/page_layout.xsd&quot;&gt; &lt;referenceContainer /&gt; &lt;container /&gt; &lt;update /&gt; &lt;move /&gt; &lt;/layout&gt;   ","version":"Next","tagName":"h3"},{"title":"layout result.renderResult:​","type":1,"pageTitle":"Determine the layout initialization process","url":"/docs/mage2/ layout-initialization-process#layout-resultrenderResult","content":" layout.getOutput layout.build View\\Layout\\Builder.build: loadLayoutUpdatesgenerateLayoutXmlgenerateLayoutBlocks create result page - adds default handles page builder.build all normal layout XML is collected and is about to create blocks custom step before generating layout blocks  ","version":"Next","tagName":"h3"},{"title":"page result.renderResult:​","type":1,"pageTitle":"Determine the layout initialization process","url":"/docs/mage2/ layout-initialization-process#page-resultrenderResult","content":" View\\Result\\PageFactory.create View\\Result\\Page::addDefaultHandle - default, $fullActionName View\\Page\\Config.publicBuild = build View\\Page\\Builder.build - extends View\\Layout\\Builder, custom readPageLayout on step generateLayoutBlocks (inherit) loadLayoutUpdates (inherit) generateLayoutXml generateLayoutBlocks - additionally *readPageLayout* right before creating actual blocks, reads and merges page layout xml filesnew instance of View\\Model\\Layout\\Merge::load handles = '1column' -- uses subDir 'page_layout'`interprets found page nodes - schedules blocks. page layout instructions (root page template) are interpreted before othersoriginal generateLayoutBlocks *interprets*, then runs *generators* check View\\Page\\Config.pageLayout, e.g. &quot;1column&quot; adds default body classes - $fullActionName, page-layout-$layout renders block 'head.additional', 'require.js' assigns vars 'requireJs', 'headContent', 'headAdditional', 'htmlAttributes', 'headAttributes', 'bodyAttributes', 'loaderIcon' layout.getOutput -- already built renderPage result.template defined via app/etc/di.xmlinclude Magento_Theme::root.phtml  ","version":"Next","tagName":"h3"},{"title":"In your custom controller don't forget to add entity-specific IDs:​","type":1,"pageTitle":"Determine the layout initialization process","url":"/docs/mage2/ layout-initialization-process#In-your-custom-controller-dont-forget-to-add-entity-specific-IDs","content":" $page-&gt;addPageLayoutHandles(['id' =&gt; $category-&gt;getId()]);  - adds handle `$fullActionName_$param_$value` like `catalog_category_view_id_17` - informs full page cache of *entity specific page* `\\Magento\\Framework\\View\\EntitySpecificHandlesList::addHandle` *`\\Magento\\PageCache\\Model\\Layout\\MergePlugin::beforeValidateUpdate - entity-specific layout handles must not contain TTL e.g. catalog_category_view_id_15.xml: &lt;block ttl=&quot;3600&quot;&gt; ... will throw error * `\\Magento\\PageCache\\Observer\\ProcessLayoutRenderElement::_wrapEsi` - exclude entity-specific handles from ESI URL   View\\Layout\\Builder.build  loadLayoutUpdatesgenerateLayoutXmlgenerateLayoutBlocks  View\\Page\\Builder.build  extend generateLayoutBlocksreadPageLayout  ","version":"Next","tagName":"h3"},{"title":"File Collector​","type":1,"pageTitle":"Determine the layout initialization process","url":"/docs/mage2/ layout-initialization-process#File-Collector","content":" View\\File\\CollectorInterfaceView\\File\\Collector\\Decorator\\ModuleDependency - Decorator that sorts view files according to dependencies between modules they belong toView\\File\\Collector\\Decorator\\ModuleOutput - Decorator that filters out view files that belong to modules, output of which is prohibitedView\\File\\Collector\\Base - Source of base files introduced by modules  Collector\\Base - Source of base files introduced by modules  view/base/, view/{$area}/Collector\\Override\\Base - Source of view files that explicitly override base files introduced by modules theme/{$namespace}_{$module}/  Collector\\Theme - Source of view files introduced by a theme  theme/  Collector\\Override\\ThemeModular - Source of view files that explicitly override modular files of ancestor themes  theme/{$namespace}_{$module}/{$themeVendor}/{$themeName}/  Collector\\Library - Source of base layout files introduced by modules  lib_web/each inherited theme[]: theme/web/  ","version":"Next","tagName":"h3"},{"title":"How do you add new elements to the pages introduced by a given module?​","type":1,"pageTitle":"Determine the layout initialization process","url":"/docs/mage2/ layout-initialization-process#How-do-you-add-new-elements-to-the-pages-introduced-by-a-given-module","content":" &lt;block class=&quot;module\\block\\class&quot; template=&quot;new module template&quot; ... /&gt;   ","version":"Next","tagName":"h3"},{"title":"Demonstrate the ability to use layout fallback for customizations and debugging.​","type":1,"pageTitle":"Determine the layout initialization process","url":"/docs/mage2/ layout-initialization-process#Demonstrate-the-ability-to-use-layout-fallback-for-customizations-and-debugging","content":" View\\Element\\Template::getTemplateFile View\\Element\\Template\\File\\Resolver::getTemplateFileName(template, [module, area]) -- just caches in memory View\\FileSystem::getTemplateFileName -- detects module by Module_Name::template.phtml, adds default params* View\\Asset\\Repository::updateDesignParams - adds default missing params [object themeModel, locale] View\\Design\\FileResolution\\Fallback\\TemplateFile.getFile(area, ) -- minify html View\\Design\\FileResolution\\Fallback\\File.getFile -- calls resolver type='file' View\\Design\\FileResolution\\Fallback\\Resolver\\Simple.resolve View\\Design\\Fallback\\RulePool.getRule - by type: file, locale file, template file File fallback rule: when missing 'module_name': &lt;theme_dir&gt; when set 'module_name': &lt;theme_dir&gt;/&lt;module_name&gt;/templates&lt;module_dir&gt;/view/&lt;area_code&gt;/templates&lt;module_dir&gt;/view/base/templates View\\Design\\FileResolution\\Fallback\\Resolver\\Simple::resolveFile(fileRule) search file in each directory  ","version":"Next","tagName":"h2"},{"title":"How do you identify which exact layout.xml file is processed in a given scope?​","type":1,"pageTitle":"Determine the layout initialization process","url":"/docs/mage2/ layout-initialization-process#How-do-you-identify-which-exact-layoutxml-file-is-processed-in-a-given-scope","content":" ","version":"Next","tagName":"h3"},{"title":"How does Magento treat layout XML files with the same names in different modules?​","type":1,"pageTitle":"Determine the layout initialization process","url":"/docs/mage2/ layout-initialization-process#How-does-Magento-treat-layout-XML-files-with-the-same-names-in-different-modules","content":" They are merged in module sequence order. Additionally, modules marked as &quot;disable module output&quot; are skipped (though deprecated).  View\\File\\Collector\\Decorator\\ModuleDependency - Decorator that sorts view files according to dependencies between modules they belong to  View\\File\\Collector\\Decorator\\ModuleOutput - Decorator that filters out view files that belong to modules, output of which is prohibited  View\\File\\Collector\\Base - Source of base files introduced by modules  ","version":"Next","tagName":"h2"},{"title":"Identify the differences between admin and frontend scopes.​","type":1,"pageTitle":"Determine the layout initialization process","url":"/docs/mage2/ layout-initialization-process#Identify-the-differences-between-admin-and-frontend-scopes","content":" customized layout builder and page builders - automatically init messages block custom parent \\Magento\\Backend\\Block\\AbstractBlock auto inject AuthorizationInterface custom parent \\Magento\\Backend\\Block\\Template: available some properties - authorization, mathRandom, backendSession, formKey, class nameBuilderevent adminhtml_block_html_before - fired only when non-cached render. To compare, event view_block_abstract_to_html_after fires even when block loaded from cache customized &quot;block&quot; layout reader (runs interpret) -- reads &quot;acl&quot; block attribute customzied &quot;block&quot; layout generator - default block class=Magento\\Backend\\Block\\Template controller result object with additional methods: setActiveMenuaddBreadcrumbaddContent(block) - moves to 'content'addLeft(block)addJsmoveBlockToContainer  ","version":"Next","tagName":"h2"},{"title":"What differences exist for layout initialization for the admin scope?​","type":1,"pageTitle":"Determine the layout initialization process","url":"/docs/mage2/ layout-initialization-process#What-differences-exist-for-layout-initialization-for-the-admin-scope","content":" Custom layout and page builders - automatically initializes message block from message manager:\\Magento\\Backend\\Model\\View\\Layout\\Builder and \\Magento\\Backend\\Model\\View\\Page\\Builder:  afterGenerateBlock - called in the end of generateLayoutBlocks, the end of generation - layout-&gt;initMessages()getBlock('messages') or create new oneaddMessages from Message\\ManagerInterfaceaddStorageType('default') ","version":"Next","tagName":"h3"},{"title":"Using the Entity-Attribute-Value(EAV)","type":0,"sectionRef":"#","url":"/docs/mage2/eav","content":"Using the Entity-Attribute-Value(EAV) Product attributes For now, we’ll just quickly go through most important ones: group: Means that we add an attribute to the attribute group “General”, which is present in all attribute sets.type: varchar means that the values will be stored in the catalog_eav_varchar table.label: A label of the attribute (that is, how it will be rendered in the backend and on the frontend).source/frontend/backend: Special classes associated with the attribute: source model: provides a list of optionsfrontend: defines how it should be rendered on the frontendbackend: allows you to perform certain actions when an attribute is loaded or saved. In our example, it will be validation. Global: defines the scope of its values (global, website, or store)visible_on_front: A flag that defines whether an attribute should be shown on the “More Information” tab on the frontendis_html_allowed_on_front: Defines whether an attribute value may contain HTML Magento\\Eav\\Setup\\EavSetup $eavSetup $eavSetup-&gt;addAttribute( \\Magento\\Catalog\\Model\\Category::ENTITY, 'url_key', [ 'type' =&gt; 'varchar', 'label' =&gt; 'URL Key', 'input' =&gt; 'text', 'required' =&gt; false, 'sort_order' =&gt; 3, 'global' =&gt; \\Magento\\Eav\\Model\\Entity\\Attribute\\ScopedAttributeInterface::SCOPE_STORE, 'group' =&gt; 'General Information', ] ); $eavSetup-&gt;getAttributeId($eavSetup-&gt;getEntityTypeId('catalog_product'), 'your_attribute_code'); $eavSetup-&gt;addAttributeOption($options); ","keywords":"","version":"Next"},{"title":"Image Optimize","type":0,"sectionRef":"#","url":"/docs/mage2/Image Optimize","content":"Image Optimize","keywords":"","version":"Next"},{"title":"graphql","type":0,"sectionRef":"#","url":"/docs/mage2/graphql","content":"graphql","keywords":"","version":"Next"},{"title":"Magento Development Workflow","type":0,"sectionRef":"#","url":"/docs/mage2/guides","content":"","keywords":"","version":"Next"},{"title":"Reset password​","type":1,"pageTitle":"Magento Development Workflow","url":"/docs/mage2/guides#Reset-password","content":" SET @email='', @passwd='', @salt=MD5(RAND()); UPDATE customer_entity SET password_hash = CONCAT(SHA2(CONCAT(@salt, @passwd), 256), ':', @salt, ':1') WHERE email = @email;   ","version":"Next","tagName":"h2"},{"title":"Unlock 2FA login:​","type":1,"pageTitle":"Magento Development Workflow","url":"/docs/mage2/guides#Unlock-2FA-login","content":" $ G2FA_CODE=&quot;$(head -c 500 /dev/urandom | tr -dc 'a-zA-Z0-9$#&amp;' | fold -w 15 | head -n 1 | base32)&quot; $ bin/magento security:tfa:google:set-secret admin ${G2FA_CODE}   ","version":"Next","tagName":"h2"},{"title":"Linux Strace Command:​","type":1,"pageTitle":"Magento Development Workflow","url":"/docs/mage2/guides#Linux-Strace-Command","content":" The “strace” is a Linux command-line utility that is a useful and powerful tool to capture, monitor, and troubleshoot the programs in a system. It records and intercepts the system calls, which is quite helpful when some program crashes and does not execute as expected.  strace -e trace=lstat -s 9500 -f $(pgrep php-fpm | paste -s | sed -e 's/\\([0-9]\\+\\)/-p \\1/g' -e 's/\\t/ /g') 2&gt;&amp;1 | grep -i magezon [pid 3302010] lstat(&quot;/home/staging/public_html/app/code/Magezon/PageBuilder/registration.php&quot;, {st_mode=S_IFREG|0660, st_size=652, ...}) = 0 [pid 3302010] lstat(&quot;/home/staging/public_html/app/code/Magezon/Builder/registration.php&quot;, {st_mode=S_IFREG|0660, st_size=644, ...}) = 0 [pid 3302010] lstat(&quot;/home/staging/public_html/app/code/Magezon/Core/registration.php&quot;, {st_mode=S_IFREG|0660, st_size=637, ...}) = 0 [pid 3302010] lstat(&quot;/home/staging/public_html/app/code/Magezon/PageBuilderIconBox/registration.php&quot;, {st_mode=S_IFREG|0660, st_size=665, ...}) = 0 [pid 3302010] lstat(&quot;/home/staging/public_html/app/code/Magezon/PageBuilderPreview/registration.php&quot;, {st_mode=S_IFREG|0660, st_size=664, ...}) = 0 [pid 3302010] lstat(&quot;/home/staging/public_html/app/code/Magezon/PageBuilderPageableContainer/registration.php&quot;, {st_mode=S_IFREG|0660, st_size=718, ...}) = 0 strace -c -f $(pgrep php-fpm | paste -s | sed -e 's/\\([0-9]\\+\\)/-p \\1/g' -e 's/\\t/ /g') strace: Process 2157695 attached strace: Process 3302517 attached strace: Process 3302529 attached   % time seconds usecs/call calls errors syscall    25.95 0.019418 2 9091 3162 access 3.95 0.002953 3 894 2 openat 3.91 0.002925 2 1328 5 read 3.84 0.002876 2 1198 60 lstat 3.35 0.002509 1 1275 fstat 3.26 0.002439 1 2107 poll 2.74 0.002052 1 1750 recvfrom 2.59 0.001939 2 840 sendto ","version":"Next","tagName":"h2"},{"title":"json-schema","type":0,"sectionRef":"#","url":"/docs/mage2/json-schema","content":"json-schema","keywords":"","version":"Next"},{"title":"Management Cache on Magento","type":0,"sectionRef":"#","url":"/docs/mage2/magento-cache","content":"","keywords":"","version":"Next"},{"title":"Cache types​","type":1,"pageTitle":"Management Cache on Magento","url":"/docs/mage2/magento-cache#Cache-types","content":" ","version":"Next","tagName":"h2"},{"title":"Work with cache​","type":1,"pageTitle":"Management Cache on Magento","url":"/docs/mage2/magento-cache#Work-with-cache","content":" Commands frontend cache backend cache How do you add dynamic content to pages served from the full page cache Describe how to operate with cache clearing. How to clear the cache programmatically ","version":"Next","tagName":"h2"},{"title":"Working with files in Magento","type":0,"sectionRef":"#","url":"/docs/mage2/files","content":"","keywords":"","version":"Next"},{"title":"Files inaccessible by users​","type":1,"pageTitle":"Working with files in Magento","url":"/docs/mage2/files#Files-inaccessible-by-users","content":" Some files, generated or uploaded, need to be stored on the server for further processing or querying, but should not be directly accessible through a URL. Below are measures to avoid potential unauthorized access, path traversal, or RCE problems from such files  Use random file names and extensions (it's better to use no file extensions); do not trust file names provided by usersStore files in a directory specifically for generated/uploaded filesDo not store these files in an HTTP accessible folder (like /pub)Store file records in a database if the files need to be assigned to an entityDo not trust user provided file names/IDs when deleting files; validate file ownership through the database  class MyClass { private \\Magento\\Framework\\Filesystem $filesystem; private \\Magento\\Framework\\Filesystem\\Directory\\WriteFactory $writeFactory; private \\Magento\\Framework\\Math\\Random $rand; public function __construct( \\Magento\\Framework\\Filesystem $filesystem, \\Magento\\Framework\\Filesystem\\Directory\\WriteFactory $writeFactory, \\Magento\\Framework\\Math\\Random $rand ) { $this-&gt;filesystem = $filesystem; $this-&gt;writeFactory = $writeFactory; $this-&gt;rand = $rand; } ... public function workWithFiles(): void { ... //To read &quot;MAGENTO_ROOT/var&quot; sub-directories or files. $varDir = $this-&gt;filesystem-&gt;getDirectoryRead(\\Magento\\Framework\\App\\Filesystem\\DirectoryList::VAR_DIR); //Going to write files into a designated folder specific to these type of files and functionality //Getting WriteInterface instance of `MAGENTO_ROOT/var/my-modules-dir` $thisModulesFilesDir = $this-&gt;writeFactory-&gt;create($varDir-&gt;getAbsolutePath('my-modules-dir')); //Random file name $randomFileName = $this-&gt;rand-&gt;getRandomString(32); //Copying a file from the system temporary directory into it's new path $thisModulesFilesDir-&gt;getDriver() -&gt;copy($tmpUploadedOrGeneratedFilePath, $thisModulesFilesDir-&gt;getAbsolutePath($randomFileName)); } }   ","version":"Next","tagName":"h3"},{"title":"Files that require authorization​","type":1,"pageTitle":"Working with files in Magento","url":"/docs/mage2/files#Files-that-require-authorization","content":" You should treat files that require authorization to download the same way as inaccessible files; with a controller that performs authorization and then serves the file by outputting its content in response body  ","version":"Next","tagName":"h3"},{"title":"Publicly accessible media files​","type":1,"pageTitle":"Working with files in Magento","url":"/docs/mage2/files#Publicly-accessible-media-files","content":" Publicly accessible media files present higher risk and require special care because you must keep the user-provided path and file extension. You should verify the following  Media files can only be placed in a publicly accessible pathUploaded file path is inside the designated folder or its subdirectoriesExtension is safe (use an allow-list)File path is out of system folders that contain other application filesPrevent deleting system files in public foldersIdeally, verify user's relation to file (ownership), or containing directory before updating or deleting filesThe application uses the \\Magento\\Framework\\App\\Filesystem\\DirectoryList::PUB directory for public files.Uploaded file paths must be validated using the ReadInterface and WriteInterface instances, similar to the preceding example.\\Magento\\Framework\\Filesystem\\Io\\File can help extract file extensions from filenames.  class MyFileUploader { private const UPLOAD_DIR = 'my-module/customer-jpegs'; private \\Magento\\Framework\\Filesystem\\Io\\File $fileUtil; private array $allowedExt = ['jpg', 'jpeg']; \u0013 private \\Magento\\Framework\\Filesystem\\Directory\\WriteFactory $writeFactory; private \\Magento\\Framework\\Filesystem $filesystem; /** * @param string $customerId UserContextInterface::getUserId() - current customer * @param array $uploadedFileData uploaded file data from $_FILES * @return MediaFile * @throws \\Magento\\Framework\\Exception\\ValidatorException */ public function upload(string $customerId, array $uploadedFileData): MediaFile { //Get upload file's metadata $info = $this-&gt;fileUtil-&gt;getPathInfo($uploadedFileData['name']); //Validate extension is allowed if (!in_array($info['extension'], $this-&gt;allowedExt, true)) { throw new ValidationException('Only JPEG files allowed'); } //Initiate WriteInterface instance of the target directory //Target dir is a sub-dir of PUB $uploadDir = $this-&gt;writeFactory-&gt;create( $this-&gt;filesystem-&gt;getDirectoryRead(\\Magento\\Framework\\App\\Filesystem\\DirectoryList::PUB) -&gt;getAbsolutePath(self::UPLOAD_DIR) ); //Get target path if uploaded to the dir $realPath =$uploadDir-&gt;getDriver()-&gt;getRealPathSafety($uploadDir-&gt;getAbsolutePath($uploadedFileData['name'])); //Validate that the target file name is not a system file $this-&gt;validateNotSystemFile($realPath); //Validate that target folder (UPLOAD_DIR + ['name'] - ['basename']) is not a system folder $this-&gt;validateNotSystemFolder(preg_replace('/\\/[^\\/]+$/', '', $realPath)); //Validate that given file doesn't exist or is own by current customer $existingMediaFileInfo = $this-&gt;findFileByRelativePath($realPath); if ($existingMediaFileInfo &amp;&amp; $existingMediaFileInfo-&gt;getCustomerId() !== $customerId) { throw new ValidationException('Access denied'); } //Copy temp file to target path $uploadDir-&gt;getDriver()-&gt;copy( $uploadedFileData['tmp_name'], $realPath ); //Persist file info $mediaFile = new MediaFile($customerId, $realPath); return $this-&gt;persist($mediaFile); } }   ","version":"Next","tagName":"h3"},{"title":"Components​","type":1,"pageTitle":"Working with files in Magento","url":"/docs/mage2/files#Components","content":" Get path to components   Magento\\Framework\\Component\\ComponentRegistrar /**#@+ * Different types of components */ const MODULE = 'module'; const LIBRARY = 'library'; const THEME = 'theme'; const LANGUAGE = 'language'; const SETUP = 'setup'; Magento\\Framework\\Component\\ComponentRegistrar::getPath() Get path to module: $this-&gt;componentRegistrar-&gt;getPath(ComponentRegistrar::MODULE, $moduleName)   ","version":"Next","tagName":"h3"},{"title":"Upload​","type":1,"pageTitle":"Working with files in Magento","url":"/docs/mage2/files#Upload","content":" ","version":"Next","tagName":"h2"},{"title":"Read files​","type":1,"pageTitle":"Working with files in Magento","url":"/docs/mage2/files#Read-files","content":" ","version":"Next","tagName":"h2"},{"title":"CSV​","type":1,"pageTitle":"Working with files in Magento","url":"/docs/mage2/files#CSV","content":" Magento\\Framework\\File\\Csv  Get Data Magento\\Framework\\File\\Csv::getData() Write Data Magento\\Framework\\File\\Csv::saveData() Get Data Pair Magento\\Framework\\File\\Csv::getDataPair()   ","version":"Next","tagName":"h3"},{"title":"Json​","type":1,"pageTitle":"Working with files in Magento","url":"/docs/mage2/files#Json","content":" ","version":"Next","tagName":"h3"},{"title":"Xml​","type":1,"pageTitle":"Working with files in Magento","url":"/docs/mage2/files#Xml","content":" ","version":"Next","tagName":"h3"},{"title":"Excel​","type":1,"pageTitle":"Working with files in Magento","url":"/docs/mage2/files#Excel","content":"","version":"Next","tagName":"h3"},{"title":"Magento UI","type":0,"sectionRef":"#","url":"/docs/mage2/magento-ui","content":"Magento UI","keywords":"","version":"Next"},{"title":"Magento Architecture","type":0,"sectionRef":"#","url":"/docs/mage2/magento-architecture","content":"","keywords":"","version":"Next"},{"title":"Architecture layers diagram​","type":1,"pageTitle":"Magento Architecture","url":"/docs/mage2/magento-architecture#Architecture-layers-diagram","content":" Magento build use layered software:  Presentation LayerService layerDomain layerPersistence layer  ","version":"Next","tagName":"h2"},{"title":"Presentation layer​","type":1,"pageTitle":"Magento Architecture","url":"/docs/mage2/magento-architecture#Presentation-layer","content":" When you interact with the Magento web interface, you are interacting with presentation layer code The presentation layer contains both view elements (layouts, blocks, templates) and controllers, which process commands to and from the user interface. Three types of Magento users interact with presentation layer code:  Web users interact with the storefrontSystem administrators customise a storefrontWeb API calls can be made through HTTP just like browser requests, and can be made via AJAX calls from the user interface.  ","version":"Next","tagName":"h3"},{"title":"Service layer​","type":1,"pageTitle":"Magento Architecture","url":"/docs/mage2/magento-architecture#Service-layer","content":" The service layer provides a bridge between the presentation layer and the domain layer and resource-specific data. This is implemented using service contracts, which are defined using PHP interfaces. In general, the service layer:  Resides below the presentation layer and above the domain layer.Contains service contracts, which define how the implementation will behave.Provides an easy way to access the REST/SOAP API framework codeProvides a stable API for other modules to call into  Service contract clients include:  ControllersWeb services (SOAP and REST API)Other Magento modules through service contracts  Service contracts provide three distinct types of interfaces:  Repository interfacesManagement interfacesMetadata interfaces  Defined by the set of interfaces in the module’s /Api directory.  Service interfaces in the /ApiData (or entity) interfaces in the Api/Data  ","version":"Next","tagName":"h3"},{"title":"Domain layer​","type":1,"pageTitle":"Magento Architecture","url":"/docs/mage2/magento-architecture#Domain-layer","content":" The domain layer holds the business logic layer of a module. It typically does not contain resource-specific or database-specific information. Its primary functions include:  Defining the generic data objects, or models, that contain business logic. This logic defines which operations can be performed on particular types of data, such as a Customer object. These models contain generic information only. Applications can also use SOAP or RESTful endpoints to request data from models.(Optionally) Including the implementation of service contracts, although not their definition.  Models​  Each domain-layer model contains a reference to a resource model, which it uses to retrieve data from the database with MySql calls. This resource model contains logic for connecting to the underlying database, typically MySQL. A model requires a resource model only if the model data must persist.  Accessing the domain layer​  There are three primary ways of accessing a module's domain-layer code:  Service contracts are the recommended way for one module to access another module's domain-level code.A module can directly call into another module. (not recommended for most situations, but is sometimes unavoidable)Plug itself into another module by: event hookspluginsdi.xml files (with an SPI contract)  ","version":"Next","tagName":"h3"},{"title":"Persistence layer​","type":1,"pageTitle":"Magento Architecture","url":"/docs/mage2/magento-architecture#Persistence-layer","content":" Magento uses an active record pattern strategy for persistence. In this system, the model object contains a resource model that maps an object to one or more database rows.  Executing all CRUD (create, read, update, delete) requestsPerforming additional business logic. For example, a resource model could perform data validation, start processes before or after data is saved, or perform other database operations.  Models​  A simple resource model defines and interacts with a single table.However, some objects have a vast number of attributes, or they could have a set related objects that have varying numbers of attributes. In these cases, the objects are constructed using Entity-Attribute-Value (EAV) models. Any model that uses an EAV resource has its attributes spread out over a number of MySQL tables.The Customer, Catalog and Order resource models use EAV attributes.  XML Declarative schema​  ","version":"Next","tagName":"h3"},{"title":"Modularity & Extensibility​","type":1,"pageTitle":"Magento Architecture","url":"/docs/mage2/magento-architecture#Modularity--Extensibility","content":" Extensibility describes the product's built-in ability for developers and merchants to routinely extend their storefront's capabilities as their business grows.  ","version":"Next","tagName":"h2"},{"title":"The factors affect extensibility.​","type":1,"pageTitle":"Magento Architecture","url":"/docs/mage2/magento-architecture#The-factors-affect-extensibility","content":" Architectural principles that guide product structureReliance on popular design patternsModularityRich product ecosystemOpen-source software to create and manage extensionsCoding standardsUpgrade and versioning strategiesWeb APIsFlexible attribute types EAV (Entity-Attribute-Value) attributesCustom attributesExtension attributes Service contracts, dependency injection, and dependency inversionPlugins ","version":"Next","tagName":"h3"},{"title":"Design Patterns on Magento","type":0,"sectionRef":"#","url":"/docs/mage2/magento-design-patterns","content":"","keywords":"","version":"Next"},{"title":"S.O.I.L.D Principles​","type":1,"pageTitle":"Design Patterns on Magento","url":"/docs/mage2/magento-design-patterns#SOILD-Principles","content":" ","version":"Next","tagName":"h2"},{"title":"Design Patterns​","type":1,"pageTitle":"Design Patterns on Magento","url":"/docs/mage2/magento-design-patterns#Design-Patterns","content":" ","version":"Next","tagName":"h2"},{"title":"Factory Pattern​","type":1,"pageTitle":"Design Patterns on Magento","url":"/docs/mage2/magento-design-patterns#Factory-Pattern","content":" ","version":"Next","tagName":"h3"},{"title":"Builder Pattern​","type":1,"pageTitle":"Design Patterns on Magento","url":"/docs/mage2/magento-design-patterns#Builder-Pattern","content":" ","version":"Next","tagName":"h3"},{"title":"Object Pool Pattern​","type":1,"pageTitle":"Design Patterns on Magento","url":"/docs/mage2/magento-design-patterns#Object-Pool-Pattern","content":" ","version":"Next","tagName":"h3"},{"title":"Object Pool Pattern​","type":1,"pageTitle":"Design Patterns on Magento","url":"/docs/mage2/magento-design-patterns#Object-Pool-Pattern-1","content":" ","version":"Next","tagName":"h3"},{"title":"Repository Pattern​","type":1,"pageTitle":"Design Patterns on Magento","url":"/docs/mage2/magento-design-patterns#Repository-Pattern","content":" ","version":"Next","tagName":"h3"},{"title":"Proxy pattern​","type":1,"pageTitle":"Design Patterns on Magento","url":"/docs/mage2/magento-design-patterns#Proxy-pattern","content":" ","version":"Next","tagName":"h3"},{"title":"Composite pattern​","type":1,"pageTitle":"Design Patterns on Magento","url":"/docs/mage2/magento-design-patterns#Composite-pattern","content":" ","version":"Next","tagName":"h3"},{"title":"Decorator Pattern​","type":1,"pageTitle":"Design Patterns on Magento","url":"/docs/mage2/magento-design-patterns#Decorator-Pattern","content":" ","version":"Next","tagName":"h3"},{"title":"Dependency injection & Object Manager​","type":1,"pageTitle":"Design Patterns on Magento","url":"/docs/mage2/magento-design-patterns#Dependency-injection--Object-Manager","content":" ","version":"Next","tagName":"h2"},{"title":"Event observers​","type":1,"pageTitle":"Design Patterns on Magento","url":"/docs/mage2/magento-design-patterns#Event-observers","content":" ","version":"Next","tagName":"h2"},{"title":"Service contracts design patterns​","type":1,"pageTitle":"Design Patterns on Magento","url":"/docs/mage2/magento-design-patterns#Service-contracts-design-patterns","content":" ","version":"Next","tagName":"h2"},{"title":"Aspect Oriented programming​","type":1,"pageTitle":"Design Patterns on Magento","url":"/docs/mage2/magento-design-patterns#Aspect-Oriented-programming","content":" ","version":"Next","tagName":"h2"},{"title":"Plugins Pattern​","type":1,"pageTitle":"Design Patterns on Magento","url":"/docs/mage2/magento-design-patterns#Plugins-Pattern","content":" ","version":"Next","tagName":"h2"},{"title":"Difference between a repository and factory pattern​","type":1,"pageTitle":"Design Patterns on Magento","url":"/docs/mage2/magento-design-patterns#Difference-between-a-repository-and-factory-pattern","content":"","version":"Next","tagName":"h2"},{"title":"messages-queue","type":0,"sectionRef":"#","url":"/docs/mage2/messages-queue","content":"messages-queue","keywords":"","version":"Next"},{"title":"Payment","type":0,"sectionRef":"#","url":"/docs/mage2/payment","content":"Payment","keywords":"","version":"Next"},{"title":"Describe Magento’s module-based architecture","type":0,"sectionRef":"#","url":"/docs/mage2/module-architecture","content":"","keywords":"","version":"Next"},{"title":"Magento module base architecture​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Magento-module-base-architecture","content":" ","version":"Next","tagName":"h2"},{"title":"Module registration​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Module-registration","content":" ","version":"Next","tagName":"h3"},{"title":"Registration flow​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Registration-flow","content":" ","version":"Next","tagName":"h3"},{"title":"Describe module limitations.​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Describe-module-limitations","content":" ","version":"Next","tagName":"h3"},{"title":"Interact with other modules​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Interact-with-other-modules","content":" ","version":"Next","tagName":"h3"},{"title":"Dependency types​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Dependency-types","content":" ","version":"Next","tagName":"h3"},{"title":"Magento areas​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Magento-areas","content":" ","version":"Next","tagName":"h3"},{"title":"What side effects can come from this interaction?​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#What-side-effects-can-come-from-this-interaction","content":" ","version":"Next","tagName":"h3"},{"title":"Magento “module” directory structure​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Magento-module-directory-structure","content":" ","version":"Next","tagName":"h2"},{"title":"Module required files​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Module-required-files","content":" ","version":"Next","tagName":"h3"},{"title":"Module Directories​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Module-Directories","content":" ","version":"Next","tagName":"h3"},{"title":"Magento directory​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Magento-directory","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration XML and variables scope​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Configuration-XML-and-variables-scope","content":" ","version":"Next","tagName":"h2"},{"title":"List *.xml configs​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#List-xml-configs","content":" ","version":"Next","tagName":"h3"},{"title":"The Magento Configuration files framework​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#The-Magento-Configuration-files-framework","content":" ","version":"Next","tagName":"h3"},{"title":"Configuration load and merge flow​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Configuration-load-and-merge-flow","content":" ","version":"Next","tagName":"h3"},{"title":"Sensitive and environment settings​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Sensitive-and-environment-settings","content":" ","version":"Next","tagName":"h3"},{"title":"How magento read config?​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#How-magento-read-config","content":" ","version":"Next","tagName":"h3"},{"title":"Code generation​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Code-generation","content":" ","version":"Next","tagName":"h2"},{"title":"Overview of code generation​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Overview-of-code-generation","content":" ","version":"Next","tagName":"h3"},{"title":"When is code generated?​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#When-is-code-generated","content":" ","version":"Next","tagName":"h3"},{"title":"What code auto generated?​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#What-code-auto-generated","content":" ","version":"Next","tagName":"h3"},{"title":"When should you regenerate code?​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#When-should-you-regenerate-code","content":" ","version":"Next","tagName":"h3"},{"title":"Advantages of generating code​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Advantages-of-generating-code","content":" ","version":"Next","tagName":"h3"},{"title":"Magento CLI​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Magento-CLI","content":" ","version":"Next","tagName":"h2"},{"title":"Based on the Symfony Console component​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Based-on-the-Symfony-Console-component","content":" ","version":"Next","tagName":"h3"},{"title":"Usage of bin/magento commands in the development​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Usage-of-binmagento-commands-in-the-development","content":" ","version":"Next","tagName":"h3"},{"title":"Create new CLI command​","type":1,"pageTitle":"Describe Magento’s module-based architecture","url":"/docs/mage2/module-architecture#Create-new-CLI-command","content":"","version":"Next","tagName":"h3"},{"title":"php-autoload","type":0,"sectionRef":"#","url":"/docs/mage2/php/php-autoload","content":"php-autoload","keywords":"","version":"Next"},{"title":"Extensibility and modularity","type":0,"sectionRef":"#","url":"/docs/mage2/modularity","content":"","keywords":"","version":"Next"},{"title":"Module overview​","type":1,"pageTitle":"Extensibility and modularity","url":"/docs/mage2/modularity#Module-overview","content":" ","version":"Next","tagName":"h2"},{"title":"Module components​","type":1,"pageTitle":"Extensibility and modularity","url":"/docs/mage2/modularity#Module-components","content":" ThemesLibrariesLanguage packs  ","version":"Next","tagName":"h3"},{"title":"Module locations​","type":1,"pageTitle":"Extensibility and modularity","url":"/docs/mage2/modularity#Module-locations","content":" A module must include a registration.php file in its root folder.  ENTITY\tLOCATIONCode base of your custom module\t/app/code/&lt;Vendor&gt;/&lt;Module&gt; Custom theme files (storefront)\t/app/design/frontend/&lt;Vendor&gt;/&lt;theme&gt; Custom theme files (modules)\t&lt;Module&gt;/&lt;theme&gt; If you want to use a library\t/lib/&lt;Vendor_Library&gt;  ","version":"Next","tagName":"h3"},{"title":"Modules and areas​","type":1,"pageTitle":"Extensibility and modularity","url":"/docs/mage2/modularity#Modules-and-areas","content":" ","version":"Next","tagName":"h2"},{"title":"Area types​","type":1,"pageTitle":"Extensibility and modularity","url":"/docs/mage2/modularity#Area-types","content":" Area | -------|--------- Admin (adminhtml)| entry point for this area is pub/index.php. The Admin panel area includes the code needed for store management. The /app/design/adminhtml directory contains all the code for components you'll see while working in the Admin. Storefront (frontend)| entry point for this area is pub/index.php. The storefront (or frontend) contains template and layout files that define the appearance of your storefront. Basic (base)| used as a fallback for files absent in adminhtml and frontend areas. Cron (crontab)| In pub/cron.php, the \\Magento\\Framework\\App\\Cron class always loads the 'crontab' area Web API REST (webapi_rest)| entry point for this area is pub/index.php. The REST area has a front controller that understands how to do URL lookups for REST-based URLs. GraphQL (graphql)| entry point for this area is pub/index.php Web API SOAP (webapi_soap)| entry point for this area is pub/index.php.  ","version":"Next","tagName":"h3"},{"title":"Note about request processing​","type":1,"pageTitle":"Extensibility and modularity","url":"/docs/mage2/modularity#Note-about-request-processing","content":" The Commerce framework processes a URL request by first stripping off the base URL. The first path segment of the remaining URL identifies the request area.  After the area name, the URI segment specifies the frontname. When an HTTP request arrives, the Commerce framework extracts the handle from the URL and interprets it as follows:  [frontName]/[controller folder]/[controller class]   The frontName is a value defined in the module. Using catalog/product/view as an example:  catalog is the frontName in the module area's routes.xml fileproduct is in the controller folderview is the controller class  catalog/product_compare/add = Magento/Catalog/Controller/Product/Compare/Add.php   ","version":"Next","tagName":"h3"},{"title":"Module relationships​","type":1,"pageTitle":"Extensibility and modularity","url":"/docs/mage2/modularity#Module-relationships","content":" Docs Module relationships  ","version":"Next","tagName":"h2"},{"title":"Module dependencies​","type":1,"pageTitle":"Extensibility and modularity","url":"/docs/mage2/modularity#Module-dependencies","content":" A software dependency identifies one software component's reliance on another for proper functioning. A core principle of the Adobe Commerce and Magento Open Source framework (Commerce framework) architecture is the minimization of software dependencies. Instead of being closely interrelated with other modules, modules are optimally designed to be loosely coupled. Loosely coupled modules require little or no knowledge of other modules to perform their tasks.  Magento docs  ","version":"Next","tagName":"h2"},{"title":"Dependency types​","type":1,"pageTitle":"Extensibility and modularity","url":"/docs/mage2/modularity#Dependency-types","content":" Hard dependencies​  The require section of app/code/&lt;Vendor&gt;/&lt;Module&gt;/composer.json file contains hard dependency definitions for the module   &quot;require&quot;: { &quot;magento/module-catalog&quot;: &quot;103.0.*&quot;, &quot;magento/module-email&quot;: &quot;101.0.*&quot;, &quot;magento/module-media-storage&quot;: &quot;100.3.*&quot;, &quot;magento/module-store&quot;: &quot;101.0.*&quot;, &quot;magento/module-theme&quot;: &quot;101.0.*&quot;, &quot;magento/module-ui&quot;: &quot;101.1.*&quot;, &quot;magento/module-variable&quot;: &quot;100.3.*&quot;, &quot;magento/module-widget&quot;: &quot;101.1.*&quot;, &quot;magento/module-authorization&quot;: &quot;100.3.*&quot; }   Soft dependencies​  The suggest section of app/code/&lt;Vendor&gt;/&lt;Module&gt;/composer.json file contains soft dependency definitions for the module   &quot;suggest&quot;: { &quot;magento/module-graph-ql&quot;: &quot;*&quot;, &quot;magento/module-graph-ql-cache&quot;: &quot;*&quot;, &quot;magento/module-store-graph-ql&quot;: &quot;*&quot; }   The &lt;sequence&gt; node of app/code/&lt;Vendor&gt;/&lt;Module&gt;/etc/module.xml file also contains soft dependency definitions for the module.   &lt;module name=&quot;Magento_Cms&quot;&gt; &lt;sequence&gt; &lt;module name=&quot;Magento_Store&quot;/&gt; &lt;module name=&quot;Magento_Theme&quot;/&gt; &lt;module name=&quot;Magento_Variable&quot;/&gt; &lt;/sequence&gt; &lt;/module&gt;   Managing module dependencies​  Name and declare the module in the module.xml file.Declare any dependencies that the module has (whether on other modules or on a different component) in the module's composer.json file.(Optional) Define the desired load order of config files and .css files in the module.xml file.  // etc/module.xml &lt;config xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:noNamespaceSchemaLocation=&quot;urn:magento:framework:Module/etc/module.xsd&quot;&gt; &lt;module name=&quot;Module_A&quot; setup_version=&quot;1.0.0&quot;&gt; &lt;sequence&gt; &lt;module name=&quot;Module_B&quot; /&gt; &lt;/sequence&gt; &lt;/module&gt; &lt;/config&gt; // app/etc/config.php return [ 'modules' =&gt; [ ... 'Module_B' =&gt; 1, 'Module_A' =&gt; 1, ... ] ];  ","version":"Next","tagName":"h3"},{"title":"php-batch","type":0,"sectionRef":"#","url":"/docs/mage2/php/php-batch","content":"php-batch","keywords":"","version":"Next"},{"title":"Composer","type":0,"sectionRef":"#","url":"/docs/mage2/php/php-composer","content":"Composer","keywords":"","version":"Next"},{"title":"php-files","type":0,"sectionRef":"#","url":"/docs/mage2/php/php-files","content":"php-files","keywords":"","version":"Next"},{"title":"php-caching","type":0,"sectionRef":"#","url":"/docs/mage2/php/php-caching","content":"php-caching","keywords":"","version":"Next"},{"title":"php-logging","type":0,"sectionRef":"#","url":"/docs/mage2/php/php-logging","content":"php-logging","keywords":"","version":"Next"},{"title":"Request Flow Processing","type":0,"sectionRef":"#","url":"/docs/mage2/request-flow-processing","content":"Request Flow Processing https://fixes.co.za/magento2/magento-2-request-flow/ Request hits index.php in root folder of Magento 2. Environment initialization Autoloader require_once __DIR__ . '/autoload.php'; // Sets default autoload mappings, may be overridden in Bootstrap::create \\Magento\\Framework\\App\\Bootstrap::populateAutoloader(BP, []); // Load bootstrap $bootstrap = Bootstrap::create(BP, $_SERVER); Init object manager form ServerInitParmas // Create app $app = $bootstrap-&gt;createApplication(\\Magento\\Framework\\App\\Http::class); // Init config // Init cache // Request // Response","keywords":"","version":"Next"},{"title":"php-http-client","type":0,"sectionRef":"#","url":"/docs/mage2/php/php-http-client","content":"php-http-client","keywords":"","version":"Next"},{"title":"Security on Magento","type":0,"sectionRef":"#","url":"/docs/mage2/security","content":"","keywords":"","version":"Next"},{"title":"Sales","type":0,"sectionRef":"#","url":"/docs/mage2/sales","content":"Sales","keywords":"","version":"Next"},{"title":"Security Scan​","type":1,"pageTitle":"Security on Magento","url":"/docs/mage2/security#Security-Scan","content":"","version":"Next","tagName":"h2"},{"title":"Working with DB","type":0,"sectionRef":"#","url":"/docs/mage2/working-with-db","content":"Working with DB","keywords":"","version":"Next"},{"title":"Routing","type":0,"sectionRef":"#","url":"/docs/mage2/routing","content":"","keywords":"","version":"Next"},{"title":"FrontController classes​","type":1,"pageTitle":"Routing","url":"/docs/mage2/routing#FrontController-classes","content":" FrontController: Magento\\Framework\\App\\FrontController  The FrontController class class searches through a list of routers, provided by the RouterList class, until it matches one that can process a request. When the FrontController finds a matching router, it dispatches the request to an action class returned by the router.  RouterList: Magento\\Framework\\App\\RouterList  The RouterList class collection of routers  Router class:  The Router class matches a request to an action class that processes the request. Implement Magento\\Framework\\App\\RouterInterface  frontend area routers:  Router\tOrder\tClass\tDescriptionrobots\t10\tMagento\\Robots\\Controller\\Route\tMatches request to the robots.txt file urlrewrite\t20\tMagento\\UrlRewrite\\Controller\\Route\tMatches requests with URL defined in the database standard\t30\tMagento\\Framework\\App\\Router\\Base\tThe standard router cms\t60\tMagento\\Cms\\Controller\\Route\tMatches requests for CMS pages default\t100\tMagento\\Framework\\App\\Router\\DefaultRoute\tThe default router : set to no-route action  admin area routers:  Router\tOrder\tClass\tDescriptionadmin\t10\tMagento\\Backend\\App\\Route\tMatches requests in the Admin area default\t100\tMagento\\Framework\\App\\Router\\DefaultRouter\tThe default router for the Admin area  ","version":"Next","tagName":"h2"},{"title":"Standard router​","type":1,"pageTitle":"Routing","url":"/docs/mage2/routing#Standard-router","content":" A URL that uses the standard router has the following format:  &lt;store-url&gt;/&lt;store-code&gt;/&lt;front-name&gt;/&lt;controller-name&gt;/&lt;action-name&gt; Where: * &lt;store-url&gt; - specifies the base URL for the application instance * &lt;store-code&gt; - specifies the store context * &lt;front-name&gt; - specifies the frontName of the FrontController to use (for example, [routesxml]) * &lt;controller-name&gt; - specifies the name of the controller * &lt;action-name&gt; - specifies the action class to execute on the controller class   ","version":"Next","tagName":"h3"},{"title":"Custom routers​","type":1,"pageTitle":"Routing","url":"/docs/mage2/routing#Custom-routers","content":" Create an implementation of RouterInterface to create a custom router, and define the match() function in this class to use your own route matching logic.  If you need route configuration data, use the Route Config class.  To add your custom router to the list of routers for the FrontController, add the following entry in your module's frontend/di.xml file:  &lt;type name=&quot;Magento\\Framework\\App\\RouterList&quot;&gt; &lt;arguments&gt; &lt;argument name=&quot;routerList&quot; xsi:type=&quot;array&quot;&gt; &lt;item name=&quot;%name%&quot; xsi:type=&quot;array&quot;&gt; &lt;item name=&quot;class&quot; xsi:type=&quot;string&quot;&gt;%classpath%&lt;/item&gt; &lt;item name=&quot;disable&quot; xsi:type=&quot;boolean&quot;&gt;false&lt;/item&gt; &lt;item name=&quot;sortOrder&quot; xsi:type=&quot;string&quot;&gt;%sortorder%&lt;/item&gt; &lt;/item&gt; &lt;/argument&gt; &lt;/arguments&gt; &lt;/type&gt; * %name% - The unique name of your router in Magento. * %classpath% - The path to your router class. Example: Magento\\Robots\\Controller\\Router * %sortorder% - The sort order of this entry in the router list.   ","version":"Next","tagName":"h3"},{"title":"routes.xml​","type":1,"pageTitle":"Routing","url":"/docs/mage2/routing#routesxml","content":" The routes.xml file maps which module to use for a URL with a specific frontName and area. The location of the routes.xml file in a module, either etc/frontend or etc/adminhtml, specifies where those routes are active.  The content of this file uses the following format:  routes.xml &lt;config xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:noNamespaceSchemaLocation=&quot;urn:magento:framework:App/etc/routes.xsd&quot;&gt; &lt;router id=&quot;%routerId%&quot;&gt; &lt;route id=&quot;%routeId%&quot; frontName=&quot;%frontName%&quot;&gt; &lt;module name=&quot;%moduleName%&quot;/&gt; &lt;/route&gt; &lt;/router&gt; &lt;/config&gt; * %routerId - specifies the name of the router in Magento. See the reference tables in the Router class section. * %routeId% - specifies the unique node id for this route in Magento, is also the first segment of its associated layout handle XML filename (routeId_controller_action.xml). * %frontName% - specifies the first segment after the base URL of a request. * %moduleName% - specifies the name of your module.   ","version":"Next","tagName":"h3"},{"title":"Action class​","type":1,"pageTitle":"Routing","url":"/docs/mage2/routing#Action-class","content":" Action classes are implementations of the ActionInterface that a router returns on matched requests. The execute() function in these classes contain the logic for dispatching requests.  Each Action should implement one or more Magento\\Framework\\App\\Action\\Http HTTP MethodActionInterface to declare which HTTP request methods it can process. The most common ones are:  \\Magento\\Framework\\App\\Action\\HttpDeleteActionInterface\\Magento\\Framework\\App\\Action\\HttpGetActionInterface\\Magento\\Framework\\App\\Action\\HttpPostActionInterface\\Magento\\Framework\\App\\Action\\HttpPutActionInterface  The application has a form key validation in place for all POST non-AJAX requests - if your Action doesn't need that validation or you want to modify it you can implement CsrfAwareActionInterface. ","version":"Next","tagName":"h3"},{"title":"Security on Magento","type":0,"sectionRef":"#","url":"/docs/mage2/setup","content":"","keywords":"","version":"Next"},{"title":"Security Scan​","type":1,"pageTitle":"Security on Magento","url":"/docs/mage2/setup#Security-Scan","content":" token : &quot;gitlab.com&quot;: &quot;Anr8wE1PnbZT9XYHZw7G&quot; curl --data tag=v1.0.0 https://__token__:Anr8wE1PnbZT9XYHZw7G@gitlab.com/api/v4/projects/28384517/packages/composer Setup auth.json &quot;gitlab-token&quot;: { &quot;gitlab.com&quot;: &quot;Anr8wE1PnbZT9XYHZw7G&quot; } composer.json &quot;nover&quot;: { &quot;type&quot;: &quot;composer&quot;, &quot;url&quot;: &quot;https://gitlab.com/api/v4/group/nover/-/packages/composer/&quot; } curl --data tag=&lt;tag&gt; &quot;https://__token__:&lt;personal-access-token&gt;@gitlab.example.com/api/v4/projects/&lt;project_id&gt;/packages/composer&quot; composer config repositories.&lt;group_id&gt; composer https://gitlab.example.com/api/v4/group/&lt;group_id&gt;/-/packages/composer/ composer config gitlab-token.&lt;DOMAIN-NAME&gt; &lt;personal_access_token&gt; composer require &lt;package_name&gt;:&lt;version&gt;  ","version":"Next","tagName":"h2"},{"title":"Learn Microservice","type":0,"sectionRef":"#","url":"/docs/microservices/basic","content":"Learn Microservice","keywords":"","version":"Next"},{"title":"Route API","type":0,"sectionRef":"#","url":"/docs/nextjs/API Routes","content":"Route API cookiesimport { cookies } from 'next/headers'headerimport { headers } from 'next/headers' import type { NextApiRequest, NextApiResponse } from 'next' Route Segment Config Option\tType\tDefaultdynamic\t'auto' | 'force-dynamic' | 'error' | 'force-static'\t'auto' dynamicParams\tboolean\ttrue revalidate\tfalse | 0 | number\tfalse fetchCache\t'auto' | 'default-cache' | 'only-cache' | 'force-cache' | 'force-no-store' | 'default-no-store' | 'only-no-store'\t'auto' runtime\t'nodejs' | 'edge'\t'nodejs' preferredRegion\t'auto' | 'global' | 'home' | string | string[]\t'auto' maxDuration\tnumber\tSet by deployment platform layout.tsx | page.tsx | route.ts export const dynamic = 'auto' export const dynamicParams = true export const revalidate = false export const fetchCache = 'auto' export const runtime = 'nodejs' export const preferredRegion = 'auto' export const maxDuration = 5 export default function MyComponent() {} ","keywords":"","version":"Next"},{"title":"cache","type":0,"sectionRef":"#","url":"/docs/nextjs/cache","content":"","keywords":"","version":"Next"},{"title":"Request Memoization​","type":1,"pageTitle":"cache","url":"/docs/nextjs/cache#Request-Memoization","content":" ","version":"Next","tagName":"h2"},{"title":"Data Cache​","type":1,"pageTitle":"cache","url":"/docs/nextjs/cache#Data-Cache","content":" ","version":"Next","tagName":"h2"},{"title":"Route Cache​","type":1,"pageTitle":"cache","url":"/docs/nextjs/cache#Route-Cache","content":" ","version":"Next","tagName":"h2"},{"title":"Router Cache​","type":1,"pageTitle":"cache","url":"/docs/nextjs/cache#Router-Cache","content":" Custom Next.js Cache HandlerRedis ","version":"Next","tagName":"h2"},{"title":"Learn Kafka - Event streaming platform","type":0,"sectionRef":"#","url":"/docs/microservices/Kafka/","content":"Learn Kafka - Event streaming platform","keywords":"","version":"Next"},{"title":"Magento 2 Framework","type":0,"sectionRef":"#","url":"/docs/mage2/mage-framework","content":"","keywords":"","version":"Next"},{"title":"Framework highlights​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Framework-highlights","content":" The Commerce framework (lib/internal/Magento/Framework/) provides a robust range of functionality.  NAMESPACE\tPURPOSEMagento\\Framework\\DataObject\tProvides standard functionality for storing and retrieving data through magic methods. This is the base class for many classes Magento\\Framework\\Model\tContains base Model classes that almost all model classes extend from. Magento\\Framework\\Model\\AbstractModel Magento\\Framework\\Model\\ResourceModel\\AbstractResource Magento\\Framework\\Controller Magento\\Framework\\View\tContains code to render pages and layouts. Magento\\Framework\\Data\tContains additional classes that handle forms. Magento\\Framework\\Url\tContains code to look up other pages.  Other namespaces under Magento\\Framework that will interest extension developers:  NAMESPACE\tPURPOSEMagento\\Framework\\ObjectManager\tUsed to provide dependency injection. Magento\\Framework\\App\tContains framework code that has knowledge about the Commerce application. This code bootstraps the application and reads in the initial configuration. It also contains the entry point to the command line tools, the web application, and the cron job. And finally, it routes requests while providing the deployment context (such as reading in the configuration for the database configuration, languages, and caching systems). Magento\\Framework\\Api\tContains base classes for advanced functionality of extendable objects through the system (that is, objects that can be extended to add new data through Commerce Marketplace extensions). Magento\\Framework\\Config\tContains the generic configuration reader. Each config file has its own specialized reader extending these classes. Magento\\Framework\\Filesystem\tContains classes that handle reading from and writing to the file system. Magento\\Framework\\HTTP\\PhpEnvironment Magento\\Framework\\Session Magento\\Framework\\Stdlib\\Cookie\tCode to handle the HTTP request/responses as well as session/cookies is found here. Magento\\Framework\\Exception\tContains the basic exceptions that are thrown throughout the Commerce codebase. Magento\\Framework\\Event\tContains the code that publishes synchronous events and that handles observers for any Commerce event is handled here. Magento\\Framework\\Validator\tContains the code that validates data (currencies, not empty) and that handles observers for any Commerce event.  ","version":"Next","tagName":"h2"},{"title":"ACL​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#ACL","content":" Access control list Access Control List (ACL) rules allow an admin to limit the permissions of users. Magento ACL use Zend/Acl  ","version":"Next","tagName":"h2"},{"title":"Load User & check ACL allow​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Load-User--check-ACL-allow","content":" Magento\\Framework\\AuthorizationInterface::isAllowed() $this-&gt;authorization-&gt;isAllowed('Magento_InventoryApi::stock_edit'); \\\\ Admin \\\\ Customer \\\\ API   ","version":"Next","tagName":"h3"},{"title":"New ACL​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#New-ACL","content":" \\\\ etc/acl.xml &lt;?xml version=&quot;1.0&quot;?&gt; &lt;config xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:noNamespaceSchemaLocation=&quot;urn:magento:framework:Acl/etc/acl.xsd&quot;&gt; &lt;acl&gt; &lt;resources&gt; &lt;resource id=&quot;Magento_Backend::admin&quot;&gt; &lt;resource id=&quot;Vendor_MyModule::menu&quot; title=&quot;Custom Menu&quot; sortOrder=&quot;10&quot; &gt; &lt;resource id=&quot;Vendor_MyModule::create&quot; title=&quot;Create&quot; sortOrder=&quot;50&quot; /&gt; &lt;resource id=&quot;Vendor_MyModule::delete&quot; title=&quot;Delete&quot; sortOrder=&quot;100&quot; /&gt; &lt;resource id=&quot;Vendor_MyModule::view&quot; title=&quot;View&quot; sortOrder=&quot;150&quot;&gt; &lt;resource id=&quot;Vendor_MyModule::view_additional&quot; title=&quot;View Additional Information&quot; sortOrder=&quot;10&quot; /&gt; &lt;/resource&gt; &lt;/resource&gt; &lt;/resource&gt; &lt;/resources&gt; &lt;/acl&gt; &lt;/config&gt; \\\\ Clean Cache bin/magento cache:clean   ","version":"Next","tagName":"h3"},{"title":"Restrict admin controllers​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Restrict-admin-controllers","content":" \\\\ use on Controller/Adminhtml/Create/Index.php const ADMIN_RESOURCE = 'Vendor_MyModule::create' const ADMIN_RESOURCE = 'Vendor_MyModule::delete';   ","version":"Next","tagName":"h3"},{"title":"Content restrictions for admin users​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Content-restrictions-for-admin-users","content":" \\ use on block xml  \\\\ aclResource &lt;block class=&quot;Vendor\\MyModule\\Block\\Adminhtml\\Type&quot; name=&quot;block.example&quot; aclResource=&quot;Vendor_MyModule::view_additional&quot;&gt; &lt;!-- ... --&gt; &lt;/block&gt;   ","version":"Next","tagName":"h3"},{"title":"Restrict web API access​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Restrict-web-API-access","content":" \\\\ resource &lt;?xml version = &quot;1.0&quot;?&gt; &lt;routes xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:noNamespaceSchemaLocation=&quot;urn:magento:module:Magento_Webapi:etc/webapi.xsd&quot;&gt; &lt;route url=&quot;/V1/admin/create&quot; method=&quot;POST&quot;&gt; &lt;service class=&quot;Vendor\\MyModule\\Api\\Create&quot; method=&quot;execute&quot;/&gt; &lt;resources&gt; &lt;resource ref=&quot;Vendor_MyModule::create&quot; /&gt; &lt;/resources&gt; &lt;/route&gt; &lt;/routes&gt;   ","version":"Next","tagName":"h3"},{"title":"Restrict web API menu​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Restrict-web-API-menu","content":" &lt;?xml version=&quot;1.0&quot;?&gt; &lt;config xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:noNamespaceSchemaLocation=&quot;urn:magento:module:Magento_Backend:etc/menu.xsd&quot;&gt; &lt;menu&gt; &lt;add id=&quot;Vendor_MyModule::menu&quot; title=&quot;Custom Menu&quot; module=&quot;Vendor_MyModule&quot; sortOrder=&quot;10&quot; resource=&quot;Vendor_MyModule::menu&quot;/&gt; &lt;add id=&quot;Vendor_MyModule::create&quot; title=&quot;Create&quot; module=&quot;Vendor_MyModule&quot; sortOrder=&quot;10&quot; parent=&quot;Vendor_MyModule::menu&quot; action=&quot;custommenu/create/index&quot; resource=&quot;Vendor_MyModule::create&quot;/&gt; &lt;add id=&quot;Vendor_MyModule::delete&quot; title=&quot;Delete&quot; module=&quot;Vendor_MyModule&quot; sortOrder=&quot;20&quot; parent=&quot;Vendor_MyModule::menu&quot; action=&quot;custommenu/delete/index&quot; resource=&quot;Vendor_MyModule::delete&quot;/&gt; &lt;add id=&quot;Vendor_MyModule::view&quot; title=&quot;View&quot; module=&quot;Vendor_MyModule&quot; sortOrder=&quot;30&quot; parent=&quot;Vendor_MyModule::menu&quot; action=&quot;custommenu/view/index&quot; resource=&quot;Vendor_MyModule::view&quot;/&gt; &lt;/menu&gt; &lt;/config&gt;   ","version":"Next","tagName":"h3"},{"title":"API​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#API","content":" ","version":"Next","tagName":"h2"},{"title":"SearchCriteria​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#SearchCriteria","content":" ","version":"Next","tagName":"h3"},{"title":"Search​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Search","content":" ","version":"Next","tagName":"h3"},{"title":"Authorization​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Authorization","content":" ","version":"Next","tagName":"h2"},{"title":"Autoload​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Autoload","content":" Autoload library contains an abstract wrapper for Composer's generated autoloader.  AutoloaderInterface provides abstract ability use and modify the autoloader class.AutoloaderRegistry allows the same instance of the autoloader to put accessed across the code base.ClassLoaderWrapper wraps around Composer's generated autoloader in order to insulate it.Populator fills in PSR-0 and PSR-4 standard namespace-directory mappings for the autoloader.  ","version":"Next","tagName":"h2"},{"title":"Archive​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Archive","content":" Archive library provides functionalities for archiving files including following formats:  targzbzip2  ","version":"Next","tagName":"h2"},{"title":"Async​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Async","content":" Async library provides classes to work with asynchronous/deferred operations, for instance sending an HTTP request.  ","version":"Next","tagName":"h2"},{"title":"Config​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Config","content":" ","version":"Next","tagName":"h2"},{"title":"Config xml​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Config-xml","content":" ","version":"Next","tagName":"h3"},{"title":"Config schema​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Config-schema","content":" ","version":"Next","tagName":"h3"},{"title":"Sensitive config​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Sensitive-config","content":" Sensitive and system-specific  ","version":"Next","tagName":"h3"},{"title":"Environment variables​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Environment-variables","content":" ","version":"Next","tagName":"h3"},{"title":"Config on production​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Config-on-production","content":" ","version":"Next","tagName":"h3"},{"title":"How to \"Create configuration types\"​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#How-to-Create-configuration-types","content":" To create a configuration type, you must add at minimum:  A loaderXSD validation schemaXML configuration files  Refrence magento docs  Reader  \\\\ \\Magento\\Framework\\Config\\Reader\\Filesystem   Convert  \\\\ \\Magento\\Framework\\Config\\ConverterInterface   Schema  \\Magento\\Framework\\Config\\SchemaLocatorInterface   ","version":"Next","tagName":"h3"},{"title":"Console​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Console","content":" This component contains Magento Cli and can be extended via DI configuration.  For example we can introduce new command in module using di.xml:  &lt;type name=&quot;Magento\\Framework\\Console\\CommandListInterface&quot;&gt; &lt;arguments&gt; &lt;argument name=&quot;commands&quot; xsi:type=&quot;array&quot;&gt; &lt;item name=&quot;test_me&quot; xsi:type=&quot;object&quot;&gt;Magento\\MyModule\\Console\\TestMeCommand&lt;/item&gt; &lt;/argument&gt; &lt;/arguments&gt; &lt;/type&gt;   ","version":"Next","tagName":"h2"},{"title":"Controller​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Controller","content":" ","version":"Next","tagName":"h2"},{"title":"Admin & Frontend​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Admin--Frontend","content":" ","version":"Next","tagName":"h3"},{"title":"GET, POST, PUSH, DELETE​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#GET-POST-PUSH-DELETE","content":" ","version":"Next","tagName":"h3"},{"title":"Response data type​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Response-data-type","content":" Allowed result types  jsonrawredirectforwardlayoutpage  Frontend controller  use Magento\\Framework\\App\\Action\\Action; use Magento\\Framework\\App\\Action\\Context; class NewController extends Action implements HttpGetActionInterface, HttpPostActionInterface public function execute() { $resultPage = $this-&gt;pageHelper-&gt;prepareResultPage($this, $this-&gt;getPageId()); if (!$resultPage) { $resultForward = $this-&gt;resultForwardFactory-&gt;create(); return $resultForward-&gt;forward('noroute'); } return $resultPage; }   Backend Controller    ","version":"Next","tagName":"h3"},{"title":"Convert​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Convert","content":" ","version":"Next","tagName":"h2"},{"title":"Cron​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Cron","content":" ","version":"Next","tagName":"h2"},{"title":"EntityManager​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#EntityManager","content":" EntityManager library contains functionality for entity persistence layer. EntityManager supports persistence of basic entity attributes as well as extension and custom attributes added by 3rd party developers for the purpose of extending default entity behavior.  It's not recommended to use EntityManager and its infrastructure for entity persistence.  Currently, it's recommended to use Resource Model infrastructure and make a successor of Magento\\Framework\\Model\\ResourceModel\\Db\\AbstractDb class or successor of Magento\\Eav\\Model\\Entity\\AbstractEntity if EAV attributes support needed.  For filtering operations, it's recommended to use successor of Magento\\Framework\\Model\\ResourceModel\\Db\\Collection\\AbstractCollection class.  ","version":"Next","tagName":"h2"},{"title":"Encryption​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Encryption","content":" The Encryption library provides functionalities such as hashing passwords, encrypting/decrypting data, URLs encoding, using cryptographic algorithms.  Ecryption password Magento\\Framework\\Encryption\\Encryptor::getHash() // Url encode/decode use Magento\\Framework\\Url // Magento\\Framework\\Url\\Encode // Magento\\Framework\\Url\\Decode   ","version":"Next","tagName":"h2"},{"title":"Exception​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Exception","content":" List Exceptions.  AbstractAggregateException AlreadyExistsException AuthenticationException : The consumer isn't authorized to access resources BulkException : Exception thrown while processing bulk of entities ConfigurationMismatchException : Configuration mismatch detected. CouldNotDeleteException CouldNotSaveException CronException EmailNotConfirmedException FileSystemException InputException: 'input invalid'; IntegrationException InvalidArgumentException InvalidEmailOrPasswordException LocalizedException MailException NoSuchEntityException: No such entity is an exception when finding an entity. NotFoundException PaymentException RemoteServiceUnavailableException RuntimeException SecurityViolationException SerializationException SessionException StateException ValidatorExceptio   ","version":"Next","tagName":"h2"},{"title":"Event​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Event","content":" Event library provides supports for Magento events.  // Event manager // Used to dispatch global events // Magento\\Framework\\Event\\Manager /** * Dispatch event * * Calls all observer callbacks registered for this event * and multiple observers matching event name pattern * * @param string $eventName * @param array $data * @return void */ public function dispatch($eventName, array $data = []) { $eventName = mb_strtolower($eventName); \\Magento\\Framework\\Profiler::start('EVENT:' . $eventName, ['group' =&gt; 'EVENT', 'name' =&gt; $eventName]); foreach ($this-&gt;_eventConfig-&gt;getObservers($eventName) as $observerConfig) { $event = new \\Magento\\Framework\\Event($data); $event-&gt;setName($eventName); $wrapper = new Observer(); $wrapper-&gt;setData(array_merge(['event' =&gt; $event], $data)); \\Magento\\Framework\\Profiler::start('OBSERVER:' . $observerConfig['name']); $this-&gt;_invoker-&gt;dispatch($observerConfig, $wrapper); \\Magento\\Framework\\Profiler::stop('OBSERVER:' . $observerConfig['name']); } \\Magento\\Framework\\Profiler::stop('EVENT:' . $eventName); } // Dispatches an event to observer's callback // Magento\\Framework\\Event\\Observer /** * Dispatches an event to observer's callback * * @param Event $event * @return $this */ public function dispatch(Event $event) { if (!$this-&gt;isValidFor($event)) { return $this; } $callback = $this-&gt;getCallback(); $this-&gt;setEvent($event); $_profilerKey = 'OBSERVER: '; if (is_object($callback[0])) { $_profilerKey .= get_class($callback[0]); } else { $_profilerKey .= (string)$callback[0]; } $_profilerKey .= ' -&gt; ' . $callback[1]; \\Magento\\Framework\\Profiler::start($_profilerKey); call_user_func($callback, $this); \\Magento\\Framework\\Profiler::stop($_profilerKey); return $this; }   ","version":"Next","tagName":"h2"},{"title":"Filter Template​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Filter-Template","content":" ","version":"Next","tagName":"h2"},{"title":"HTTP​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#HTTP","content":" ","version":"Next","tagName":"h2"},{"title":"Message​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Message","content":" Message library is responsible for message creation and management.   /** * @var MessageManagerInterface */ protected $messageManager; // $context Magento\\Framework\\App\\Action\\Context $this-&gt;messageManager = $context-&gt;getMessageManager(); $this-&gt;messageManager-&gt;addSuccessMessage(__('msg')); $this-&gt;messageManager-&gt;addWarningMessage(__('msg'));   ","version":"Next","tagName":"h2"},{"title":"ObjectManager​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#ObjectManager","content":" ","version":"Next","tagName":"h2"},{"title":"Phrase​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Phrase","content":" Class \\Magento\\Framework\\Phrase calls renderer to make the translation of the text.  __('text')   ","version":"Next","tagName":"h2"},{"title":"Logger​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Logger","content":" Logger provides a standard mechanism to log to system and error logs.(Molologger)  ","version":"Next","tagName":"h2"},{"title":"Search​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Search-1","content":" ","version":"Next","tagName":"h2"},{"title":"Shell​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Shell","content":" A library with object-oriented interface for generation of shell commands  ","version":"Next","tagName":"h2"},{"title":"View - UI​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#View---UI","content":" ","version":"Next","tagName":"h2"},{"title":"Multiple Stores​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Multiple-Stores","content":" ","version":"Next","tagName":"h2"},{"title":"Currentcy​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Currentcy","content":" ","version":"Next","tagName":"h3"},{"title":"Locale​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Locale","content":" ","version":"Next","tagName":"h3"},{"title":"Files​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Files","content":" Magento/FileSystem:  The library includes File, HTTP, HTTPS and Zlib drivers.  ","version":"Next","tagName":"h2"},{"title":"FileSystem Driver​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#FileSystem-Driver","content":" File HTTP HTTPS Zlib   ","version":"Next","tagName":"h3"},{"title":"Directory​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Directory","content":" \\Magento\\Framework\\Filesystem\\DirectoryList class defines list of directories available in the application.  \\\\ \\Magento\\Framework\\App\\Filesystem\\DirectoryList $result = [ self::ROOT =&gt; [parent::PATH =&gt; ''], self::APP =&gt; [parent::PATH =&gt; 'app'], self::CONFIG =&gt; [parent::PATH =&gt; 'app/etc'], self::LIB_INTERNAL =&gt; [parent::PATH =&gt; 'lib/internal'], self::VAR_DIR =&gt; [parent::PATH =&gt; 'var'], /** @deprecated */ self::VAR_EXPORT =&gt; [parent::PATH =&gt; 'var/export'], self::CACHE =&gt; [parent::PATH =&gt; 'var/cache'], self::LOG =&gt; [parent::PATH =&gt; 'var/log'], self::DI =&gt; [parent::PATH =&gt; 'generated/metadata'], self::GENERATION =&gt; [parent::PATH =&gt; Io::DEFAULT_DIRECTORY], self::SESSION =&gt; [parent::PATH =&gt; 'var/session'], self::MEDIA =&gt; [parent::PATH =&gt; 'pub/media', parent::URL_PATH =&gt; 'media'], self::STATIC_VIEW =&gt; [parent::PATH =&gt; 'pub/static', parent::URL_PATH =&gt; 'static'], self::PUB =&gt; [parent::PATH =&gt; 'pub', parent::URL_PATH =&gt; ''], self::LIB_WEB =&gt; [parent::PATH =&gt; 'lib/web'], self::TMP =&gt; [parent::PATH =&gt; 'var/tmp'], self::UPLOAD =&gt; [parent::PATH =&gt; 'pub/media/upload', parent::URL_PATH =&gt; 'media/upload'], self::TMP_MATERIALIZATION_DIR =&gt; [parent::PATH =&gt; 'var/view_preprocessed/pub/static'], self::TEMPLATE_MINIFICATION_DIR =&gt; [parent::PATH =&gt; 'var/view_preprocessed'], self::SETUP =&gt; [parent::PATH =&gt; 'setup/src'], self::COMPOSER_HOME =&gt; [parent::PATH =&gt; 'var/composer_home'], self::GENERATED =&gt; [parent::PATH =&gt; 'generated'], self::GENERATED_CODE =&gt; [parent::PATH =&gt; Io::DEFAULT_DIRECTORY], self::GENERATED_METADATA =&gt; [parent::PATH =&gt; 'generated/metadata'], self::VAR_IMPORT_EXPORT =&gt; [parent::PATH =&gt; 'var', parent::URL_PATH =&gt; 'import_export'], ];   Get directory  \\\\ Magento\\Framework\\Filesystem::getDirectoryRead() \\\\ ==&gt; Magento\\Framework\\Filesystem\\Directory\\Read implement getAbsolutePath getRelativePath read search isExist stat isReadable isFile isDirectory openFile readFile \\\\ Magento\\Framework\\Filesystem::getDirectoryWrite() \\\\ ==&gt; Magento\\Framework\\Filesystem\\Directory\\Write create delete renameFile copyFile createSymlink changePermissions changePermissionsRecursively openFile writeFile // Get get absolute path $directory-&gt;getAbsolutePath() // Get relative path $directory-&gt;getRelativePath() // Magento\\Framework\\App\\Filesystem\\DirectoryResolver::validatePath() // Magento directories resolver. $path = $this-&gt;getStorage()-&gt;getSession()-&gt;getCurrentPath(); if (!$this-&gt;directoryResolver-&gt;validatePath($path, DirectoryList::MEDIA)) { throw new \\Magento\\Framework\\Exception\\LocalizedException( __('Directory %1 is not under storage root path.', $path) ); }   ","version":"Next","tagName":"h3"},{"title":"Glob​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Glob","content":" Laminas\\Stdlib\\Glob  ","version":"Next","tagName":"h3"},{"title":"File​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#File","content":" Read &amp; Write file  \\\\ Magento\\Framework\\Filesystem\\File\\Read \\\\ Magento\\Framework\\Filesystem\\File\\Write   ","version":"Next","tagName":"h3"},{"title":"File IO​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#File-IO","content":" Steam files with FILE, FTP, SFTP  ","version":"Next","tagName":"h3"},{"title":"File upload​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#File-upload","content":" ","version":"Next","tagName":"h3"},{"title":"Csv​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Csv","content":" ","version":"Next","tagName":"h3"},{"title":"Serializer​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Serializer","content":" Serialize library provides interface SerializerInterface  Json - default implementation. Uses PHP native json_encode/json_decode functions;JsonHexTag - default implementation. Uses PHP native json_encode/json_decode functions with JSON_HEX_TAG option enabled;Serialize - less secure than Json, but gives higher performance on big arrays. Uses PHP native serialize/unserialize functions, does not unserialize objects on PHP 7.  \\\\ __construct(\\Magento\\Framework\\Serialize\\SerializerInterface $serializerInterface) $this-&gt;serializer = $serializerInterface ?: \\Magento\\Framework\\App\\ObjectManager::getInstance() -&gt;get(\\Magento\\Framework\\Serialize\\Serializer\\JsonHexTag::class); ... $this-&gt;serializer-&gt;serialize($arrays); $this-&gt;serializer-&gt;unserialize($string)   ","version":"Next","tagName":"h2"},{"title":"Session​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Session","content":" ","version":"Next","tagName":"h2"},{"title":"Standard session management​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Standard-session-management","content":" Magento\\Framework\\Session\\SessionManager   ","version":"Next","tagName":"h3"},{"title":"Session handler​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Session-handler","content":" FileDbRedis  ","version":"Next","tagName":"h3"},{"title":"Security​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Security","content":" Session IDValidator  Validate REMOTE_ADDR Validate HTTP_VIA Validate HTTP_X_FORWARDED_FOR Validate HTTP_USER_AGENT Validator with domain, lifetime, path, samesite   Session Size Config  Max session size admin &amp; frontend   Session Lifetime  Admin Session Lifetime   ","version":"Next","tagName":"h3"},{"title":"Logger & Debug session​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Logger--Debug-session","content":" Cookies =&gt; Session   ","version":"Next","tagName":"h3"},{"title":"URL​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#URL","content":" URL encode, decode, validator  ","version":"Next","tagName":"h2"},{"title":"Escaper​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Escaper","content":" ","version":"Next","tagName":"h2"},{"title":"Debug & Profiler​","type":1,"pageTitle":"Magento 2 Framework","url":"/docs/mage2/mage-framework#Debug--Profiler","content":"","version":"Next","tagName":"h2"},{"title":"ref","type":0,"sectionRef":"#","url":"/docs/nextjs/ref","content":"ref https://hardcover.app/blog/next-js-app-router-seo","keywords":"","version":"Next"},{"title":"Lazy Loading","type":0,"sectionRef":"#","url":"/docs/nextjs/Lazy Loading","content":"Lazy Loading Lazy loading in Next.js helps improve the initial loading performance of an application by decreasing the amount of JavaScript needed to render a route. There are two ways you can implement lazy loading in Next.js: Using Dynamic Imports with next/dynamicUsing React.lazy() with Suspensenext/dynamic","keywords":"","version":"Next"},{"title":"Middleware","type":0,"sectionRef":"#","url":"/docs/nextjs/Middleware","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Middleware","url":"/docs/nextjs/Middleware#Use-Cases","content":" Authentication and AuthorizationServer-Side Redirects: Redirect users at the server level based on certain conditions (e.g., locale, user role).Path Rewriting: Support A/B testing, feature rollouts, or legacy paths by dynamically rewriting paths to API routes or pages based on request properties.Bot Detection: Protect your resources by detecting and blocking bot traffic.Logging and Analytics: Capture and analyze request data for insights before processing by the page or API.Feature Flagging: Enable or disable features dynamically for seamless feature rollouts or testing.  ","version":"Next","tagName":"h2"},{"title":"middleware may not be the optimal approach​","type":1,"pageTitle":"Middleware","url":"/docs/nextjs/Middleware#middleware-may-not-be-the-optimal-approach","content":" Complex Data Fetching and Manipulation: Middleware is not designed for direct data fetching or manipulation, this should be done within Route Handlers or server-side utilities instead.Heavy Computational TasksExtensive Session Management (Middleware should just management basic session)Direct Database Operations: Performing direct database operations within Middleware is not recommended. Database interactions should done within Route Handlers or server-side utilities.  ","version":"Next","tagName":"h2"},{"title":"Example middleware.ts​","type":1,"pageTitle":"Middleware","url":"/docs/nextjs/Middleware#Example-middlewarets","content":" import { NextResponse } from &quot;next/server&quot;; import type { NextRequest } from &quot;next/server&quot;; // This function can be marked `async` if using `await` inside export function middleware(request: NextRequest) { return NextResponse.redirect(new URL(&quot;/home&quot;, request.url)); } // See &quot;Matching Paths&quot; below to learn more export const config = { matcher: &quot;/about/:path*&quot;, };   ","version":"Next","tagName":"h3"},{"title":"wrapper-middleware.ts​","type":1,"pageTitle":"Middleware","url":"/docs/nextjs/Middleware#wrapper-middlewarets","content":" import { NextMiddleware } from &quot;next/server&quot;; export type WrapMiddlewareParams = { middleware?: NextMiddleware; }; export interface WrapMiddleware { (params: AuthMiddlewareParams): NextMiddleware; } const createWrapperMiddleware: WrapMiddleware = ( params: WrapMiddlewareParams, ) =&gt; { const { middleware } = params; return async function middlewareWrapper( ...args ): Promise&lt;NextMiddlewareResult&gt; { const [request, event] = args; const { pathname } = request.nextUrl; if (middleware) { return middleware(...args); } }; }; export { createAuthMiddleware };  ","version":"Next","tagName":"h3"},{"title":"Route Handler","type":0,"sectionRef":"#","url":"/docs/nextjs/Route Handler","content":"","keywords":"","version":"Next"},{"title":"Redirecting​","type":1,"pageTitle":"Route Handler","url":"/docs/nextjs/Route Handler#Redirecting","content":" ","version":"Next","tagName":"h2"},{"title":"Managing redirects at scale (advanced)​","type":1,"pageTitle":"Route Handler","url":"/docs/nextjs/Route Handler#Managing-redirects-at-scale-advanced","content":" Optimizing data lookup performance use Middleware with Bloom filterBloom Filter Example ","version":"Next","tagName":"h2"},{"title":"Static Assets","type":0,"sectionRef":"#","url":"/docs/nextjs/Static Assets","content":"Static Assets the file public/avatars/me.png can be viewed by visiting the /avatars/me.png path. The code to display that image might look like: import Image from 'next/image' export function Avatar({ id, alt }) { return &lt;Image src={`/avatars/${id}.png`} alt={alt} width=&quot;64&quot; height=&quot;64&quot; /&gt; } Caching Robots, Favicons, and others manifest.json sitemap.xml","keywords":"","version":"Next"},{"title":"NodeJS","type":0,"sectionRef":"#","url":"/docs/nodejs/","content":"","keywords":"","version":"Next"},{"title":"NestJS Framework​","type":1,"pageTitle":"NodeJS","url":"/docs/nodejs/#NestJS-Framework","content":"","version":"Next","tagName":"h2"},{"title":"Debugging Nodejs","type":0,"sectionRef":"#","url":"/docs/nodejs/Debugging Node.js","content":"Debugging Nodejs https://nodejs.org/en/learn/getting-started/debugging","keywords":"","version":"Next"},{"title":"Events","type":0,"sectionRef":"#","url":"/docs/nodejs/Events","content":"Events","keywords":"","version":"Next"},{"title":"Graphql resolvers","type":0,"sectionRef":"#","url":"/docs/nodejs/graphql/resolvers","content":"Graphql resolvers","keywords":"","version":"Next"},{"title":"NestJs Framework","type":0,"sectionRef":"#","url":"/docs/nodejs/Nestjs/","content":"NestJs Framework","keywords":"","version":"Next"},{"title":"What is Authentication?","type":0,"sectionRef":"#","url":"/docs/nodejs/Nestjs/Authentication","content":"","keywords":"","version":"Next"},{"title":"Authentication with Username and Password​","type":1,"pageTitle":"What is Authentication?","url":"/docs/nodejs/Nestjs/Authentication#Authentication-with-Username-and-Password","content":" ","version":"Next","tagName":"h2"},{"title":"Authentication Factors​","type":1,"pageTitle":"What is Authentication?","url":"/docs/nodejs/Nestjs/Authentication#Authentication-Factors","content":" ","version":"Next","tagName":"h2"},{"title":"Logger","type":0,"sectionRef":"#","url":"/docs/nodejs/Logger","content":"Logger","keywords":"","version":"Next"},{"title":"Single-factor authentication​","type":1,"pageTitle":"What is Authentication?","url":"/docs/nodejs/Nestjs/Authentication#Single-factor-authentication","content":" ","version":"Next","tagName":"h3"},{"title":"Two-factor authentication (2FA)​","type":1,"pageTitle":"What is Authentication?","url":"/docs/nodejs/Nestjs/Authentication#Two-factor-authentication-2FA","content":" ","version":"Next","tagName":"h3"},{"title":"Multiple-factor authentication​","type":1,"pageTitle":"What is Authentication?","url":"/docs/nodejs/Nestjs/Authentication#Multiple-factor-authentication","content":" Passwordless Authentication Authentication at Auth0 JWT token  ","version":"Next","tagName":"h3"},{"title":"Passport Nodejs​","type":1,"pageTitle":"What is Authentication?","url":"/docs/nodejs/Nestjs/Authentication#Passport-Nodejs","content":" Passport is the most popular node.js authentication library, well-known by the community and successfully used in many production applications.  Authenticate a user by verifying their &quot;credentials&quot; (such as username/password, JSON Web Token (JWT), or identity token from an Identity Provider)Manage authenticated stateAttach information about the authenticated user to the Request  Auth strategies Implementing in Passport ","version":"Next","tagName":"h2"},{"title":"Best Practices for Node.js Development","type":0,"sectionRef":"#","url":"/docs/nodejs/Best Practices for Node.js Development","content":"","keywords":"","version":"Next"},{"title":"Background: A Primer on How Node.js Works​","type":1,"pageTitle":"Best Practices for Node.js Development","url":"/docs/nodejs/Best Practices for Node.js Development#Background-A-Primer-on-How-Nodejs-Works","content":" Node.js is most popular for it’s asynchronous event-driven, non-blocking I/O processing. It gets most of this concurrency and asynchronism from Javascript’s single-threaded event loop model. ","version":"Next","tagName":"h2"},{"title":"What is Authorization?","type":0,"sectionRef":"#","url":"/docs/nodejs/Nestjs/Authorization","content":"","keywords":"","version":"Next"},{"title":"Role-based access control​","type":1,"pageTitle":"What is Authorization?","url":"/docs/nodejs/Nestjs/Authorization#Role-based-access-control","content":" ","version":"Next","tagName":"h3"},{"title":"Claims-based authorization​","type":1,"pageTitle":"What is Authorization?","url":"/docs/nodejs/Nestjs/Authorization#Claims-based-authorization","content":" ","version":"Next","tagName":"h2"},{"title":"CASL​","type":1,"pageTitle":"What is Authorization?","url":"/docs/nodejs/Nestjs/Authorization#CASL","content":" ","version":"Next","tagName":"h2"},{"title":"Implementing a \"PoliciesGuard\"​","type":1,"pageTitle":"What is Authorization?","url":"/docs/nodejs/Nestjs/Authorization#Implementing-a-PoliciesGuard","content":"","version":"Next","tagName":"h2"},{"title":"Injection","type":0,"sectionRef":"#","url":"/docs/nodejs/Nestjs/Injection","content":"Injection","keywords":"","version":"Next"},{"title":"middleware","type":0,"sectionRef":"#","url":"/docs/nodejs/Nestjs/middleware","content":"middleware","keywords":"","version":"Next"},{"title":"Node.js Architecture","type":0,"sectionRef":"#","url":"/docs/nodejs/Node.js Architecture","content":"Node.js Architecture Read moreUnderstanding the NodeJS Architecture","keywords":"","version":"Next"},{"title":"Repository","type":0,"sectionRef":"#","url":"/docs/nodejs/Nestjs/Repository","content":"Repository","keywords":"","version":"Next"},{"title":"Node.js with WebAssembly","type":0,"sectionRef":"#","url":"/docs/nodejs/Node.js with WebAssembly","content":"Node.js with WebAssembly","keywords":"","version":"Next"},{"title":"Nodejs File system","type":0,"sectionRef":"#","url":"/docs/nodejs/Nodejs File system","content":"Nodejs File system","keywords":"","version":"Next"},{"title":"Orm","type":0,"sectionRef":"#","url":"/docs/nodejs/Orm","content":"Orm","keywords":"","version":"Next"},{"title":"Nodejs Monitor","type":0,"sectionRef":"#","url":"/docs/nodejs/Nodejs Monitor","content":"Nodejs Monitor","keywords":"","version":"Next"},{"title":"Process Management","type":0,"sectionRef":"#","url":"/docs/nodejs/Process Management","content":"Process Management","keywords":"","version":"Next"},{"title":"Profiling Node.js Applications","type":0,"sectionRef":"#","url":"/docs/nodejs/Profiling Node.js Applications","content":"Profiling Node.js Applications https://nodejs.org/en/learn/getting-started/profiling","keywords":"","version":"Next"},{"title":"Validation","type":0,"sectionRef":"#","url":"/docs/nodejs/Validation","content":"Validation","keywords":"","version":"Next"},{"title":"Streaming","type":0,"sectionRef":"#","url":"/docs/nodejs/Streaming","content":"Streaming","keywords":"","version":"Next"},{"title":"Typescript","type":0,"sectionRef":"#","url":"/docs/nodejs/Typescript/","content":"Typescript","keywords":"","version":"Next"},{"title":"Setup docker","type":0,"sectionRef":"#","url":"/docs/server/docker/basic","content":"Setup docker Install docker sudo pacman -Sy docker sudo systemctl start docker.service sudo systemctl enable docker.service sudo usermod -aG docker $USER docker run hello-world sudo pacman -Sy docker-compose #add more lines /etc/sysctl.conf vm.overcommit_memory=1 vm.max_map_count=262144 net.core.somaxconn=65535 sysctl --system //Reload sysctl vars #live system sysctl -w vm.overcommit_memory=1 sysctl -w vm.max_map_count=262144 sysctl -w net.core.somaxconn=65535 # docker network sudo ip addr show docker0 Localhost : 172.17.0.1 localhost host.docker.internal ","keywords":"","version":"Next"},{"title":"ENV vs ARG","type":0,"sectionRef":"#","url":"/docs/server/docker/env-arg","content":"ENV vs ARG ENV is for future running containers. ARG for building your Docker image. ARG VAR_A 5 ENV VAR_B 6 RUN echo $VAR_A RUN echo $VAR_B ","keywords":"","version":"Next"},{"title":"Docker Mac version","type":0,"sectionRef":"#","url":"/docs/server/docker/docker-mac","content":"","keywords":"","version":"Next"},{"title":"Error after upgrading to the latest Docker Desktop version on Mac.​","type":1,"pageTitle":"Docker Mac version","url":"/docs/server/docker/docker-mac#Error-after-upgrading-to-the-latest-Docker-Desktop-version-on-Mac","content":" Error  failed to solve with frontend dockerfile.v0: failed to build LLB: failed to compute cache key: &quot;/.env&quot; not found: not found   Resolve  export DOCKER_BUILDKIT=0 export COMPOSE_DOCKER_CLI_BUILD=0  ","version":"Next","tagName":"h2"},{"title":"SOLID in Nodejs","type":0,"sectionRef":"#","url":"/docs/nodejs/SOLID","content":"","keywords":"","version":"Next"},{"title":"Single Responsibility Principle​","type":1,"pageTitle":"SOLID in Nodejs","url":"/docs/nodejs/SOLID#Single-Responsibility-Principle","content":" Every module, class or function should have only one reason to change.  ","version":"Next","tagName":"h2"},{"title":"Problem statement​","type":1,"pageTitle":"SOLID in Nodejs","url":"/docs/nodejs/SOLID#Problem-statement","content":" Say we need to make class Journal and we need to have the ability to add or remove journals to it , then we need a way or a method to write and read the content of this journal to the hard disk.  ","version":"Next","tagName":"h3"},{"title":"Abstraction​","type":1,"pageTitle":"SOLID in Nodejs","url":"/docs/nodejs/SOLID#Abstraction","content":" Make a journal classMake addEntry and removeEntry methodsWrite and Read from the hard disk  ","version":"Next","tagName":"h3"},{"title":"Bad Approach​","type":1,"pageTitle":"SOLID in Nodejs","url":"/docs/nodejs/SOLID#Bad-Approach","content":" This looks like a small problem we will start by making a class Journal To make the basic features of adding and removing journals  class Journal { constructor() { this.entries = {}; } addEntry(text) { let c = ++Journal.count; // count of journals let entry = `${c}: ${text}`; this.entries[c] = entry; return c; } removeEntry(index) { delete this.entries[index]; } toString() { return Object.values(this.entries).join('\\n'); } } Journal.count = 0;   So far so good let's move to the second feature where we add a read and write method to the hard disk Note : Reading and Writing to streams are only applicable on NodeJs  We will require the fs module and add the methods of writing and reading the journal entries  onst fs = require('fs'); class Journal { constructor() { this.entries = {}; } addEntry(text) { let c = ++Journal.count; let entry = `${c}: ${text}`; this.entries[c] = entry; return c; } removeEntry(index) { delete this.entries[index]; } toString() { return Object.values(this.entries).join('\\n'); } save(filename) { fs.writeFileSync(filename, this.toString()); } load(path) { // code to read from a path } } Journal.count = 0;   Huh that seemed easy but what if we needed to add another method of loading data such as loading form an api what if we wanted to add some preprocessing to the data before saving as you can see this class Journal is experiencing an Anti pattern know as Class Explosion which is a bad thing.  ","version":"Next","tagName":"h3"},{"title":"Better Approach​","type":1,"pageTitle":"SOLID in Nodejs","url":"/docs/nodejs/SOLID#Better-Approach","content":" what we are trying to make it here is to prevent our Journal class from having multible responsiblities and make the code more flexible to use First , we will remove the save part from out Journal class making it only responsible for entries managment. Then , we make a new Class to handle the writing to the disk part we will call it WritingManager  class Journal { constructor() { this.entries = {}; } addEntry(text) { let c = ++Journal.count; let entry = `${c}: ${text}`; this.entries[c] = entry; return c; } removeEntry(index) { delete this.entries[index]; } toString() { return Object.values(this.entries).join('\\n'); } } Journal.count = 0; class WritingManager { saveToFile(journal, filename) { fs.writeFileSync(filename, journal.toString()); } }  ","version":"Next","tagName":"h3"},{"title":"multi-stage-builds","type":0,"sectionRef":"#","url":"/docs/server/docker/multi-stage-builds","content":"multi-stage-builds","keywords":"","version":"Next"},{"title":"network","type":0,"sectionRef":"#","url":"/docs/server/docker/network","content":"network","keywords":"","version":"Next"},{"title":"image","type":0,"sectionRef":"#","url":"/docs/server/docker/image","content":"image","keywords":"","version":"Next"},{"title":"optimizing-builds-with-cache","type":0,"sectionRef":"#","url":"/docs/server/docker/optimizing-builds-with-cache","content":"optimizing-builds-with-cache","keywords":"","version":"Next"},{"title":"reduce-image-size","type":0,"sectionRef":"#","url":"/docs/server/docker/reduce-image-size","content":"reduce-image-size","keywords":"","version":"Next"},{"title":"volume","type":0,"sectionRef":"#","url":"/docs/server/docker/volume","content":"volume","keywords":"","version":"Next"},{"title":"Kubernetes vs Docker","type":0,"sectionRef":"#","url":"/docs/server/kubernetes/Kubernetes vs Docker","content":"","keywords":"","version":"Next"},{"title":"Docker images and Dockerfiles​","type":1,"pageTitle":"Kubernetes vs Docker","url":"/docs/server/kubernetes/Kubernetes vs Docker#Docker-images-and-Dockerfiles","content":" A Docker image is an immutable, stand-alone, and executable package that contains everything needed to run a piece of software, including the runtime, filesystem, system tools, application's code, libraries, and settings.  An image is composed of a base image, which typically includes a minimal operating system, a runtime environment, and some essential tools required to run software applications, and additional layers that represent modifications and additions made to that base image.  It serves as a template for creating Docker containers.  Both base and custom images are usually stored on and downloaded from servers called Docker registries, like the official Docker Hub registry.  ","version":"Next","tagName":"h3"},{"title":"Dockerfiles​","type":1,"pageTitle":"Kubernetes vs Docker","url":"/docs/server/kubernetes/Kubernetes vs Docker#Dockerfiles","content":" A Dockerfile is a plain text file that contains all the necessary instructions to create a Docker image.  When you build the Docker image using the docker build command,  FROM ubuntu:latest RUN apt update RUN apt install -y nginx COPY test_html /var/www/html RUN ln -sf /dev/stdout /var/log/nginx/access.log EXPOSE 80 CMD /usr/sbin/nginx -g 'daemon off;'   ","version":"Next","tagName":"h3"},{"title":"Docker containers​","type":1,"pageTitle":"Kubernetes vs Docker","url":"/docs/server/kubernetes/Kubernetes vs Docker#Docker-containers","content":" A Docker container is a runnable instance of a Docker image.  ","version":"Next","tagName":"h3"},{"title":"Docker Compose​","type":1,"pageTitle":"Kubernetes vs Docker","url":"/docs/server/kubernetes/Kubernetes vs Docker#Docker-Compose","content":" An overview of Docker Compose files Docker Compose files are written in the YAML format and are, by default, named compose.yaml.  They usually contain a list of:  Services: the containers, their configurations, and their relationships.Networks: the virtual networks that facilitate the communication between the different services.Volumes: the persistent data storages used by the services.Configs: the services configuration stored separately from the containers filesystems.Secrets: the sensitive services data, such as passwords or tokens.  Start an overview of Kubernetes  Core Kubernetes concepts Kubernetes revolves around three core concepts: Pods, Nodes and clusters.  A Pod is the smallest deployable unit of computation within a Node, that runs one or more tightly coupled containers that are designed to share storage and network resources.A Node, also called Worker Node, is an individual server within a cluster that can run multiple Pods, providing the resources and runtime environment for containers.A cluster is a collection of Nodes that are managed by the control plane and that work together to run containerized applications by providing the entire computing infrastructure. The Kubernetes control plane The control plane is the central management component that administers the entire Kubernetes cluster. It is composed of several components, including:  The API server, which is responsible for processing RESTful API requests and serving as the gateway to the cluster's internal workings.etcd, which is a database used by Kubernetes to store and manage the cluster's configuration data.The scheduler, which is responsible for placing Pods onto suitable Nodes within the cluster.The controller manager, which regulates the state of the system to ensure it matches the desired configurations specified by users.  Kubernetes Worker Nodes Kubernetes Pods  Kubernetes Controllers  Using Docker and Kubernetes  A real-life scenario: Automating the deployment of an application with Docker and Kubernetes  Step 1: Developing the application Step 2: Creating a Dockerfile Step 3: Building the Docker image Step 4: Testing the Docker image Step 5: Pushing the Docker image to a registry Step 6: Setting up a Kubernetes cluster Step 7: Creating a Kubernetes Deployment and Service configuration Step 8: Applying the Kubernetes configuration to the cluster Step 9: Automating the process with CI/CD ","version":"Next","tagName":"h3"},{"title":"Setup docker","type":0,"sectionRef":"#","url":"/docs/server/kubernetes/basic","content":"Setup docker","keywords":"","version":"Next"},{"title":"AWK command","type":0,"sectionRef":"#","url":"/docs/server/linux/awk","content":"","keywords":"","version":"Next"},{"title":"AWK Operations:​","type":1,"pageTitle":"AWK command","url":"/docs/server/linux/awk#AWK-Operations","content":" (a) Scans a file line by line(b) Splits each input line into fields(c) Compares input line/fields to pattern(d) Performs action(s) on matched lines  ","version":"Next","tagName":"h2"},{"title":"Useful For:​","type":1,"pageTitle":"AWK command","url":"/docs/server/linux/awk#Useful-For","content":" (a) Transform data files(b) Produce formatted reports  ","version":"Next","tagName":"h2"},{"title":"Programming Constructs:​","type":1,"pageTitle":"AWK command","url":"/docs/server/linux/awk#Programming-Constructs","content":" (a) Format output lines (b) Arithmetic and string operations (c) Conditionals and loops  ","version":"Next","tagName":"h2"},{"title":"Syntax:​","type":1,"pageTitle":"AWK command","url":"/docs/server/linux/awk#Syntax","content":" awk options 'selection _criteria {action }' input-file &gt; output-file  ","version":"Next","tagName":"h3"},{"title":"Examples:​","type":1,"pageTitle":"AWK command","url":"/docs/server/linux/awk#Examples","content":" ","version":"Next","tagName":"h2"},{"title":"1, Default behavior of Awk:​","type":1,"pageTitle":"AWK command","url":"/docs/server/linux/awk#1-Default-behavior-of-Awk","content":" awk '{print}' employee.txtOutput:  ajay manager account 45000 sunil clerk account 25000 varun manager sales 50000 amit manager account 47000 tarun peon sales 15000 deepak clerk sales 23000 sunil peon sales 13000 satvik director purchase 80000   ","version":"Next","tagName":"h3"},{"title":"2, Print the lines which match the given pattern.​","type":1,"pageTitle":"AWK command","url":"/docs/server/linux/awk#2-Print-the-lines-which-match-the-given-pattern","content":" awk '/manager/ {print}' employee.txtOutput:  ajay manager account 45000 varun manager sales 50000 amit manager account 47000   ","version":"Next","tagName":"h3"},{"title":"3, Splitting a Line Into Fields​","type":1,"pageTitle":"AWK command","url":"/docs/server/linux/awk#3-Splitting-a-Line-Into-Fields","content":" awk '{print $1,$4}' employee.txt Output:  ajay 45000 sunil 25000 varun 50000 amit 47000 tarun 15000 deepak 23000 sunil 13000 satvik 80000   ","version":"Next","tagName":"h3"},{"title":"4, To find/check for any string in any specific column:​","type":1,"pageTitle":"AWK command","url":"/docs/server/linux/awk#4-To-findcheck-for-any-string-in-any-specific-column","content":"  awk '{ if($3 == &quot;B6&quot;) print $0;}' geeksforgeeks.txt  https://www.geeksforgeeks.org/awk-command-unixlinux-examples/ ","version":"Next","tagName":"h3"},{"title":"grep command","type":0,"sectionRef":"#","url":"/docs/server/linux/grep","content":"grep command The grep command in Unix/Linux is a powerful tool used for searching and manipulating text patterns within files Syntax:grep [options] pattern [files]1, Display the File Names that Matches the Patterngrep -l &quot;unix&quot; *2, Show Line Number While Displaying the Output Using grep -ngrep -n &quot;unix&quot; geekfile.txt3, Display the lines that are not matched with the specified search string patterngrep -v &quot;unix&quot; geekfile.txt4, Matching the Lines that Start with a Stringgrep &quot;^unix&quot; geekfile.txt5, Matching the Lines that End with a Stringgrep &quot;os$&quot; geekfile.txt6, Search Recursively for a Pattern in the Directorygrep -iR geeks /home/geeks","keywords":"","version":"Next"},{"title":"Globbing in Linux","type":0,"sectionRef":"#","url":"/docs/server/linux/glob","content":"","keywords":"","version":"Next"},{"title":"Asterisks (*).​","type":1,"pageTitle":"Globbing in Linux","url":"/docs/server/linux/glob#Asterisks-","content":" * is used to match any number of characters(zero or more)  ls he*   ","version":"Next","tagName":"h2"},{"title":"Question mark (?).​","type":1,"pageTitle":"Globbing in Linux","url":"/docs/server/linux/glob#Question-mark-","content":" ? is used to match exactly one character.  ls hel?o   ","version":"Next","tagName":"h2"},{"title":"Exclamation(!).​","type":1,"pageTitle":"Globbing in Linux","url":"/docs/server/linux/glob#Exclamation","content":" ! is used to exclude characters from the list that is specified within the square brackets.  ls hello[!3] It will display the directories starting with hello, ending with any character but not 3   ","version":"Next","tagName":"h2"},{"title":"Caret(^).​","type":1,"pageTitle":"Globbing in Linux","url":"/docs/server/linux/glob#Caret","content":" ^ is used to define the starting character.  grep '^[P-R]' list.txt grep '[^A-C]' list.txt   ","version":"Next","tagName":"h2"},{"title":"Dollar sign($).​","type":1,"pageTitle":"Globbing in Linux","url":"/docs/server/linux/glob#Dollar-sign","content":" $ is used to define the ending character  grep '[A-C]$' list.txt grep '[A-C$]' list.txt   ","version":"Next","tagName":"h2"},{"title":"Square brackets ([]).​","type":1,"pageTitle":"Globbing in Linux","url":"/docs/server/linux/glob#Square-brackets-","content":" Square brackets[] are used to match the characters inside [],  ls hello[1-4]   ","version":"Next","tagName":"h2"},{"title":"Curly brackets .​","type":1,"pageTitle":"Globbing in Linux","url":"/docs/server/linux/glob#Curly-brackets-","content":" {} can be used to match filenames with more than one globbing patterns. Each pattern is separated by , in curly bracket without any space.  ls -l {?????.sh,*st.txt}   ","version":"Next","tagName":"h2"},{"title":"Pipes(|).​","type":1,"pageTitle":"Globbing in Linux","url":"/docs/server/linux/glob#Pipes","content":" | sign is also used for applying more than one condition on globbing pattern. Each pattern is separated by | symbol in the command.  ls a*+(.bash|.sh)  ","version":"Next","tagName":"h2"},{"title":"Basic file management","type":0,"sectionRef":"#","url":"/docs/server/linux/file-management","content":"Basic file management","keywords":"","version":"Next"},{"title":"List of CLI commands","type":0,"sectionRef":"#","url":"/docs/server/linux/commands","content":"","keywords":"","version":"Next"},{"title":"SSH server​","type":1,"pageTitle":"List of CLI commands","url":"/docs/server/linux/commands#SSH-server","content":" ","version":"Next","tagName":"h2"},{"title":"Unzip​","type":1,"pageTitle":"List of CLI commands","url":"/docs/server/linux/commands#Unzip","content":" ","version":"Next","tagName":"h2"},{"title":"Sync file​","type":1,"pageTitle":"List of CLI commands","url":"/docs/server/linux/commands#Sync-file","content":" while inotifywait -r -e modify,create,delete,move /directory; do rsync -avz /directory /target done ","version":"Next","tagName":"h2"},{"title":"kernel","type":0,"sectionRef":"#","url":"/docs/server/linux/kernel","content":"kernel What is Kernel? Linux kernel includes process managements, memory managements","keywords":"","version":"Next"},{"title":"Keybindings mapping on Bash","type":0,"sectionRef":"#","url":"/docs/server/linux/keybindings","content":"Keybindings mapping on Bash https://www.computerhope.com/unix/bash/bind.htm Key | ----------|--------------------------------------------------------------------------------------------------------- Ctrl + A | Go to the beginning of the line you are currently typing on Ctrl + E | Go to the end of the line you are currently typing on Ctrl + L | Clears the Screen, similar to the clear command Ctrl + U | Clears the line before the cursor position. If you are at the end of the line, clears the entire line. Ctrl + H | Same as backspace Ctrl + R | Let’s you search through previously used commands Ctrl + C | Kill whatever you are running Ctrl + D | Exit the current shell Ctrl + Z | Puts whatever you are running into a suspended background process. fg restores it. Ctrl + W | Delete the word before the cursor Ctrl + K | Clear the line after the cursor Ctrl + T | Swap the last two characters before the cursor Esc + T | Swap the last two words before the cursor Alt + F | Move cursor forward one word on the current line Alt + B | Move cursor backward one word on the current line Tab | Auto-complete files and folder names Vi mode Zsh docs","keywords":"","version":"Next"},{"title":"Basic network management","type":0,"sectionRef":"#","url":"/docs/server/linux/network","content":"Basic network management","keywords":"","version":"Next"},{"title":"User permission on linux","type":0,"sectionRef":"#","url":"/docs/server/linux/permission","content":"User permission on linux","keywords":"","version":"Next"},{"title":"regular expressions","type":0,"sectionRef":"#","url":"/docs/server/linux/regular-expressions","content":"regular expressions grep","keywords":"","version":"Next"},{"title":"SED command in Linux","type":0,"sectionRef":"#","url":"/docs/server/linux/sed","content":"SED command in Linux SED command in UNIX stands for stream editor and it can perform lots of functions on file like searching, find and replace, insertion or deletion. 1, Replacing or substituting string 2, Replacing the nth occurrence of a pattern in a line 3, Replacing all the occurrence of the pattern in a line 4, Printing only the replaced lines","keywords":"","version":"Next"},{"title":"Hardware info","type":0,"sectionRef":"#","url":"/docs/server/linux/Hardware info","content":"","keywords":"","version":"Next"},{"title":"CPU​","type":1,"pageTitle":"Hardware info","url":"/docs/server/linux/Hardware info#CPU","content":" sudo dmidecode -t processor; cat /proc/cpuinfo lshw -C cpu; lscpu   ","version":"Next","tagName":"h2"},{"title":"Mainboard​","type":1,"pageTitle":"Hardware info","url":"/docs/server/linux/Hardware info#Mainboard","content":" sudo dmidecode -t baseboard;   ","version":"Next","tagName":"h2"},{"title":"GPU​","type":1,"pageTitle":"Hardware info","url":"/docs/server/linux/Hardware info#GPU","content":" lshw -C display lspci | grep VGA nvidia-smi   https://gist.github.com/neomatrix369/256913dcf77cdbb5855dd2d7f5d81b84  ","version":"Next","tagName":"h2"},{"title":"RAM​","type":1,"pageTitle":"Hardware info","url":"/docs/server/linux/Hardware info#RAM","content":" sudo dmidecode -t memory sudo dmidecode -t memory | grep -i size lshw -C memory lspci | grep &quot;RAM Memory&quot; free -m   ","version":"Next","tagName":"h2"},{"title":"Disks​","type":1,"pageTitle":"Hardware info","url":"/docs/server/linux/Hardware info#Disks","content":" lshw -short -C disk lsblk fdisk -l df -m lsusb   ","version":"Next","tagName":"h2"},{"title":"Network​","type":1,"pageTitle":"Hardware info","url":"/docs/server/linux/Hardware info#Network","content":" lshw -C network ifconfig -a   ","version":"Next","tagName":"h2"},{"title":"Bios​","type":1,"pageTitle":"Hardware info","url":"/docs/server/linux/Hardware info#Bios","content":" dmidecode -t bios   ","version":"Next","tagName":"h2"},{"title":"Kernel​","type":1,"pageTitle":"Hardware info","url":"/docs/server/linux/Hardware info#Kernel","content":" uname -a  ","version":"Next","tagName":"h2"},{"title":"Shell Input/Output Redirections","type":0,"sectionRef":"#","url":"/docs/server/linux/output-input","content":"","keywords":"","version":"Next"},{"title":"Output Redirection:​","type":1,"pageTitle":"Shell Input/Output Redirections","url":"/docs/server/linux/output-input#Output-Redirection","content":" &gt; replaced output file&gt;&gt; add lines to end of file in Linux  ","version":"Next","tagName":"h2"},{"title":"Append text to end of file using echo command:​","type":1,"pageTitle":"Shell Input/Output Redirections","url":"/docs/server/linux/output-input#Append-text-to-end-of-file-using-echo-command","content":" echo 'text here' &gt;&gt; filename  ","version":"Next","tagName":"h3"},{"title":"Append command output to end of file:​","type":1,"pageTitle":"Shell Input/Output Redirections","url":"/docs/server/linux/output-input#Append-command-output-to-end-of-file","content":" command-name &gt;&gt; filename  date &gt;&gt; output.txt ls&gt;&gt; files.txt   ","version":"Next","tagName":"h3"},{"title":"Append text when using sudo:​","type":1,"pageTitle":"Shell Input/Output Redirections","url":"/docs/server/linux/output-input#Append-text-when-using-sudo","content":" tee command:  echo 'text' | sudo tee -a my_file.txt echo '104.20.186.5 www.cyberciti.biz' | sudo tee -a /etc/hosts   the bash/sh to run command using sudo:  sudo sh -c 'echo my_text &gt;&gt; file1' sudo -- bash -c 'echo &quot;some data&quot; &gt;&gt; /my/path/to/filename.txt'   ","version":"Next","tagName":"h3"},{"title":"Input Redirection <​","type":1,"pageTitle":"Shell Input/Output Redirections","url":"/docs/server/linux/output-input#Input-Redirection-","content":" &lt;&lt;  ","version":"Next","tagName":"h2"},{"title":"Pipes |​","type":1,"pageTitle":"Shell Input/Output Redirections","url":"/docs/server/linux/output-input#Pipes-","content":" ","version":"Next","tagName":"h2"},{"title":"stdout and stderr​","type":1,"pageTitle":"Shell Input/Output Redirections","url":"/docs/server/linux/output-input#stdout-and-stderr","content":" refer docsWhat does &amp;&gt; do in bash? ","version":"Next","tagName":"h2"},{"title":"Source package","type":0,"sectionRef":"#","url":"/docs/server/linux/source-list","content":"Source package APT needs to be given a “list of package sources (repositories)”: the file /etc/apt/sources.list will list the different repositories that publish Debian packages. /etc/apt/sources.list /etc/apt/sources.list.d/* deb url distribution component1 component2 component3 [..] componentX deb-src url distribution component1 component2 component3 [..] componentX # /etc/apt/sources.list deb http://cdn-aws.deb.debian.org/debian bullseye main deb-src http://cdn-aws.deb.debian.org/debian bullseye main deb http://security.debian.org/debian-security bullseye-security main deb-src http://security.debian.org/debian-security bullseye-security main deb http://cdn-aws.deb.debian.org/debian bullseye-updates main deb-src http://cdn-aws.deb.debian.org/debian bullseye-updates main deb http://cdn-aws.deb.debian.org/debian bullseye-backports main deb-src http://cdn-aws.deb.debian.org/debian bullseye-backports main # /etc/apt/sources.list.d/docker.list deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian bullseye stable List packages apt list --installed ","keywords":"","version":"Next"},{"title":"Stream Editor.","type":0,"sectionRef":"#","url":"/docs/server/linux/stream-editor","content":"Stream Editor. sed docs","keywords":"","version":"Next"},{"title":"Start programing bash","type":0,"sectionRef":"#","url":"/docs/server/linux/start-bash-programming","content":"Start programing bash","keywords":"","version":"Next"},{"title":"system-trace","type":0,"sectionRef":"#","url":"/docs/server/linux/system-trace","content":"system-trace","keywords":"","version":"Next"},{"title":"System debugging","type":0,"sectionRef":"#","url":"/docs/server/linux/system-debugging","content":"System debugging For web debugging, curl and curl -I are handy, or their wget equivalents, or the more modern httpie. To know current cpu/disk status, the classic tools are top (or the better htop), iostat, and iotop. Use iostat -mxz 15 for basic CPU and detailed per-partition disk stats and performance insight. For network connection details, use netstat and ss. For a quick overview of what's happening on a system, dstat is especially useful. For broadest overview with details, use glances. To know memory status, run and understand the output of free and vmstat. In particular, be aware the &quot;cached&quot; value is memory held by the Linux kernel as file cache, so effectively counts toward the &quot;free&quot; value. Java system debugging is a different kettle of fish, but a simple trick on Oracle's and some other JVMs is that you can run kill -3 &lt;pid&gt; and a full stack trace and heap summary (including generational garbage collection details, which can be highly informative) will be dumped to stderr/logs. The JDK's jps, jstat, jstack, jmap are useful. SJK tools are more advanced. Use mtr as a better traceroute, to identify network issues. For looking at why a disk is full, ncdu saves time over the usual commands like du -sh *. To find which socket or process is using bandwidth, try iftop or nethogs. The ab tool (comes with Apache) is helpful for quick-and-dirty checking of web server performance. For more complex load testing, try siege. For more serious network debugging, wireshark, tshark, or ngrep. Know about strace and ltrace. These can be helpful if a program is failing, hanging, or crashing, and you don't know why, or if you want to get a general idea of performance. Note the profiling option (-c), and the ability to attach to a running process (-p). Use trace child option (-f) to avoid missing important calls. Know about ldd to check shared libraries etc — but never run it on untrusted files. Know how to connect to a running process with gdb and get its stack traces. Use /proc. It's amazingly helpful sometimes when debugging live problems. Examples: /proc/cpuinfo, /proc/meminfo, /proc/cmdline, /proc/xxx/cwd, /proc/xxx/exe, /proc/xxx/fd/, /proc/xxx/smaps (where xxx is the process id or pid). When debugging why something went wrong in the past, sar can be very helpful. It shows historic statistics on CPU, memory, network, etc. For deeper systems and performance analyses, look at stap (SystemTap), perf, and sysdig. Check what OS you're on with uname or uname -a (general Unix/kernel info) or lsb_release -a (Linux distro info). Use dmesg whenever something's acting really funny (it could be hardware or driver issues). If you delete a file and it doesn't free up expected disk space as reported by du, check whether the file is in use by a process:lsof | grep deleted | grep &quot;filename-of-my-big-file&quot;","keywords":"","version":"Next"},{"title":"User Management on Linux","type":0,"sectionRef":"#","url":"/docs/server/linux/user-management","content":"User Management on Linux","keywords":"","version":"Next"},{"title":"Reverse Proxy","type":0,"sectionRef":"#","url":"/docs/server/nginx/reverse-proxy","content":"Reverse Proxy","keywords":"","version":"Next"},{"title":"How to Zip(Extract) / Unzip(Compressed) files","type":0,"sectionRef":"#","url":"/docs/server/linux/zip-and-unzip-files","content":"","keywords":"","version":"Next"},{"title":"Zip/Unzip with tar​","type":1,"pageTitle":"How to Zip(Extract) / Unzip(Compressed) files","url":"/docs/server/linux/zip-and-unzip-files#ZipUnzip-with-tar","content":" man tar   Tar supports a vast range of compression programs such as gzip, bzip2, lzip, lzma, lzop, xz and compress When creating compressed tar archives, it is an accepted convention to append the compressor suffix to the archive file name. For example, if an archive has been compressed with gzip , it should be named archive.tar.gz.  ","version":"Next","tagName":"h2"},{"title":"Creating Tar Archive​","type":1,"pageTitle":"How to Zip(Extract) / Unzip(Compressed) files","url":"/docs/server/linux/zip-and-unzip-files#Creating-Tar-Archive","content":" For example, to create an archive named archive.tar from the files named file1, file2, file3, you would run the following command:  tar -cf archive.tar file1 file2 file3   Here is the equivalent command using the long-form options:  tar --create --file=archive.tar file1 file2 file3   Creating Tar Gz Archive : z option The -z option tells tar to compress the archive using the gzip algorithm as it is created. For example, to create a tar.gz archive from given files, you would run the following command:  ","version":"Next","tagName":"h2"},{"title":"Extracting Tar Archive​","type":1,"pageTitle":"How to Zip(Extract) / Unzip(Compressed) files","url":"/docs/server/linux/zip-and-unzip-files#Extracting-Tar-Archive","content":" tar -xvf archive.tar   ","version":"Next","tagName":"h2"},{"title":"Extracting Tar Archive in a Different Directory​","type":1,"pageTitle":"How to Zip(Extract) / Unzip(Compressed) files","url":"/docs/server/linux/zip-and-unzip-files#Extracting-Tar-Archive-in-a-Different-Directory","content":" tar -xf archive.tar -C /opt/files   ","version":"Next","tagName":"h3"},{"title":"Tar Gz File​","type":1,"pageTitle":"How to Zip(Extract) / Unzip(Compressed) files","url":"/docs/server/linux/zip-and-unzip-files#Tar-Gz-File","content":" ","version":"Next","tagName":"h3"},{"title":"Tar Xz File (*.tar.xz)​","type":1,"pageTitle":"How to Zip(Extract) / Unzip(Compressed) files","url":"/docs/server/linux/zip-and-unzip-files#Tar-Xz-File-tarxz","content":" ","version":"Next","tagName":"h3"},{"title":"First basic zip command​","type":1,"pageTitle":"How to Zip(Extract) / Unzip(Compressed) files","url":"/docs/server/linux/zip-and-unzip-files#First-basic-zip-command","content":" zip command ","version":"Next","tagName":"h3"},{"title":"oauth","type":0,"sectionRef":"#","url":"/docs/shopify/oauth","content":"oauth","keywords":"","version":"Next"},{"title":"SSL Offloader","type":0,"sectionRef":"#","url":"/docs/server/nginx/ssl-offloader","content":"SSL Offloader","keywords":"","version":"Next"},{"title":"tes","type":0,"sectionRef":"#","url":"/docs/tes","content":"tes","keywords":"","version":"Next"},{"title":"tasks","type":0,"sectionRef":"#","url":"/docs/tasks","content":"tasks Todo⏫ 🛫 2024-05-28 📅 2024-06-02 Diagrams Bob -&gt; Alice : hello Alice -&gt; Wonderland: hello Wonderland -&gt; next: hello next -&gt; Last: hello Last -&gt; next: hello next -&gt; Wonderland : hello Wonderland -&gt; Alice : hello Alice -&gt; Bob: hello ","keywords":"","version":"Next"},{"title":"Buffers","type":0,"sectionRef":"#","url":"/docs/vim/Buffers","content":"Buffers","keywords":"","version":"Next"},{"title":"Cheat Sheet","type":0,"sectionRef":"#","url":"/docs/vim/Cheat Sheet","content":"Cheat Sheet ![[Pasted image 20240530020726.png]]![[Pasted image 20240530083507.png]] ![[neovim-cheat-sheet-v0-vmyvqrxi2e4c1.png]]","keywords":"","version":"Next"},{"title":"Example setup nginx","type":0,"sectionRef":"#","url":"/docs/server/nginx/setup","content":"","keywords":"","version":"Next"},{"title":"M2​","type":1,"pageTitle":"Example setup nginx","url":"/docs/server/nginx/setup#M2","content":" ","version":"Next","tagName":"h2"},{"title":"Laravel​","type":1,"pageTitle":"Example setup nginx","url":"/docs/server/nginx/setup#Laravel","content":" ","version":"Next","tagName":"h2"},{"title":"WP​","type":1,"pageTitle":"Example setup nginx","url":"/docs/server/nginx/setup#WP","content":" ","version":"Next","tagName":"h2"},{"title":"Nodejs​","type":1,"pageTitle":"Example setup nginx","url":"/docs/server/nginx/setup#Nodejs","content":"","version":"Next","tagName":"h2"},{"title":"help","type":0,"sectionRef":"#","url":"/docs/vim/help","content":"help Copy clipboard : sudo apt-get install xclip","keywords":"","version":"Next"},{"title":"Neo Vim","type":0,"sectionRef":"#","url":"/docs/vim/Neo Vim","content":"Neo Vim","keywords":"","version":"Next"},{"title":"Macro recording","type":0,"sectionRef":"#","url":"/docs/vim/Macro recording","content":"Macro recording In Vim, a macro is a feature that allows you to record a sequence of commands that you use to perform a given task.reference: use-vim-macros","keywords":"","version":"Next"},{"title":"neovim","type":0,"sectionRef":"#","url":"/docs/vim/neovim","content":"neovim","keywords":"","version":"Next"},{"title":"Vim Mapping","type":0,"sectionRef":"#","url":"/docs/vim/mapping","content":"","keywords":"","version":"Next"},{"title":"-- Navigate within insert mode​","type":1,"pageTitle":"Vim Mapping","url":"/docs/vim/mapping#---Navigate-within-insert-mode","content":" &lt;C-b&gt; : beginning of line &lt;C-e&gt; : end of line &lt;C-h&gt; : move left &lt;C-l&gt; : move right &lt;C-j&gt; : move down &lt;C-k&gt; : move up &lt;C-s&gt; : Save file  ","version":"Next","tagName":"h3"},{"title":"--Comment​","type":1,"pageTitle":"Vim Mapping","url":"/docs/vim/mapping#--Comment","content":" &lt;leader&gt;/ : comment in both modes (normal, insert)  ","version":"Next","tagName":"h3"},{"title":"--Tab​","type":1,"pageTitle":"Vim Mapping","url":"/docs/vim/mapping#--Tab","content":" &lt;S-b&gt; : New tab (new buffer)&lt;tab&gt; : goto next tab&lt;S-tab&gt; : goto prev tab&lt;leader&gt;x : close tab  ","version":"Next","tagName":"h3"},{"title":"--Git​","type":1,"pageTitle":"Vim Mapping","url":"/docs/vim/mapping#--Git","content":" &lt;leader&gt;gt : Git status&lt;leader&gt;gc : Git commit  ![[Pasted image 20240530015604.png]] ","version":"Next","tagName":"h3"},{"title":"Register","type":0,"sectionRef":"#","url":"/docs/vim/Register","content":"Register","keywords":"","version":"Next"},{"title":"vim-mode","type":0,"sectionRef":"#","url":"/docs/vim/vim-mode","content":"","keywords":"","version":"Next"},{"title":"Normal Mode​","type":1,"pageTitle":"vim-mode","url":"/docs/vim/vim-mode#Normal-Mode","content":" ","version":"Next","tagName":"h2"},{"title":"Insert Mode​","type":1,"pageTitle":"vim-mode","url":"/docs/vim/vim-mode#Insert-Mode","content":" ","version":"Next","tagName":"h2"},{"title":"Visual Mode​","type":1,"pageTitle":"vim-mode","url":"/docs/vim/vim-mode#Visual-Mode","content":" Visual line mode (v)​  Visual blocks mode : (C+v)​  ","version":"Next","tagName":"h2"},{"title":"Replacing Mode​","type":1,"pageTitle":"vim-mode","url":"/docs/vim/vim-mode#Replacing-Mode","content":" ","version":"Next","tagName":"h2"},{"title":"Command Mode​","type":1,"pageTitle":"vim-mode","url":"/docs/vim/vim-mode#Command-Mode","content":" ","version":"Next","tagName":"h2"},{"title":"Org Mode​","type":1,"pageTitle":"vim-mode","url":"/docs/vim/vim-mode#Org-Mode","content":" text and task management plugin for Vim based on Emacs’ Org-Mode  Syntax highlighting for displaying the text in different colors and fonts.Headlines for creating outline trees making it possible to show or hide parts of the text in the buffer.Plain lists such as ordered lists (with numbers) and unordered lists (with dashes).Links that behave like HTML hyperlinks to include references to either external files or website URLs.Todo lists with checkbox support.Formatted dates and times. ","version":"Next","tagName":"h2"},{"title":"My config setup system","type":0,"sectionRef":"#","url":"/docs/workflow/dotfiles","content":"","keywords":"","version":"Next"},{"title":"i3wm​","type":1,"pageTitle":"My config setup system","url":"/docs/workflow/dotfiles#i3wm","content":" Sway mapping $mod = Window S = shift  ","version":"Next","tagName":"h2"},{"title":"Mapping keyboard​","type":1,"pageTitle":"My config setup system","url":"/docs/workflow/dotfiles#Mapping-keyboard","content":" $mod + S + q $mod + S + c $mod + S + b $mod + S + [0-9] $mod + S + n $mod + S + m $mod + s : Window stacking $mod + w : Window tabbing $mod + e : Window splitting $mod + [0-9] : Switch workspace $mod + n : New workspace $mode + S + space : Toggle floating $mod + f : Toggle full mode $mod + S + f : Global full $mod + Enter : Terminal $mod + d : Menu applications $mod + S + p $mod + S + d $mod + ? $mod + S + e ## Moving $mod + v $mod + b $mod + &amp;#8592 &amp;#8593 &amp;#8594 &amp;#8595 : focus window $mod + S + &amp;#8592 &amp;#8593 &amp;#8594 &amp;#8595 : move window  ","version":"Next","tagName":"h3"},{"title":"My Tmux Workflow","type":0,"sectionRef":"#","url":"/docs/workflow/tmux-workflow","content":"","keywords":"","version":"Next"},{"title":"Start new project​","type":1,"pageTitle":"My Tmux Workflow","url":"/docs/workflow/tmux-workflow#Start-new-project","content":" &lt;prefix&gt; + C + c //new session &lt;prefix&gt; + $ //rename session cd {project} &lt;prefix&gt; + d // Close project   ","version":"Next","tagName":"h2"},{"title":"Switch project​","type":1,"pageTitle":"My Tmux Workflow","url":"/docs/workflow/tmux-workflow#Switch-project","content":" &lt;prefix&gt; + s &lt;prefix&gt; + C + f // Select project by name &lt;prefix&gt; + w // Show all windows ^^   ","version":"Next","tagName":"h2"},{"title":"Basic concepts","type":0,"sectionRef":"#","url":"/docs/workflow/tmux","content":"","keywords":"","version":"Next"},{"title":"Sessions​","type":1,"pageTitle":"Basic concepts","url":"/docs/workflow/tmux#Sessions","content":" &lt;prefix&gt; + Ctrl + c : Create new session &lt;prefix&gt; + $ : Rename session &lt;prefix&gt; + d : Kill session &lt;prefix&gt; + s : list sessions &lt;prefix&gt; + w : preview sessions &lt;prefix&gt; + Ctrl + f : find session by name   ","version":"Next","tagName":"h2"},{"title":"Create sessions​","type":1,"pageTitle":"Basic concepts","url":"/docs/workflow/tmux#Create-sessions","content":" $ tmux $ tmux new $ tmux new-session   ","version":"Next","tagName":"h3"},{"title":"Detach Sessions​","type":1,"pageTitle":"Basic concepts","url":"/docs/workflow/tmux#Detach-Sessions","content":" $ exit   ","version":"Next","tagName":"h3"},{"title":"View Sessions​","type":1,"pageTitle":"Basic concepts","url":"/docs/workflow/tmux#View-Sessions","content":" $ tmux ls $ tmux list-sessions   In Tmux terminal, we check Tmux sessions by hitting Ctrl + b + s.  ","version":"Next","tagName":"h3"},{"title":"Rename Sessions​","type":1,"pageTitle":"Basic concepts","url":"/docs/workflow/tmux#Rename-Sessions","content":" $ tmux rename-session [-t session-name] [new-session-name]   ","version":"Next","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Basic concepts","url":"/docs/workflow/tmux#Windows","content":" ","version":"Next","tagName":"h2"},{"title":"Create/Close Windows​","type":1,"pageTitle":"Basic concepts","url":"/docs/workflow/tmux#CreateClose-Windows","content":" &lt;prefix&gt; + c : Create window &lt;prefix&gt; + , : Rename window &lt;prefix&gt; + &amp; : Close window   ","version":"Next","tagName":"h3"},{"title":"Navigation Windows​","type":1,"pageTitle":"Basic concepts","url":"/docs/workflow/tmux#Navigation-Windows","content":" &lt;prefix&gt; + 0..9   ","version":"Next","tagName":"h3"},{"title":"Panes​","type":1,"pageTitle":"Basic concepts","url":"/docs/workflow/tmux#Panes","content":" Each window in the session could have multiple panes  ","version":"Next","tagName":"h2"},{"title":"Create Panes​","type":1,"pageTitle":"Basic concepts","url":"/docs/workflow/tmux#Create-Panes","content":" Split to the pane varically or the pane horizontal  &lt;prefix&gt; + % : split the pane vertically &lt;prefix&gt; + &quot; : split the pane horizontally   ","version":"Next","tagName":"h3"},{"title":"Kill Pane​","type":1,"pageTitle":"Basic concepts","url":"/docs/workflow/tmux#Kill-Pane","content":" &lt;prefix&gt; + x   ","version":"Next","tagName":"h3"},{"title":"Tmux Kill command​","type":1,"pageTitle":"Basic concepts","url":"/docs/workflow/tmux#Tmux-Kill-command","content":" tmux kill-session -t {session} tmux kill-window tmux kill-pane tmux kill-server   ","version":"Next","tagName":"h3"},{"title":"Navigation​","type":1,"pageTitle":"Basic concepts","url":"/docs/workflow/tmux#Navigation","content":" &lt;prefix&gt; + q : Show pane numbers &lt;prefix&gt; + q 0..9 : Switch pane by number   ","version":"Next","tagName":"h3"},{"title":"Zoom​","type":1,"pageTitle":"Basic concepts","url":"/docs/workflow/tmux#Zoom","content":" &lt;prefix&gt; + + : Toggle maximum pane &lt;prefix&gt; + z : Toggle pane zoom  ","version":"Next","tagName":"h3"},{"title":"Create windows​","type":1,"pageTitle":"My Tmux Workflow","url":"/docs/workflow/tmux-workflow#Create-windows","content":" Docker  &lt;prefix&gt; + c goto docker &lt;prefix&gt; + , // Rename the window to &quot;Docker&quot;   Server  ssh to server &lt;prefix&gt; + , // Rename the window to &quot;server&quot;   Git  Editor  &lt;prefix&gt; + c &lt;prefix&gt; + , // Renew the window to 'editor' vim . // I use NeoVim   ","version":"Next","tagName":"h2"},{"title":"Select window​","type":1,"pageTitle":"My Tmux Workflow","url":"/docs/workflow/tmux-workflow#Select-window","content":" &lt;prefix&gt; + 0..9 &lt;prefix&gt; + f // select window by name   ","version":"Next","tagName":"h2"},{"title":"Moving windows​","type":1,"pageTitle":"My Tmux Workflow","url":"/docs/workflow/tmux-workflow#Moving-windows","content":" C + S + Left C + S + Right &lt;prefix&gt; + C + Left &lt;prefix&gt; + C + Right   ","version":"Next","tagName":"h2"},{"title":"Create panes & move on window​","type":1,"pageTitle":"My Tmux Workflow","url":"/docs/workflow/tmux-workflow#Create-panes--move-on-window","content":" # Split &lt;prefix&gt; + - // split window to vertically &lt;prefix&gt; + _ // split window to horizontally &lt;prefix&gt; + ! // break the active pane into a new window # Move &lt;prefix&gt; + h &lt;prefix&gt; + j &lt;prefix&gt; + k &lt;prefix&gt; + l &lt;prefix&gt; + q &lt;prefix&gt; + q + 0..9 # Swap &lt;prefix&gt; + S + &lt; // Swap pane to left &lt;prefix&gt; + S + &gt; // Swap pane to right # Zoom &lt;prefix&gt; + + &lt;prefix&gt; + z # Close C + d   Mouse mode  &lt;prefix&gt; + m   Vim mode on Tmux  https://waylonwalker.com/tmux-copy-mode/  &lt;prefix&gt; + Enter : Goto copy mode begin-selection : Space copy-selection-and-cancel : Enter  ","version":"Next","tagName":"h2"}],"options":{"id":"default"}}