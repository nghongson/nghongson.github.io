"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9329],{27259:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>o});var r=s(74848),t=s(28453);const i={},a="Globbing in Linux",l={id:"server/linux/glob",title:"Globbing in Linux",description:"Globbing involves expanding a wildcard pattern such as * or ? into a list of pathnames that match a pattern.",source:"@site/docs/server/linux/glob.md",sourceDirName:"server/linux",slug:"/server/linux/glob",permalink:"/docs/server/linux/glob",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Basic file management",permalink:"/docs/server/linux/file-management"},next:{title:"grep command",permalink:"/docs/server/linux/grep"}},c={},o=[{value:"Asterisks (*).",id:"Asterisks-",level:2},{value:"Question mark (?).",id:"Question-mark-",level:2},{value:"Exclamation(!).",id:"Exclamation",level:2},{value:"Caret(^).",id:"Caret",level:2},{value:"Dollar sign($).",id:"Dollar-sign",level:2},{value:"Square brackets ([]).",id:"Square-brackets-",level:2},{value:"Curly brackets .",id:"Curly-brackets-",level:2},{value:"Pipes(|).",id:"Pipes",level:2}];function d(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"Globbing-in-Linux",children:"Globbing in Linux"}),"\n",(0,r.jsxs)(n.p,{children:["Globbing involves expanding a wildcard pattern such as * or ? into a list of pathnames that match a pattern.",(0,r.jsx)(n.br,{}),"\n","We use globbing with various commands such as rm, find, grep, ls, cat, cp to achieve a more desired result while executing these commands.",(0,r.jsx)(n.br,{}),"\n","Globbing is very useful in cases where we have scripts that interact with user input. A user's input might be vague and so we have to have measures that handle such cases. For example, if we expect the input to be a Yes, YES, Y we can use the asterisk glob to handle this."]}),"\n",(0,r.jsx)(n.h2,{id:"Asterisks-",children:"Asterisks (*)."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"*"})," is used to match any number of characters(zero or more)"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ls he*\n"})}),"\n",(0,r.jsx)(n.h2,{id:"Question-mark-",children:"Question mark (?)."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"?"})," is used to match exactly one character."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ls hel?o\n"})}),"\n",(0,r.jsx)(n.h2,{id:"Exclamation",children:"Exclamation(!)."}),"\n",(0,r.jsx)(n.p,{children:"! is used to exclude characters from the list that is specified within the square brackets."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ls hello[!3]\n\nIt will display the directories starting with hello, ending with any character but not 3\n"})}),"\n",(0,r.jsx)(n.h2,{id:"Caret",children:"Caret(^)."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"^"})," is used to define the starting character."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"grep '^[P-R]' list.txt\ngrep '[^A-C]' list.txt\n"})}),"\n",(0,r.jsx)(n.h2,{id:"Dollar-sign",children:"Dollar sign($)."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"$"})," is used to define the ending character"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"grep '[A-C]$' list.txt\ngrep '[A-C$]' list.txt\n"})}),"\n",(0,r.jsx)(n.h2,{id:"Square-brackets-",children:"Square brackets ([])."}),"\n",(0,r.jsx)(n.p,{children:"Square brackets[] are used to match the characters inside [],"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ls hello[1-4]\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"Curly-brackets-",children:["Curly brackets ","."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"{}"})," can be used to match filenames with more than one globbing patterns. Each pattern is separated by ",(0,r.jsx)(n.code,{children:","})," in curly bracket without any space."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ls -l {?????.sh,*st.txt}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"Pipes",children:"Pipes(|)."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"|"})," sign is also used for applying more than one condition on globbing pattern. Each pattern is separated by ",(0,r.jsx)(n.code,{children:"|"})," symbol in the command."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ls a*+(.bash|.sh)\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var r=s(96540);const t={},i=r.createContext(t);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);