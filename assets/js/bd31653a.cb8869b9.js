"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1682],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>c});var l=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},i=Object.keys(e);for(l=0;l<i.length;l++)a=i[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)a=i[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var u=l.createContext({}),p=function(e){var t=l.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=p(e.components);return l.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,u=e.parentName,m=r(e,["components","mdxType","originalType","parentName"]),d=p(a),c=n,k=d["".concat(u,".").concat(c)]||d[c]||s[c]||i;return a?l.createElement(k,o(o({ref:t},m),{},{components:a})):l.createElement(k,o({ref:t},m))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=d;var r={};for(var u in t)hasOwnProperty.call(t,u)&&(r[u]=t[u]);r.originalType=e,r.mdxType="string"==typeof e?e:n,o[1]=r;for(var p=2;p<i;p++)o[p]=a[p];return l.createElement.apply(null,o)}return l.createElement.apply(null,a)}d.displayName="MDXCreateElement"},2956:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>s,frontMatter:()=>i,metadata:()=>r,toc:()=>p});var l=a(7462),n=(a(7294),a(3905));const i={},o="Determine the layout initialization process",r={unversionedId:"mage2/ layout-initialization-process",id:"mage2/ layout-initialization-process",title:"Determine the layout initialization process",description:"Determine how layout is compiled.",source:"@site/docs/mage2/ layout-initialization-process.md",sourceDirName:"mage2",slug:"/mage2/ layout-initialization-process",permalink:"/docs/mage2/ layout-initialization-process",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Security on Magento",permalink:"/docs/mage2/security"},next:{title:"2FA",permalink:"/docs/mage2/2FA"}},u={},p=[{value:"Determine how layout is compiled.",id:"determine-how-layout-is-compiled",level:2},{value:"How would you debug your layout.xml files and verify that the right layout instructions are used?",id:"how-would-you-debug-your-layoutxml-files-and-verify-that-the-right-layout-instructions-are-used",level:3},{value:"Determine how HTML output is rendered.",id:"determine-how-html-output-is-rendered",level:2},{value:"How does Magento flush output, and what mechanisms exist to access and customize output?",id:"how-does-magento-flush-output-and-what-mechanisms-exist-to-access-and-customize-output",level:3},{value:"Determine module layout XML schema.",id:"determine-module-layout-xml-schema",level:2},{value:"layout_generic.xsd",id:"layout_genericxsd",level:3},{value:"page_configuration.xsd",id:"page_configurationxsd",level:3},{value:"layouts.xml - declare available page layouts",id:"layoutsxml---declare-available-page-layouts",level:3},{value:"page_layout.xsd",id:"page_layoutxsd",level:3},{value:"layout result.renderResult:",id:"layout-resultrenderresult",level:3},{value:"page result.renderResult:",id:"page-resultrenderresult",level:3},{value:"In your custom controller don&#39;t forget to add entity-specific IDs:",id:"in-your-custom-controller-dont-forget-to-add-entity-specific-ids",level:3},{value:"File Collector",id:"file-collector",level:3},{value:"How do you add new elements to the pages introduced by a given module?",id:"how-do-you-add-new-elements-to-the-pages-introduced-by-a-given-module",level:3},{value:"Demonstrate the ability to use layout fallback for customizations and debugging.",id:"demonstrate-the-ability-to-use-layout-fallback-for-customizations-and-debugging",level:2},{value:"How do you identify which exact layout.xml file is processed in a given scope?",id:"how-do-you-identify-which-exact-layoutxml-file-is-processed-in-a-given-scope",level:3},{value:"How does Magento treat layout XML files with the same names in different modules?",id:"how-does-magento-treat-layout-xml-files-with-the-same-names-in-different-modules",level:2},{value:"Identify the differences between admin and frontend scopes.",id:"identify-the-differences-between-admin-and-frontend-scopes",level:2},{value:"What differences exist for layout initialization for the admin scope?",id:"what-differences-exist-for-layout-initialization-for-the-admin-scope",level:3}],m={toc:p};function s(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"determine-the-layout-initialization-process"},"Determine the layout initialization process"),(0,n.kt)("h2",{id:"determine-how-layout-is-compiled"},"Determine how layout is compiled."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"View\\Layout::*build* = View\\Layout\\Builder::*build* - once")),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"loadLayoutUpdates - reads layout xml files and DB updates by ",(0,n.kt)("em",{parentName:"p"},"current handles"),", result in ",(0,n.kt)("inlineCode",{parentName:"p"},"_updates")," array"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"event ",(0,n.kt)("inlineCode",{parentName:"li"},"layout_load_before")))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"generateLayoutXml - joins ",(0,n.kt)("inlineCode",{parentName:"p"},"_updates")," into XML string, loads XML object, initiailzes ",(0,n.kt)("inlineCode",{parentName:"p"},"_elements")," = []"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"layout.generateXml"),(0,n.kt)("li",{parentName:"ul"},"no events"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"generateLayoutBlocks - layout.generateElements"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"event ",(0,n.kt)("inlineCode",{parentName:"li"},"layout_generate_blocks_before")),(0,n.kt)("li",{parentName:"ul"},"readerPool->interpret - every reader checks for matching xml node name (attribute, body, head etc.), prepares page structure "),(0,n.kt)("li",{parentName:"ul"},"generatorPool->process"),(0,n.kt)("li",{parentName:"ul"},'add top-level element as outputElement. default "root"'),(0,n.kt)("li",{parentName:"ul"},"event ",(0,n.kt)("inlineCode",{parentName:"li"},"layout_generate_blocks_after"))))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"builder.generateLayoutBlocks -> layout.generateElements\nreaderPool.*interpret* -- schedules\n  nodeReaders[type].interpret each element -- `Layout\\ReaderInterface`\n  - html, move\n  - body - own readerPool.interpret, but without 'body' reader\n  - head - css,script,link,remove,meta,title,attribute\n  - 'container', 'referenceContainer' --\x3e Layout\\Reader\\Container\n  - 'block', 'referenceBlock' --\x3e Layout\\Reader\\Block\n  - uiComponent\n  `View\\Layout\\ReaderInterface::interpret` -- html, body, head, ui component, reader pool, container, move, block\n\nView\\Layout\\GeneratorPool.process -- generates blocks\n  buildStructure\n  generator[].*process*\n  - head, body\n  - block - creates blocks, sets layout, event `core_layout_block_create_after`, block 'actions'\n  - container - sets tag, id, class, label, display\n  - uiComponent - creates wrapper element, prepareComponent recursively etc.\n\ngetOutput\n- renderElement(root)\n  - renderNonCachedElement(root) -- hardcoded switch\n    - is uiComponent -> toHtml\n    - is block -> toHtml\n    - is container -> renderElement(child[])\n  - event `core_layout_render_element`\n")),(0,n.kt)("h3",{id:"how-would-you-debug-your-layoutxml-files-and-verify-that-the-right-layout-instructions-are-used"},"How would you debug your layout.xml files and verify that the right layout instructions are used?"),(0,n.kt)("p",null,"When XML object is created from string XML updates, this is a good place to examine resuls.\n",(0,n.kt)("inlineCode",{parentName:"p"},"View\\Layout\\Builder.generateLayoutXml")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"View\\Layout.generateXml")," is a good place to dump structure."),(0,n.kt)("h2",{id:"determine-how-html-output-is-rendered"},"Determine how HTML output is rendered."),(0,n.kt)("p",null,"First external code calls layout.addOutputElement(name) to register top level elements for output generation.\nWhen layout.",(0,n.kt)("em",{parentName:"p"},"getOutput")," is called, it renders each outputElement."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"View\\Layout::getOutput")),(0,n.kt)("li",{parentName:"ul"},"for every registered ",(0,n.kt)("inlineCode",{parentName:"li"},"_output")," element"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"View\\Layout::renderElement"))),(0,n.kt)("p",null,'When layout is build initially, it finds top level container and registers it as addOutputElement - default "root".'),(0,n.kt)("h3",{id:"how-does-magento-flush-output-and-what-mechanisms-exist-to-access-and-customize-output"},"How does Magento flush output, and what mechanisms exist to access and customize output?"),(0,n.kt)("p",null,"Render response:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"action controller returns ResponseInterface object, e.g. View\\Response\\Page")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"front controller returns this response")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"App\\Http.launch application renders result, calling response.renderResult")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"controller response renders contents and assigns to response.body")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"App\\Http")," event ",(0,n.kt)("inlineCode",{parentName:"li"},"controller_front_send_response_before")," allows to modify response before returning"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"App\\Bootstrap")," object gets response object from ",(0,n.kt)("inlineCode",{parentName:"li"},"App\\Http")),(0,n.kt)("li",{parentName:"ul"},"response.sendResponse - Zend implementation - send headers, send content")),(0,n.kt)("p",null,"Customize:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"modify any response in event ",(0,n.kt)("inlineCode",{parentName:"li"},"controller_front_send_response_before")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"View\\Element\\AbstractBlock::toHtml")," event ",(0,n.kt)("inlineCode",{parentName:"li"},"view_block_abstract_to_html_after"))),(0,n.kt)("h2",{id:"determine-module-layout-xml-schema"},"Determine module layout XML schema."),(0,n.kt)("p",null,"Module layouts:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"module/view/base/layout/")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"module/view/frontend/layout/")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"module/view/adminhtml/layout/"))),(0,n.kt)("h3",{id:"layout_genericxsd"},"layout_generic.xsd"),(0,n.kt)("p",null,"Generic layout - useful for returning Ajax response. Doesn't have body, head, css etc., only pure structure:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-xml"},'<layout xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n  xsi:noNamespaceSchemaLocation="urn:magento:framework:View/Layout/etc/layout_generic.xsd">\n  <container\n    name="" as="" after="" before="" label=""\n    output=""\n    htmlTag="" htmlClass="" htmlId=""\n  />\n  <referenceContainer\n    name="" label=""\n    htmlTag="" htmlClass="" htmlId=""\n    display="true/false"\n    remove="true/false"\n  />\n  <block\n    class="" name="" as="" template="" before="" after="" group=""\n    acl="" aclResource="" ifconfig=""\n    output="" cacheable="bool" ttl="int"\n  />\n  <referenceBlock name="" template="" display="" remove="" />\n  <update handle="name" />\n  <move element="" destination="" as="" after="" before="" />\n  <uiComponent\n    component="" name="" as="" before="" after="" group=""\n    aclResource="" ifconfig=""\n    output="" cacheable="" ttl=""\n  />\n</config>\n')),(0,n.kt)("h3",{id:"page_configurationxsd"},"page_configuration.xsd"),(0,n.kt)("p",null,"Same as layout plus:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"top level layout selection"),(0,n.kt)("li",{parentName:"ul"},"structure is wrapped in body node"),(0,n.kt)("li",{parentName:"ul"},"additional nodes - html attribute, head title, attribute and scripts")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-xml"},'<page\n  layout="1column"\n  label=""\n  design_abstraction="custom / page_layout"\n\n  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n  xsi:noNamespaceSchemaLocation="urn:magento:framework:View/Layout/etc/page_configuration.xsd"\n>\n  <html>\n    <attribute name="" value="" />\n  </html>\n  <head>\n    <title>Title</title>\n    <css src defer ie_condition charset hreflang media rel rev sizes target type src_type />\n    <link src defer ie_condition charset hreflang media rel rev sizes target type src_type />\n    <meta content charset http-equiv name scheme />\n    <script src defer ie_condition async charset type src_type />\n    <remove src="" />\n    <attribute name="" value="" />\n  </head>\n  <update handle="" />\n  <body>\n    <attribute name="" value="" />\n    \x3c!-- container/block structure same as in generic layout --\x3e\n  </body>\n</page>\n')),(0,n.kt)("h3",{id:"layoutsxml---declare-available-page-layouts"},"layouts.xml - declare available page layouts"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"<module_dir>/view/<area_code>/layouts.xml"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"<theme_dir>/<Namespace>_<Module>/layouts.xml"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"base:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"empty"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"frontend:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"1column - extends empty"),(0,n.kt)("li",{parentName:"ul"},"2columns-left - extends 1column"),(0,n.kt)("li",{parentName:"ul"},"2columns-right - same as 2columns-left"),(0,n.kt)("li",{parentName:"ul"},"3columns - same as 2columns-left"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"adminhtml:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"admin-empty"),(0,n.kt)("li",{parentName:"ul"},"admin-1column"),(0,n.kt)("li",{parentName:"ul"},"admin-2columns-left")))),(0,n.kt)("h3",{id:"page_layoutxsd"},"page_layout.xsd"),(0,n.kt)("p",null,"Only containers"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-xml"},'<layout xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n  xsi:noNamespaceSchemaLocation="urn:magento:framework:View/Layout/etc/page_layout.xsd">\n  <referenceContainer />\n  <container />\n  <update />\n  <move />\n</layout>\n')),(0,n.kt)("h3",{id:"layout-resultrenderresult"},"layout result.renderResult:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"layout.getOutput")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"layout.build")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"View\\Layout\\Builder.build:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"loadLayoutUpdates"),(0,n.kt)("li",{parentName:"ul"},"generateLayoutXml"),(0,n.kt)("li",{parentName:"ul"},"generateLayoutBlocks")))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"create result page - adds default handles"),(0,n.kt)("li",{parentName:"ul"},"page builder.build"),(0,n.kt)("li",{parentName:"ul"},"all normal layout XML is collected and is about to create blocks"),(0,n.kt)("li",{parentName:"ul"},"custom step before generating layout blocks")),(0,n.kt)("h3",{id:"page-resultrenderresult"},"page result.renderResult:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"View\\Result\\PageFactory.create"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"View\\Result\\Page::addDefaultHandle")," - ",(0,n.kt)("inlineCode",{parentName:"p"},"default"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"$fullActionName"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"View\\Page\\Config.publicBuild = build"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"View\\Page\\Builder.build - extends View\\Layout\\Builder, custom readPageLayout on step generateLayoutBlocks")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"(inherit) loadLayoutUpdates")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"(inherit) generateLayoutXml")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"generateLayoutBlocks - additionally *readPageLayout*")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"right before creating actual blocks, reads and merges page layout xml files"),(0,n.kt)("li",{parentName:"ul"},"new instance of ",(0,n.kt)("inlineCode",{parentName:"li"},"View\\Model\\Layout\\Merge::load handles = '1column' -- uses subDir 'page_layout'")),(0,n.kt)("li",{parentName:"ul"},"`",(0,n.kt)("em",{parentName:"li"},"interprets")," found page nodes - schedules blocks. page layout instructions (root page template) are interpreted before others"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"original generateLayoutBlocks *interprets*, then runs *generators*")))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},'check View\\Page\\Config.pageLayout, e.g. "1column"'))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"adds default body classes - ",(0,n.kt)("inlineCode",{parentName:"p"},"$fullActionName"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"page-layout-$layout"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"renders block 'head.additional', 'require.js'"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"assigns vars 'requireJs', 'headContent', 'headAdditional', 'htmlAttributes', 'headAttributes', 'bodyAttributes', 'loaderIcon'"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"layout.getOutput -- already built"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"renderPage")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"result.template defined via app/etc/di.xml")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"include Magento_Theme::root.phtml"))))),(0,n.kt)("h3",{id:"in-your-custom-controller-dont-forget-to-add-entity-specific-ids"},"In your custom controller don't forget to add entity-specific IDs:"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"$page->addPageLayoutHandles(['id' => $category->getId()]);")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'- adds handle `$fullActionName_$param_$value` like `catalog_category_view_id_17`\n- informs full page cache of *entity specific page* `\\Magento\\Framework\\View\\EntitySpecificHandlesList::addHandle`\n\n    *`\\Magento\\PageCache\\Model\\Layout\\MergePlugin::beforeValidateUpdate - entity-specific layout handles must not contain TTL\n\n        e.g. catalog_category_view_id_15.xml: <block ttl="3600"> ... will throw error\n\n    * `\\Magento\\PageCache\\Observer\\ProcessLayoutRenderElement::_wrapEsi` - exclude entity-specific handles from ESI URL\n')),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"View\\Layout\\Builder.build")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"loadLayoutUpdates"),(0,n.kt)("li",{parentName:"ul"},"generateLayoutXml"),(0,n.kt)("li",{parentName:"ul"},"generateLayoutBlocks")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"View\\Page\\Builder.build")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"extend generateLayoutBlocks"),(0,n.kt)("li",{parentName:"ul"},"readPageLayout")),(0,n.kt)("h3",{id:"file-collector"},"File Collector"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"View\\File\\CollectorInterface")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"View\\File\\Collector\\Decorator\\ModuleDependency")," - Decorator that sorts view files according to dependencies between modules they belong to"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"View\\File\\Collector\\Decorator\\ModuleOutput - Decorator that filters out view files that belong to modules, output of which is prohibited")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"View\\File\\Collector\\Base - Source of base files introduced by modules"))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Collector\\Base - Source of base files introduced by modules")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"view/base/, view/{$area}/"),"\n",(0,n.kt)("inlineCode",{parentName:"p"},"Collector\\Override\\Base - Source of view files that explicitly override base files introduced by modules"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"theme/{$namespace}_{$module}/")))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Collector\\Theme - Source of view files introduced by a theme")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"theme/"))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Collector\\Override\\ThemeModular - Source of view files that explicitly override modular files of ancestor themes")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"theme/{$namespace}_{$module}/{$themeVendor}/{$themeName}/"))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Collector\\Library - Source of base layout files introduced by modules")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"lib_web/")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"each inherited theme[]: theme/web/"))),(0,n.kt)("h3",{id:"how-do-you-add-new-elements-to-the-pages-introduced-by-a-given-module"},"How do you add new elements to the pages introduced by a given module?"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'<block class="module\\block\\class" template="new module template" ... />\n')),(0,n.kt)("h2",{id:"demonstrate-the-ability-to-use-layout-fallback-for-customizations-and-debugging"},"Demonstrate the ability to use layout fallback for customizations and debugging."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"View\\Element\\Template::getTemplateFile"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"View\\Element\\Template\\File\\Resolver::getTemplateFileName(template, [module, area]) -- just caches in memory"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"View\\FileSystem::getTemplateFileName -- detects module by Module_Name::template.phtml, adds default params"),"\n",(0,n.kt)("inlineCode",{parentName:"p"},"* View\\Asset\\Repository::updateDesignParams - adds default missing params [object themeModel, locale]"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"View\\Design\\FileResolution\\Fallback\\TemplateFile.getFile(area, ) -- minify html"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"View\\Design\\FileResolution\\Fallback\\File.getFile -- calls resolver type='file'"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"View\\Design\\FileResolution\\Fallback\\Resolver\\Simple.resolve"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"View\\Design\\Fallback\\RulePool.getRule")," - by type: file, locale file, template file"),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("em",{parentName:"p"},"File fallback rule"),":"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"when missing 'module_name':",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"<theme_dir>"))),(0,n.kt)("li",{parentName:"ul"},"when set 'module_name':",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"<theme_dir>/<module_name>/templates")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"<module_dir>/view/<area_code>/templates")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"<module_dir>/view/base/templates")))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"View\\Design\\FileResolution\\Fallback\\Resolver\\Simple::resolveFile(fileRule)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"search file in each directory"))),(0,n.kt)("h3",{id:"how-do-you-identify-which-exact-layoutxml-file-is-processed-in-a-given-scope"},"How do you identify which exact layout.xml file is processed in a given scope?"),(0,n.kt)("h2",{id:"how-does-magento-treat-layout-xml-files-with-the-same-names-in-different-modules"},"How does Magento treat layout XML files with the same names in different modules?"),(0,n.kt)("p",null,'They are merged in module sequence order. Additionally, modules marked as "disable module output"\nare skipped (though deprecated).'),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"View\\File\\Collector\\Decorator\\ModuleDependency")," - Decorator that sorts\nview files according to dependencies between modules they belong to"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"View\\File\\Collector\\Decorator\\ModuleOutput")," - Decorator that filters out\nview files that belong to modules, output of which is prohibited"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"View\\File\\Collector\\Base")," - Source of base files introduced by modules"),(0,n.kt)("h2",{id:"identify-the-differences-between-admin-and-frontend-scopes"},"Identify the differences between admin and frontend scopes."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"customized layout builder and page builders - automatically init messages block")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"custom parent ",(0,n.kt)("inlineCode",{parentName:"p"},"\\Magento\\Backend\\Block\\AbstractBlock")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"auto inject AuthorizationInterface"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"custom parent ",(0,n.kt)("inlineCode",{parentName:"p"},"\\Magento\\Backend\\Block\\Template"),":"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"available some properties - authorization, mathRandom, backendSession, formKey, class nameBuilder"),(0,n.kt)("li",{parentName:"ul"},"event ",(0,n.kt)("inlineCode",{parentName:"li"},"adminhtml_block_html_before")," - fired only when non-cached render.\nTo compare, event ",(0,n.kt)("inlineCode",{parentName:"li"},"view_block_abstract_to_html_after")," fires even when block loaded from cache"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},'customized "block" layout reader (runs interpret) -- reads "acl" block attribute')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},'customzied "block" layout generator - default block ',(0,n.kt)("inlineCode",{parentName:"p"},"class=Magento\\Backend\\Block\\Template"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"controller result object with additional methods:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"setActiveMenu"),(0,n.kt)("li",{parentName:"ul"},"addBreadcrumb"),(0,n.kt)("li",{parentName:"ul"},"addContent(block) - moves to 'content'"),(0,n.kt)("li",{parentName:"ul"},"addLeft(block)"),(0,n.kt)("li",{parentName:"ul"},"addJs"),(0,n.kt)("li",{parentName:"ul"},"moveBlockToContainer")))),(0,n.kt)("h3",{id:"what-differences-exist-for-layout-initialization-for-the-admin-scope"},"What differences exist for layout initialization for the admin scope?"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"Custom layout and page builders")," - automatically initializes message block from message manager:\n",(0,n.kt)("inlineCode",{parentName:"p"},"\\Magento\\Backend\\Model\\View\\Layout\\Builder")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"\\Magento\\Backend\\Model\\View\\Page\\Builder"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"afterGenerateBlock - called in the end of generateLayoutBlocks, the end of generation - ",(0,n.kt)("inlineCode",{parentName:"li"},"layout->initMessages()")),(0,n.kt)("li",{parentName:"ul"},"getBlock('messages') or create new one"),(0,n.kt)("li",{parentName:"ul"},"addMessages from Message\\ManagerInterface"),(0,n.kt)("li",{parentName:"ul"},"addStorageType('default')")))}s.isMDXComponent=!0}}]);