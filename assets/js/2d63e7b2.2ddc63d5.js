"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[216],{9168:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var r=t(4848),o=t(8453);const s={},i="Keybindings mapping on Bash",a={id:"server/linux/keybindings",title:"Keybindings mapping on Bash",description:"https://www.computerhope.com/unix/bash/bind.htm",source:"@site/docs/server/linux/keybindings.md",sourceDirName:"server/linux",slug:"/server/linux/keybindings",permalink:"/docs/server/linux/keybindings",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"kernel",permalink:"/docs/server/linux/kernel"},next:{title:"Basic network management",permalink:"/docs/server/linux/network"}},c={},l=[];function h(e){const n={a:"a",br:"br",h1:"h1",p:"p",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"Keybindings-mapping-on-Bash",children:"Keybindings mapping on Bash"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://www.computerhope.com/unix/bash/bind.htm",children:"https://www.computerhope.com/unix/bash/bind.htm"})}),"\n",(0,r.jsxs)(n.p,{children:["Key       |",(0,r.jsx)(n.br,{}),"\n","----------|---------------------------------------------------------------------------------------------------------\nCtrl + A  |  Go to the beginning of the line you are currently typing on\nCtrl + E  |  Go to the end of the line you are currently typing on\nCtrl + L  |  Clears the Screen, similar to the clear command\nCtrl + U  |  Clears the line before the cursor position. If you are at the end of the line, clears the entire line.\nCtrl + H  |  Same as backspace\nCtrl + R  |  Let\u2019s you search through previously used commands\nCtrl + C  |  Kill whatever you are running\nCtrl + D  |  Exit the current shell\nCtrl + Z  |  Puts whatever you are running into a suspended background process. fg restores it.\nCtrl + W  |  Delete the word before the cursor\nCtrl + K  |  Clear the line after the cursor\nCtrl + T  |  Swap the last two characters before the cursor\nEsc + T   |  Swap the last two words before the cursor\nAlt + F   |  Move cursor forward one word on the current line\nAlt + B   |  Move cursor backward one word on the current line\nTab       |  Auto-complete files and folder names"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://dev.to/brandonwallace/how-to-use-vim-mode-on-the-command-line-in-bash-fnn",children:"Vi mode"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://zsh.sourceforge.io/Doc/Release/Zsh-Line-Editor.html",children:"Zsh docs"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(6540);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);