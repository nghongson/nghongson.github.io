"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1751],{85226:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var i=l(74848),t=l(28453);const s={},o="Callback Hell",a={id:"nodejs/Callback hell",title:"Callback Hell",description:'What is "callback hell"?',source:"@site/docs/nodejs/Callback hell.md",sourceDirName:"nodejs",slug:"/nodejs/Callback hell",permalink:"/docs/nodejs/Callback hell",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Best Practices for Node.js Development",permalink:"/docs/nodejs/Best Practices for Node.js Development"},next:{title:"Debugging Nodejs",permalink:"/docs/nodejs/Debugging Node.js"}},r={},c=[{value:"What is &quot;callback hell&quot;?",id:"What-is-callback-hell",level:2},{value:"What are callbacks?",id:"What-are-callbacks",level:2},{value:"How do I fix callback hell?",id:"How-do-I-fix-callback-hell",level:2},{value:"Promises",id:"Promises",level:3},{value:"Async/Await",id:"AsyncAwait",level:3}];function h(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"Callback-Hell",children:"Callback Hell"}),"\n",(0,i.jsx)(n.h2,{id:"What-is-callback-hell",children:'What is "callback hell"?'}),"\n",(0,i.jsx)(n.p,{children:"Asynchronous JavaScript, or JavaScript that uses callbacks, is hard to get right intuitively. A lot of code ends up looking like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"fs.readdir(source, function (err, files) {\n  if (err) {\n    console.log('Error finding files: ' + err)\n  } else {\n    files.forEach(function (filename, fileIndex) {\n      console.log(filename)\n      gm(source + filename).size(function (err, values) {\n        if (err) {\n          console.log('Error identifying file size: ' + err)\n        } else {\n          console.log(filename + ' : ' + values)\n          aspect = (values.width / values.height)\n          widths.forEach(function (width, widthIndex) {\n            height = Math.round(width / aspect)\n            console.log('resizing ' + filename + 'to ' + height + 'x' + height)\n            this.resize(width, height).write(dest + 'w' + width + '_' + filename, function(err) {\n              if (err) console.log('Error writing file: ' + err)\n            })\n          }.bind(this))\n        }\n      })\n    })\n  }\n})\n"})}),"\n",(0,i.jsx)(n.h2,{id:"What-are-callbacks",children:"What are callbacks?"}),"\n",(0,i.jsx)(n.h2,{id:"How-do-I-fix-callback-hell",children:"How do I fix callback hell?"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Keep your code shallow"}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"makes code easier to read thanks to the descriptive function names"}),"\n",(0,i.jsx)(n.li,{children:'when exceptions happen you will get stacktraces that reference actual function names instead of "anonymous"'}),"\n",(0,i.jsx)(n.li,{children:"allows you to move the functions and reference them by their names"}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["Modularize:",(0,i.jsx)(n.br,{}),"\n","Write small modules that each do one thing, and assemble them into other modules that do a bigger thing. You can't get into callback hell if you don't go there."]}),"\n",(0,i.jsx)(n.li,{children:"Handle every single error"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"Promises",children:"Promises"}),"\n",(0,i.jsx)(n.h3,{id:"AsyncAwait",children:"Async/Await"})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,n,l)=>{l.d(n,{R:()=>o,x:()=>a});var i=l(96540);const t={},s=i.createContext(t);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);