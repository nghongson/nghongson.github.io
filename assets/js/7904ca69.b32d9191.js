"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6872],{96341:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var i=n(74848),o=n(28453);const r={sidebar_position:9},a="Using the Entity-Attribute-Value(EAV)",s={id:"mage2/eav",title:"Using the Entity-Attribute-Value(EAV)",description:"For now, we\u2019ll just quickly go through most important ones:",source:"@site/docs/mage2/eav.md",sourceDirName:"mage2",slug:"/mage2/eav",permalink:"/docs/mage2/eav",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Working with DB",permalink:"/docs/mage2/working-with-db"},next:{title:"Magento Admin",permalink:"/docs/mage2/admin"}},l={},d=[];function u(e){const t={code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"Using-the-Entity-Attribute-ValueEAV",children:"Using the Entity-Attribute-Value(EAV)"}),"\n",(0,i.jsx)(t.h1,{id:"Product-attributes",children:"Product attributes"}),"\n",(0,i.jsx)(t.p,{children:"For now, we\u2019ll just quickly go through most important ones:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"group: Means that we add an attribute to the attribute group \u201cGeneral\u201d, which is present in all attribute sets."}),"\n",(0,i.jsx)(t.li,{children:"type: varchar means that the values will be stored in the catalog_eav_varchar table."}),"\n",(0,i.jsx)(t.li,{children:"label: A label of the attribute (that is, how it will be rendered in the backend and on the frontend)."}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"source/frontend/backend"}),": Special classes associated with the attribute:","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"source model: provides a list of options"}),"\n",(0,i.jsx)(t.li,{children:"frontend: defines how it should be rendered on the frontend"}),"\n",(0,i.jsx)(t.li,{children:"backend: allows you to perform certain actions when an attribute is loaded or saved. In our example, it will be validation."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.li,{children:"Global: defines the scope of its values (global, website, or store)"}),"\n",(0,i.jsx)(t.li,{children:"visible_on_front: A flag that defines whether an attribute should be shown on the \u201cMore Information\u201d tab on the frontend"}),"\n",(0,i.jsx)(t.li,{children:"is_html_allowed_on_front: Defines whether an attribute value may contain HTML"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"Magento\\Eav\\Setup\\EavSetup $eavSetup\n$eavSetup->addAttribute(\n    \\Magento\\Catalog\\Model\\Category::ENTITY,\n    'url_key',\n    [\n        'type' => 'varchar',\n        'label' => 'URL Key',\n        'input' => 'text',\n        'required' => false,\n        'sort_order' => 3,\n        'global' => \\Magento\\Eav\\Model\\Entity\\Attribute\\ScopedAttributeInterface::SCOPE_STORE,\n        'group' => 'General Information',\n    ]\n);\n$eavSetup->getAttributeId($eavSetup->getEntityTypeId('catalog_product'), 'your_attribute_code');\n$eavSetup->addAttributeOption($options);\n"})})]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var i=n(96540);const o={},r=i.createContext(o);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);