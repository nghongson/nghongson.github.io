"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4724],{26068:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>a});var o=t(74848),r=t(28453);const s={},c=void 0,i={id:"nodejs/Typescript/Test",title:"Test",description:"Test",source:"@site/docs/nodejs/Typescript/Test.md",sourceDirName:"nodejs/Typescript",slug:"/nodejs/Typescript/Test",permalink:"/docs/nodejs/Typescript/Test",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Project Config",permalink:"/docs/nodejs/Typescript/Project Config"},next:{title:"TypeScript Cheat Sheets",permalink:"/docs/nodejs/Typescript/TypeScript Cheat Sheets"}},p={},a=[];function d(n){const e={code:"code",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.p,{children:"Test\nWrapped function with typescript"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:'function test() {\n  console.log("test");\n  throw new Error("Error test");\n}\nasync function testAsync() {\n  console.log("start");\n  setTimeout(() => {\n    console.log("start timount");\n    console.log("finish async");\n  }, 2000);\n  console.log("end");\n}\nfunction wrap<T extends Function>(fn: T): T {\n  return <any>function (...args: any[]) {\n    try {\n      return fn(...args);\n    } catch (error) {\n      console.log("Error");\n    }\n  };\n}\nconst wrappedFoo = wrap(test);\n\ntype AsyncFn = (...args: any[]) => Promise<any>;\n\nfunction wrappedExeption<T extends AsyncFn>(\n  fn: T,\n): (...args: Parameters<T>) => Promise<Awaited<ReturnType<T>>> {\n  return async (...args: Parameters<T>) => {\n    try {\n      console.log("wrapper exception");\n      return await fn(...args);\n    } catch (exception) {\n      console.log("Exception");\n    }\n  };\n}\n\n'})})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>c,x:()=>i});var o=t(96540);const r={},s=o.createContext(r);function c(n){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:c(n.components),o.createElement(s.Provider,{value:e},n.children)}}}]);