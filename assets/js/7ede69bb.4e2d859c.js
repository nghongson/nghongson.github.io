"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4647],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>b});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(r),b=a,m=d["".concat(s,".").concat(b)]||d[b]||p[b]||i;return r?n.createElement(m,l(l({ref:t},u),{},{components:r})):n.createElement(m,l({ref:t},u))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2361:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const i={},l="Globbing in Linux",o={unversionedId:"server/linux/glob",id:"server/linux/glob",title:"Globbing in Linux",description:"Globbing involves expanding a wildcard pattern such as * or ? into a list of pathnames that match a pattern.",source:"@site/docs/server/linux/glob.md",sourceDirName:"server/linux",slug:"/server/linux/glob",permalink:"/docs/server/linux/glob",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Basic file management",permalink:"/docs/server/linux/file-management"},next:{title:"grep",permalink:"/docs/server/linux/grep"}},s={},c=[{value:"Asterisks (*).",id:"asterisks-",level:2},{value:"Question mark (?).",id:"question-mark-",level:2},{value:"Square brackets.",id:"square-brackets",level:2},{value:"Caret(^).",id:"caret",level:2},{value:"Exclamation(!).",id:"exclamation",level:2},{value:"Dollar sign($).",id:"dollar-sign",level:2},{value:"Curly brackets {}.",id:"curly-brackets-",level:2},{value:"Pipes(|).",id:"pipes",level:2}],u={toc:c};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"globbing-in-linux"},"Globbing in Linux"),(0,a.kt)("p",null,"Globbing involves expanding a wildcard pattern such as * or ? into a list of pathnames that match a pattern.",(0,a.kt)("br",{parentName:"p"}),"\n","We use globbing with various commands such as rm, find, grep, ls, cat, cp to achieve a more desired result while executing these commands.",(0,a.kt)("br",{parentName:"p"}),"\n","Globbing is very useful in cases where we have scripts that interact with user input. A user's input might be vague and so we have to have measures that handle such cases. For example, if we expect the input to be a Yes, YES, Y we can use the asterisk glob to handle this."),(0,a.kt)("h2",{id:"asterisks-"},"Asterisks (*)."),(0,a.kt)("h2",{id:"question-mark-"},"Question mark (?)."),(0,a.kt)("h2",{id:"square-brackets"},"Square brackets."),(0,a.kt)("h2",{id:"caret"},"Caret(^)."),(0,a.kt)("h2",{id:"exclamation"},"Exclamation(!)."),(0,a.kt)("h2",{id:"dollar-sign"},"Dollar sign($)."),(0,a.kt)("h2",{id:"curly-brackets-"},"Curly brackets {}."),(0,a.kt)("h2",{id:"pipes"},"Pipes(|)."))}p.isMDXComponent=!0}}]);