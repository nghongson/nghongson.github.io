"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1751],{85226:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>c});var i=n(74848),o=n(28453);const t={},a="Callback Hell",r={id:"nodejs/Callback hell",title:"Callback Hell",description:'What is "callback hell"?',source:"@site/docs/nodejs/Callback hell.md",sourceDirName:"nodejs",slug:"/nodejs/Callback hell",permalink:"/docs/nodejs/Callback hell",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Best Practices for Node.js Development",permalink:"/docs/nodejs/Best Practices for Node.js Development"},next:{title:"Debugging Nodejs",permalink:"/docs/nodejs/Debugging Node.js"}},s={},c=[{value:"What is &quot;callback hell&quot;?",id:"What-is-callback-hell",level:2},{value:"What are callbacks?",id:"What-are-callbacks",level:2},{value:"How do I fix callback hell?",id:"How-do-I-fix-callback-hell",level:2},{value:"1. Keep your code shallow",id:"1-Keep-your-code-shallow",level:3},{value:"2. Modularize:",id:"2-Modularize",level:3},{value:"3. Handle every single error",id:"3-Handle-every-single-error",level:3},{value:"Promises",id:"Promises",level:3},{value:"Async/Await",id:"AsyncAwait",level:3}];function d(e){const l={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(l.h1,{id:"Callback-Hell",children:"Callback Hell"}),"\n",(0,i.jsx)(l.h2,{id:"What-is-callback-hell",children:'What is "callback hell"?'}),"\n",(0,i.jsx)(l.p,{children:"Asynchronous JavaScript, or JavaScript that uses callbacks, is hard to get right intuitively. A lot of code ends up looking like this:"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{children:"fs.readdir(source, function (err, files) {\n  if (err) {\n    console.log('Error finding files: ' + err)\n  } else {\n    files.forEach(function (filename, fileIndex) {\n      console.log(filename)\n      gm(source + filename).size(function (err, values) {\n        if (err) {\n          console.log('Error identifying file size: ' + err)\n        } else {\n          console.log(filename + ' : ' + values)\n          aspect = (values.width / values.height)\n          widths.forEach(function (width, widthIndex) {\n            height = Math.round(width / aspect)\n            console.log('resizing ' + filename + 'to ' + height + 'x' + height)\n            this.resize(width, height).write(dest + 'w' + width + '_' + filename, function(err) {\n              if (err) console.log('Error writing file: ' + err)\n            })\n          }.bind(this))\n        }\n      })\n    })\n  }\n})\n"})}),"\n",(0,i.jsx)(l.h2,{id:"What-are-callbacks",children:"What are callbacks?"}),"\n",(0,i.jsx)(l.h2,{id:"How-do-I-fix-callback-hell",children:"How do I fix callback hell?"}),"\n",(0,i.jsx)(l.h3,{id:"1-Keep-your-code-shallow",children:"1. Keep your code shallow"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsx)(l.li,{children:"makes code easier to read thanks to the descriptive function names"}),"\n",(0,i.jsx)(l.li,{children:'when exceptions happen you will get stacktraces that reference actual function names instead of "anonymous"'}),"\n",(0,i.jsx)(l.li,{children:"allows you to move the functions and reference them by their names"}),"\n"]}),"\n",(0,i.jsx)(l.h3,{id:"2-Modularize",children:"2. Modularize:"}),"\n",(0,i.jsx)(l.p,{children:"Write small modules that each do one thing, and assemble them into other modules that do a bigger thing. You can't get into callback hell if you don't go there."}),"\n",(0,i.jsx)(l.h3,{id:"3-Handle-every-single-error",children:"3. Handle every single error"}),"\n",(0,i.jsx)(l.h3,{id:"Promises",children:"Promises"}),"\n",(0,i.jsx)(l.h3,{id:"AsyncAwait",children:"Async/Await"})]})}function h(e={}){const{wrapper:l}={...(0,o.R)(),...e.components};return l?(0,i.jsx)(l,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,l,n)=>{n.d(l,{R:()=>a,x:()=>r});var i=n(96540);const o={},t=i.createContext(o);function a(e){const l=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function r(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(t.Provider,{value:l},e.children)}}}]);