"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3714],{30089:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>a,frontMatter:()=>c,metadata:()=>d,toc:()=>l});var r=s(74848),i=s(28453);const c={},t="System debugging",d={id:"server/linux/system-debugging",title:"System debugging",description:"- For web debugging, curl and curl -I are handy, or their wget equivalents, or the more modern httpie.",source:"@site/docs/server/linux/system-debugging.md",sourceDirName:"server/linux",slug:"/server/linux/system-debugging",permalink:"/docs/server/linux/system-debugging",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Stream Editor.",permalink:"/docs/server/linux/stream-editor"},next:{title:"system-trace",permalink:"/docs/server/linux/system-trace"}},o={},l=[];function h(e){const n={a:"a",code:"code",h1:"h1",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"System-debugging",children:"System debugging"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["For web debugging, ",(0,r.jsx)(n.code,{children:"curl"})," and ",(0,r.jsx)(n.code,{children:"curl -I"})," are handy, or their ",(0,r.jsx)(n.code,{children:"wget"})," equivalents, or the more modern ",(0,r.jsx)(n.a,{href:"https://github.com/jkbrzt/httpie",children:(0,r.jsx)(n.code,{children:"httpie"})}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["To know current cpu/disk status, the classic tools are ",(0,r.jsx)(n.code,{children:"top"})," (or the better ",(0,r.jsx)(n.code,{children:"htop"}),"), ",(0,r.jsx)(n.code,{children:"iostat"}),", and ",(0,r.jsx)(n.code,{children:"iotop"}),". Use ",(0,r.jsx)(n.code,{children:"iostat -mxz 15"})," for basic CPU and detailed per-partition disk stats and performance insight."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["For network connection details, use ",(0,r.jsx)(n.code,{children:"netstat"})," and ",(0,r.jsx)(n.code,{children:"ss"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["For a quick overview of what's happening on a system, ",(0,r.jsx)(n.code,{children:"dstat"})," is especially useful. For broadest overview with details, use ",(0,r.jsx)(n.a,{href:"https://github.com/nicolargo/glances",children:(0,r.jsx)(n.code,{children:"glances"})}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["To know memory status, run and understand the output of ",(0,r.jsx)(n.code,{children:"free"})," and ",(0,r.jsx)(n.code,{children:"vmstat"}),'. In particular, be aware the "cached" value is memory held by the Linux kernel as file cache, so effectively counts toward the "free" value.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Java system debugging is a different kettle of fish, but a simple trick on Oracle's and some other JVMs is that you can run ",(0,r.jsx)(n.code,{children:"kill -3 <pid>"})," and a full stack trace and heap summary (including generational garbage collection details, which can be highly informative) will be dumped to stderr/logs. The JDK's ",(0,r.jsx)(n.code,{children:"jps"}),", ",(0,r.jsx)(n.code,{children:"jstat"}),", ",(0,r.jsx)(n.code,{children:"jstack"}),", ",(0,r.jsx)(n.code,{children:"jmap"})," are useful. ",(0,r.jsx)(n.a,{href:"https://github.com/aragozin/jvm-tools",children:"SJK tools"})," are more advanced."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.a,{href:"http://www.bitwizard.nl/mtr/",children:(0,r.jsx)(n.code,{children:"mtr"})})," as a better traceroute, to identify network issues."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["For looking at why a disk is full, ",(0,r.jsx)(n.a,{href:"https://dev.yorhel.nl/ncdu",children:(0,r.jsx)(n.code,{children:"ncdu"})})," saves time over the usual commands like ",(0,r.jsx)(n.code,{children:"du -sh *"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["To find which socket or process is using bandwidth, try ",(0,r.jsx)(n.a,{href:"http://www.ex-parrot.com/~pdw/iftop/",children:(0,r.jsx)(n.code,{children:"iftop"})})," or ",(0,r.jsx)(n.a,{href:"https://github.com/raboof/nethogs",children:(0,r.jsx)(n.code,{children:"nethogs"})}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"ab"})," tool (comes with Apache) is helpful for quick-and-dirty checking of web server performance. For more complex load testing, try ",(0,r.jsx)(n.code,{children:"siege"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["For more serious network debugging, ",(0,r.jsx)(n.a,{href:"https://wireshark.org/",children:(0,r.jsx)(n.code,{children:"wireshark"})}),", ",(0,r.jsx)(n.a,{href:"https://www.wireshark.org/docs/wsug_html_chunked/AppToolstshark.html",children:(0,r.jsx)(n.code,{children:"tshark"})}),", or ",(0,r.jsx)(n.a,{href:"http://ngrep.sourceforge.net/",children:(0,r.jsx)(n.code,{children:"ngrep"})}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Know about ",(0,r.jsx)(n.code,{children:"strace"})," and ",(0,r.jsx)(n.code,{children:"ltrace"}),". These can be helpful if a program is failing, hanging, or crashing, and you don't know why, or if you want to get a general idea of performance. Note the profiling option (",(0,r.jsx)(n.code,{children:"-c"}),"), and the ability to attach to a running process (",(0,r.jsx)(n.code,{children:"-p"}),"). Use trace child option (",(0,r.jsx)(n.code,{children:"-f"}),") to avoid missing important calls."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Know about ",(0,r.jsx)(n.code,{children:"ldd"})," to check shared libraries etc \u2014 but ",(0,r.jsx)(n.a,{href:"http://www.catonmat.net/blog/ldd-arbitrary-code-execution/",children:"never run it on untrusted files"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Know how to connect to a running process with ",(0,r.jsx)(n.code,{children:"gdb"})," and get its stack traces."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"/proc"}),". It's amazingly helpful sometimes when debugging live problems. Examples: ",(0,r.jsx)(n.code,{children:"/proc/cpuinfo"}),", ",(0,r.jsx)(n.code,{children:"/proc/meminfo"}),", ",(0,r.jsx)(n.code,{children:"/proc/cmdline"}),", ",(0,r.jsx)(n.code,{children:"/proc/xxx/cwd"}),", ",(0,r.jsx)(n.code,{children:"/proc/xxx/exe"}),", ",(0,r.jsx)(n.code,{children:"/proc/xxx/fd/"}),", ",(0,r.jsx)(n.code,{children:"/proc/xxx/smaps"})," (where ",(0,r.jsx)(n.code,{children:"xxx"})," is the process id or pid)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["When debugging why something went wrong in the past, ",(0,r.jsx)(n.a,{href:"http://sebastien.godard.pagesperso-orange.fr/",children:(0,r.jsx)(n.code,{children:"sar"})})," can be very helpful. It shows historic statistics on CPU, memory, network, etc."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["For deeper systems and performance analyses, look at ",(0,r.jsx)(n.code,{children:"stap"})," (",(0,r.jsx)(n.a,{href:"https://sourceware.org/systemtap/wiki",children:"SystemTap"}),"), ",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Perf_%28Linux%29",children:(0,r.jsx)(n.code,{children:"perf"})}),", and ",(0,r.jsx)(n.a,{href:"https://github.com/draios/sysdig",children:(0,r.jsx)(n.code,{children:"sysdig"})}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Check what OS you're on with ",(0,r.jsx)(n.code,{children:"uname"})," or ",(0,r.jsx)(n.code,{children:"uname -a"})," (general Unix/kernel info) or ",(0,r.jsx)(n.code,{children:"lsb_release -a"})," (Linux distro info)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"dmesg"})," whenever something's acting really funny (it could be hardware or driver issues)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If you delete a file and it doesn't free up expected disk space as reported by ",(0,r.jsx)(n.code,{children:"du"}),", check whether the file is in use by a process:\n",(0,r.jsx)(n.code,{children:'lsof | grep deleted | grep "filename-of-my-big-file"'})]}),"\n"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var r=s(96540);const i={},c=r.createContext(i);function t(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);