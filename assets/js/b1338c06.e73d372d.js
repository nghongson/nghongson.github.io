"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[282],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>p});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var d=n.createContext({}),s=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,d=e.parentName,m=a(e,["components","mdxType","originalType","parentName"]),u=s(r),p=o,v=u["".concat(d,".").concat(p)]||u[p]||c[p]||i;return r?n.createElement(v,l(l({ref:t},m),{},{components:r})):n.createElement(v,l({ref:t},m))}));function p(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,l=new Array(i);l[0]=u;var a={};for(var d in t)hasOwnProperty.call(t,d)&&(a[d]=t[d]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var s=2;s<i;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},9115:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>a,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const i={},l=void 0,a={unversionedId:"vim/vim-mode",id:"vim/vim-mode",title:"vim-mode",description:"Normal Mode",source:"@site/docs/vim/vim-mode.md",sourceDirName:"vim",slug:"/vim/vim-mode",permalink:"/docs/vim/vim-mode",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"register",permalink:"/docs/vim/register"}},d={},s=[{value:"Normal Mode",id:"normal-mode",level:2},{value:"Insert Mode",id:"insert-mode",level:2},{value:"Visual Mode",id:"visual-mode",level:2},{value:"Visual line mode (v)",id:"visual-line-mode-v",level:4},{value:"Visual blocks mode : (C+v)",id:"visual-blocks-mode--cv",level:4},{value:"Replacing Mode",id:"replacing-mode",level:2},{value:"Command Mode",id:"command-mode",level:2},{value:"Org Mode",id:"org-mode",level:2}],m={toc:s};function c(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"normal-mode"},"Normal Mode"),(0,o.kt)("h2",{id:"insert-mode"},"Insert Mode"),(0,o.kt)("h2",{id:"visual-mode"},"Visual Mode"),(0,o.kt)("h4",{id:"visual-line-mode-v"},"Visual line mode (v)"),(0,o.kt)("h4",{id:"visual-blocks-mode--cv"},"Visual blocks mode : (C+v)"),(0,o.kt)("h2",{id:"replacing-mode"},"Replacing Mode"),(0,o.kt)("h2",{id:"command-mode"},"Command Mode"),(0,o.kt)("h2",{id:"org-mode"},"Org Mode"),(0,o.kt)("p",null,"text and task management plugin for Vim based on Emacs\u2019 Org-Mode"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Syntax highlighting for displaying the text in different colors and fonts."),(0,o.kt)("li",{parentName:"ul"},"Headlines for creating outline trees making it possible to show or hide parts of the text in the buffer."),(0,o.kt)("li",{parentName:"ul"},"Plain lists such as ordered lists (with numbers) and unordered lists (with dashes)."),(0,o.kt)("li",{parentName:"ul"},"Links that behave like HTML hyperlinks to include references to either external files or website URLs."),(0,o.kt)("li",{parentName:"ul"},"Todo lists with checkbox support."),(0,o.kt)("li",{parentName:"ul"},"Formatted dates and times.")))}c.isMDXComponent=!0}}]);