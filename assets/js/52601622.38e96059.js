"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[622],{3905:(e,n,i)=>{i.d(n,{Zo:()=>s,kt:()=>f});var t=i(7294);function r(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function l(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function a(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?l(Object(i),!0).forEach((function(n){r(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):l(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function o(e,n){if(null==e)return{};var i,t,r=function(e,n){if(null==e)return{};var i,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)i=l[t],n.indexOf(i)>=0||(r[i]=e[i]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)i=l[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var c=t.createContext({}),p=function(e){var n=t.useContext(c),i=n;return e&&(i="function"==typeof e?e(n):a(a({},n),e)),i},s=function(e){var n=p(e.components);return t.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var i=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=p(i),f=r,v=d["".concat(c,".").concat(f)]||d[f]||u[f]||l;return i?t.createElement(v,a(a({ref:n},s),{},{components:i})):t.createElement(v,a({ref:n},s))}));function f(e,n){var i=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=i.length,a=new Array(l);a[0]=d;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,a[1]=o;for(var p=2;p<l;p++)a[p]=i[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,i)}d.displayName="MDXCreateElement"},8926:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var t=i(7462),r=(i(7294),i(3905));const l={},a=void 0,o={unversionedId:"architect/SOLID",id:"architect/SOLID",title:"SOLID",description:"- Single Responsibility Principle",source:"@site/docs/architect/SOLID.md",sourceDirName:"architect",slug:"/architect/SOLID",permalink:"/docs/architect/SOLID",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"K.I.S.S Principle",permalink:"/docs/architect/KISS"},next:{title:"GraphQL",permalink:"/docs/architect/api/GraphQL"}},c={},p=[{value:"1, Single Responsibility Principle",id:"1-single-responsibility-principle",level:2},{value:"Coupling &amp; Cohesion",id:"coupling--cohesion",level:3},{value:"Package names",id:"package-names",level:3},{value:"Bad package names",id:"bad-package-names",level:3},{value:"Go\u2019s UNIX philosophy",id:"gos-unix-philosophy",level:3},{value:"2, Open / Closed Principle",id:"2-open--closed-principle",level:2},{value:"3, Liskov Substitution Principle",id:"3-liskov-substitution-principle",level:2},{value:"4, Interface Segregation Principle",id:"4-interface-segregation-principle",level:2},{value:"Interfaces",id:"interfaces",level:3},{value:"5, Dependency Inversion Principle",id:"5-dependency-inversion-principle",level:2}],s={toc:p};function u(e){let{components:n,...i}=e;return(0,r.kt)("wrapper",(0,t.Z)({},s,i,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Single Responsibility Principle"),(0,r.kt)("li",{parentName:"ul"},"Open / Closed Principle"),(0,r.kt)("li",{parentName:"ul"},"Liskov Substitution Principle"),(0,r.kt)("li",{parentName:"ul"},"Interface Segregation Principle"),(0,r.kt)("li",{parentName:"ul"},"Dependency Inversion Principle")),(0,r.kt)("h2",{id:"1-single-responsibility-principle"},"1, Single Responsibility Principle"),(0,r.kt)("h3",{id:"coupling--cohesion"},"Coupling & Cohesion"),(0,r.kt)("h3",{id:"package-names"},"Package names"),(0,r.kt)("h3",{id:"bad-package-names"},"Bad package names"),(0,r.kt)("h3",{id:"gos-unix-philosophy"},"Go\u2019s UNIX philosophy"),(0,r.kt)("h2",{id:"2-open--closed-principle"},"2, Open / Closed Principle"),(0,r.kt)("h2",{id:"3-liskov-substitution-principle"},"3, Liskov Substitution Principle"),(0,r.kt)("h2",{id:"4-interface-segregation-principle"},"4, Interface Segregation Principle"),(0,r.kt)("h3",{id:"interfaces"},"Interfaces"),(0,r.kt)("h2",{id:"5-dependency-inversion-principle"},"5, Dependency Inversion Principle"))}u.isMDXComponent=!0}}]);