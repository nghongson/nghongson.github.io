"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6530],{89186:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>a});var r=l(74848),d=l(28453);const s={},i="Middleware in Nestjs",t={id:"nodejs/Nestjs/Middleware",title:"Middleware in Nestjs",description:"Middleware is a function which is called before the route handler.",source:"@site/docs/nodejs/Nestjs/Middleware.md",sourceDirName:"nodejs/Nestjs",slug:"/nodejs/Nestjs/Middleware",permalink:"/docs/nodejs/Nestjs/Middleware",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Injection",permalink:"/docs/nodejs/Nestjs/Injection"},next:{title:"Repository in Nestjs",permalink:"/docs/nodejs/Nestjs/Repository"}},o={},a=[{value:"Application-level middleware",id:"Application-level-middleware",level:2},{value:"Router-level middleware",id:"Router-level-middleware",level:2},{value:"Error-handling middleware",id:"Error-handling-middleware",level:2},{value:"Nestjs middleware apply",id:"Nestjs-middleware-apply",level:2},{value:"implement custom Nest middleware",id:"implement-custom-Nest-middleware",level:3},{value:"Function middleware",id:"Function-middleware",level:3},{value:"Applying middleware",id:"Applying-middleware",level:3},{value:"Middleware consumer",id:"Middleware-consumer",level:3},{value:"Multiple middleware",id:"Multiple-middleware",level:3},{value:"Global middleware",id:"Global-middleware",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"Middleware-in-Nestjs",children:"Middleware in Nestjs"}),"\n",(0,r.jsx)(n.p,{children:"Middleware is a function which is called before the route handler.\nNest middleware are, by default, equivalent to express middleware.\n![[Pasted image 20240608180252.png]]"}),"\n",(0,r.jsx)(n.h2,{id:"Application-level-middleware",children:"Application-level middleware"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const express = require('express')\nconst app = express()\n\napp.use((req, res, next) => {\n  console.log('Time:', Date.now())\n  next()\n})\n\nor\n\napp.use('/user/:id', (req, res, next) => {\n  console.log('Request Type:', req.method)\n  next()\n})\n"})}),"\n",(0,r.jsx)(n.h2,{id:"Router-level-middleware",children:"Router-level middleware"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{})}),"\n",(0,r.jsx)(n.h2,{id:"Error-handling-middleware",children:"Error-handling middleware"}),"\n",(0,r.jsx)(n.h2,{id:"Nestjs-middleware-apply",children:"Nestjs middleware apply"}),"\n",(0,r.jsx)(n.h3,{id:"implement-custom-Nest-middleware",children:"implement custom Nest middleware"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"\nimport { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    console.log('Request...');\n    next();\n  }\n}\n\n\n\n"})}),"\n",(0,r.jsx)(n.h3,{id:"Function-middleware",children:"Function middleware"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Request, Response, NextFunction } from 'express';\n\nexport function logger(req: Request, res: Response, next: NextFunction) {\n  console.log(`Request...`);\n  next();\n};\n\n\n"})}),"\n",(0,r.jsx)(n.h3,{id:"Applying-middleware",children:"Applying middleware"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Module, NestModule, MiddlewareConsumer } from '@nestjs/common';\nimport { LoggerMiddleware } from './common/middleware/logger.middleware';\nimport { CatsModule } from './cats/cats.module';\n\n@Module({\n  imports: [CatsModule],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(LoggerMiddleware)\n      .forRoutes('cats');\n\t  // or Apply\n\tconsumer\n\t  .apply(logger)\n\t  .forRoutes(CatsController);\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"Middleware-consumer",children:"Middleware consumer"}),"\n",(0,r.jsx)(n.p,{children:"The MiddlewareConsumer is a helper class. It provides several built-in methods to manage middleware"}),"\n",(0,r.jsx)(n.h3,{id:"Multiple-middleware",children:"Multiple middleware"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"consumer.apply(cors(), helmet(), logger).forRoutes(CatsController);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"Global-middleware",children:"Global middleware"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Use express\nconst app = await NestFactory.create(AppModule);\napp.use(logger);\nawait app.listen(3000);\n"})})]})}function p(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,l)=>{l.d(n,{R:()=>i,x:()=>t});var r=l(96540);const d={},s=r.createContext(d);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);